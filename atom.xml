<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RuSun&#39;s Blog</title>
  
  <subtitle>Good luck noip2021</subtitle>
  <link href="https://rusunoi.github.io/atom.xml" rel="self"/>
  
  <link href="https://rusunoi.github.io/"/>
  <updated>2021-11-19T13:58:30.000Z</updated>
  <id>https://rusunoi.github.io/</id>
  
  <author>
    <name>RuSun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>高斯消元模板</title>
    <link href="https://rusunoi.github.io/2021/11/19/Gaussian-Elimination-Template/"/>
    <id>https://rusunoi.github.io/2021/11/19/Gaussian-Elimination-Template/</id>
    <published>2021-11-19T13:51:41.000Z</published>
    <updated>2021-11-19T13:58:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>用于求多元一次方程组的解。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-4</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> A[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gauss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; c &lt; n; c++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = r;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[i][c]) &gt; <span class="built_in">fabs</span>(A[t][c]))</span><br><span class="line">t = i;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[t][c]) &lt; eps)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = c; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">swap</span>(A[t][i], A[r][i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= c; i--)</span><br><span class="line">A[r][i] /= A[r][c];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[i][c]) &gt; eps)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n; j &gt;= c; j--)</span><br><span class="line">A[i][j] -= A[r][j] * A[i][c];</span><br><span class="line">r++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (r &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[i][n]) &gt; eps)</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; ++j)</span><br><span class="line">A[i][n] -= A[i][j] * A[j][n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">cin &gt;&gt; A[i][j];</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">Gauss</span>();</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, A[i][n]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;用于求多元一次方程组的解。&lt;/p&gt;</summary>
    
    
    
    
    <category term="模板" scheme="https://rusunoi.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="数学" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="高斯消元" scheme="https://rusunoi.github.io/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>P2158</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2158/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2158/</id>
    <published>2021-11-19T12:36:36.000Z</published>
    <updated>2021-11-19T13:16:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2158">P2158 [SDOI2008] 仪仗队</a></p><span id="more"></span><p>好像可以直接推导用 $\varphi$ 做的，当时好像也是这么做的，现在直接莫反。</p><p>除去 $(1, 0)$ 和 $(0, 1)$ 两点，剩下的点数中，如果横纵坐标不互质，那么一定有一个坐标把它挡住，故答案为：<br>$$<br>\begin{aligned}<br>&amp;\sum _ {i = 1} ^ {n - 1} \sum _ {j = 1} ^ {n - 1}[gcd(i, j) = 1]\\<br>=&amp; \sum _ {i = 1} ^ {n - 1} \sum _ {j = 1} ^ {n - 1} \sum _ {d | gcd(i, j)} \mu (d)\\<br>=&amp; \sum _ {i = 1} ^ {n - 1} \sum _ {j = 1} ^ {n - 1} \sum _ {d | i \wedge  d | j} \mu (d)\\<br>=&amp; \sum _ {d = 1} ^ {n - 1} \mu (d) \sum _ {i = 1} ^ {n - 1} [d |i] \sum _ {i = 1} ^ {n - 1} [d |j]\\<br>=&amp; \sum _ {d = 1} ^ {n - 1} \mu (d) \left \lfloor \frac {n - 1}  d\right \rfloor ^ 2\\<br>\end{aligned}<br>$$<br>再 $+2$ 即可。</p><p>注意特判 $n = 1$ ，答案为 $0$ 。</p><p>可以数论分块。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> cnt, primes[N], mu[N], smu[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[i])</span><br><span class="line">&#123;</span><br><span class="line">primes[++cnt] = i;</span><br><span class="line">mu[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * primes[j] &lt; N; j++)</span><br><span class="line">&#123;</span><br><span class="line">vis[i * primes[j]] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">mu[i * primes[j]] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">mu[i * primes[j]] = -mu[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">smu[i] = smu[i - <span class="number">1</span>] + mu[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">n--;</span><br><span class="line"><span class="keyword">if</span> (!n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= n; l = r + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = n / (n / l);</span><br><span class="line">res += (smu[r] - smu[l - <span class="number">1</span>]) * (n / l) * (n / l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2158&quot;&gt;P2158 [SDOI2008] 仪仗队&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="数学" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="莫反与积性函数" scheme="https://rusunoi.github.io/tags/%E8%8E%AB%E5%8F%8D%E4%B8%8E%E7%A7%AF%E6%80%A7%E5%87%BD%E6%95%B0/"/>
    
    <category term="数论分块" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>P3324 [SDOI2015]星际战争</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3324/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3324/</id>
    <published>2021-11-19T11:55:43.000Z</published>
    <updated>2021-11-19T12:12:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3324">P3324 [SDOI2015]星际战争</a></p><span id="more"></span><p>不知道为什么不能实数上的费用流，但是确实很奇怪。</p><p>求最小值，考虑二分。对于每一个激光武器，其攻击力此时等于其攻击力乘上时间，做最大流，看是否可以跑慢流量。</p><p>好像有点卡精度。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf DBL_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> path[N][N];</span><br><span class="line"><span class="keyword">int</span> d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, A[N], B[M];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">double</span> tot, wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">exploit</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">double</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>(t) &lt; eps)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span> <span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, A[i]);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (path[i][j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(j, i + n, inf);</span><br><span class="line"><span class="built_in">add</span>(i + n, j, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i + n, ed, x * B[i]);</span><br><span class="line"><span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">abs</span>(<span class="built_in">dinic</span>() - tot) &lt; eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; A[i];</span><br><span class="line">tot += A[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">cin &gt;&gt; B[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">cin &gt;&gt; path[i][j];</span><br><span class="line"><span class="keyword">double</span> l = <span class="number">0</span>, r = <span class="number">1e6</span>, mid;</span><br><span class="line"><span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3324&quot;&gt;P3324 [SDOI2015]星际战争&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最大流" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
    <category term="二分" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>P3967 [TJOI2014]匹配</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3967/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3967/</id>
    <published>2021-11-19T11:42:37.000Z</published>
    <updated>2021-11-19T11:46:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3967">P3967 [TJOI2014]匹配</a></p><span id="more"></span><p>先做带权匹配，对于每一条匹配的边，如果删除了后答案减小，则一定是匹配边。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N], intersection[M];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, ans, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = -inf;</span><br><span class="line">incf[st] = inf;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &gt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cost = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">cost += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cost;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n + <span class="number">1</span>; j &lt; ed; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, j, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; (ans = <span class="built_in">ek</span>()) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n &lt;&lt; <span class="number">1</span>; i &lt; n * <span class="number">2</span> + n * n * <span class="number">2</span>; i += <span class="number">2</span>)</span><br><span class="line">intersection[i] = wt[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n &lt;&lt; <span class="number">1</span>; i &lt; n * <span class="number">2</span> + n * n * <span class="number">2</span>; i += <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> (!intersection[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= idx; j += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[j] += wt[j ^ <span class="number">1</span>];</span><br><span class="line">wt[j ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t = wt[i];</span><br><span class="line">wt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">ek</span>() &lt; ans)</span><br><span class="line">cout &lt;&lt; edg[i ^ <span class="number">1</span>] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; edg[i] - n &lt;&lt; endl;</span><br><span class="line">wt[i] = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3967&quot;&gt;P3967 [TJOI2014]匹配&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P1935 [国家集训队]圈地计划</title>
    <link href="https://rusunoi.github.io/2021/11/19/P1935/"/>
    <id>https://rusunoi.github.io/2021/11/19/P1935/</id>
    <published>2021-11-19T11:35:07.000Z</published>
    <updated>2021-11-19T11:36:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1935">P1935 [国家集训队]圈地计划</a></p><span id="more"></span><p>经典的建图模型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, ans, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">tot = ed = n * m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> p = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, p, a);</span><br><span class="line"><span class="built_in">add</span>(p, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(p, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, p, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> p = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(p, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, p, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, p, a);</span><br><span class="line"><span class="built_in">add</span>(p, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> p = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k], ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> q = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">ans += a &lt;&lt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, p, inf);</span><br><span class="line"><span class="built_in">add</span>(p, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, q, inf);</span><br><span class="line"><span class="built_in">add</span>(q, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(p, tot, inf);</span><br><span class="line"><span class="built_in">add</span>(tot, p, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(q, tot, inf);</span><br><span class="line"><span class="built_in">add</span>(tot, q, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line">cout &lt;&lt; ans - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1935&quot;&gt;P1935 [国家集训队]圈地计划&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>P3391 【模板】文艺平衡树</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3391/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3391/</id>
    <published>2021-11-19T11:32:19.000Z</published>
    <updated>2021-11-19T11:34:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3391">P3391 【模板】文艺平衡树</a></p><span id="more"></span><p>带区间操作的平衡树。</p><p>对于一个区间翻转，所有子树全部翻转即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, root, idx;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">2</span>], p, v;</span><br><span class="line"><span class="keyword">int</span> sz, flag;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v = a, p = b;</span><br><span class="line">sz = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;tr[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(tr[x].s[<span class="number">0</span>], tr[x].s[<span class="number">1</span>]);</span><br><span class="line">tr[tr[x].s[<span class="number">0</span>]].flag ^= <span class="number">1</span>;</span><br><span class="line">tr[tr[x].s[<span class="number">1</span>]].flag ^= <span class="number">1</span>;</span><br><span class="line">tr[x].flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y, tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">root = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = root, p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">p = u, u = tr[u].s[v &gt; tr[u].v];</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[v &gt; tr[p].v] = u;</span><br><span class="line">tr[u].<span class="built_in">init</span>(v, p);</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_k</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = root;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz &gt;= k)</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span> &gt;= k)</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">k -= tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="keyword">if</span> (tr[u].s[<span class="number">0</span>]) </span><br><span class="line"><span class="built_in">output</span>(tr[u].s[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &gt;= <span class="number">1</span> &amp;&amp; tr[u].v &lt;= n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, tr[u].v);</span><br><span class="line"><span class="keyword">if</span> (tr[u].s[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">output</span>(tr[u].s[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line"><span class="built_in">insert</span>(i);</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">a = <span class="built_in">get_k</span>(a), b = <span class="built_in">get_k</span>(b + <span class="number">2</span>);</span><br><span class="line"><span class="built_in">splay</span>(a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(b, a);</span><br><span class="line">tr[tr[b].s[<span class="number">0</span>]].flag ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">output</span>(root);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3391&quot;&gt;P3391 【模板】文艺平衡树&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2073 送花</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2073/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2073/</id>
    <published>2021-11-19T11:26:59.000Z</published>
    <updated>2021-11-19T11:28:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2073">P2073 送花</a></p><span id="more"></span><p>这里 <code>STL</code> 乱搞。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line">map &lt;LL, LL&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (mp.<span class="built_in">count</span>(b))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">mp.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(b, a));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span> &amp;&amp; !mp.<span class="built_in">empty</span>())</span><br><span class="line">mp.<span class="built_in">erase</span>(--mp.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span> &amp;&amp; !mp.<span class="built_in">empty</span>())</span><br><span class="line">mp.<span class="built_in">erase</span>(mp.<span class="built_in">begin</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (map&lt;LL, LL&gt;:: iterator it = mp.<span class="built_in">begin</span>(); it != mp.<span class="built_in">end</span>(); it++)</span><br><span class="line">res1 += (*it).second,</span><br><span class="line">res2 += (*it).first;</span><br><span class="line">cout &lt;&lt; res1 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; res2;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2073&quot;&gt;P2073 送花&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>KMP &amp; Trie &amp; AC自动机 模板</title>
    <link href="https://rusunoi.github.io/2021/11/19/KMP-Trie-AC-Automata-Template/"/>
    <id>https://rusunoi.github.io/2021/11/19/KMP-Trie-AC-Automata-Template/</id>
    <published>2021-11-19T11:23:08.000Z</published>
    <updated>2021-11-19T13:58:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>用于字符串问题。</p><span id="more"></span><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">nxt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &amp;&amp; s[i] != s[j])</span><br><span class="line">        j = nxt[j];</span><br><span class="line">    <span class="keyword">if</span> (s[i] == s[j])</span><br><span class="line">        j++;</span><br><span class="line">    nxt[i + <span class="number">1</span>] = j;<span class="comment">//此时i与j - 1是匹配的，当i + 1不能匹配时可以尝试j</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; t.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &amp;&amp; t[i] != s[j])</span><br><span class="line">        j = nxt[j];</span><br><span class="line">    <span class="keyword">if</span> (t[i] == s[j])</span><br><span class="line">        j++;</span><br><span class="line">    <span class="keyword">if</span> (j == s.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i - s.<span class="built_in">size</span>() + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        j = nxt[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例：$abcabdababcabc$ 中匹配 $abcabc$</p><p>性质：一段前缀区间里的前缀等于后缀。</p><p>大多数 $KMP$ 模板的字符需要从 $1$ 开始，这里提供一种直接从 $0$ 开始的模板。</p><p>但是注意，这里的 $nxt$ 数组是从 $1$ 开始的。</p><h2 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">trie</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> nxt[N][<span class="number">26</span>], cnt;</span><br><span class="line"><span class="keyword">bool</span> exist[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c = s[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!nxt[p][c])</span><br><span class="line">nxt[p][c] = ++cnt;</span><br><span class="line">p = nxt[p][c];</span><br><span class="line">&#125;</span><br><span class="line">exist[p] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">find</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c = s[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!nxt[p][c])</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">p = nxt[p][c];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> exist[p];</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h2><p>$AC自动机 = KMP + Trie$ </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (tr[<span class="number">0</span>][i])</span><br><span class="line">q.<span class="built_in">push</span>(tr[<span class="number">0</span>][i]);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> p = tr[t][i];</span><br><span class="line"><span class="keyword">if</span> (!p)</span><br><span class="line">tr[t][i] = tr[nxt[t]][i];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">nxt[p] = tr[nxt[t]][i];</span><br><span class="line">q.<span class="built_in">push</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(string str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!tr[p][t])</span><br><span class="line">tr[p][t] = ++idx;</span><br><span class="line">p = tr[p][t];</span><br><span class="line">&#125;</span><br><span class="line">cnt[p]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(string str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">j = tr[j][str[i] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">int</span> p = j;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; cnt[p])</span><br><span class="line">&#123;</span><br><span class="line">res += cnt[p];</span><br><span class="line">cnt[p] = <span class="number">0</span>;</span><br><span class="line">p = nxt[p];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;用于字符串问题。&lt;/p&gt;</summary>
    
    
    
    
    <category term="模板" scheme="https://rusunoi.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="KMP" scheme="https://rusunoi.github.io/tags/KMP/"/>
    
    <category term="Trie" scheme="https://rusunoi.github.io/tags/Trie/"/>
    
    <category term="AC自动机" scheme="https://rusunoi.github.io/tags/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>平衡树模板</title>
    <link href="https://rusunoi.github.io/2021/11/19/Balanced-Tree-Template/"/>
    <id>https://rusunoi.github.io/2021/11/19/Balanced-Tree-Template/</id>
    <published>2021-11-19T11:17:39.000Z</published>
    <updated>2021-11-19T13:57:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>用于维护排名、第 $k$ 大数等。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, inf = <span class="number">1e7</span> + <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> p, sz, s[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> v, cnt;</span><br><span class="line">&#125; tr[N];</span><br><span class="line"><span class="keyword">int</span> m, rt, idx;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + tr[x].cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y;</span><br><span class="line">tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">rt = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, p;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v == x)</span><br><span class="line">&#123;</span><br><span class="line">tr[u].cnt++;</span><br><span class="line">tr[u].sz++;</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">p = u;</span><br><span class="line">u = tr[u].s[x &gt; tr[u].v];</span><br><span class="line">&#125;</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[x &gt; tr[p].v] = u;</span><br><span class="line">tr[u].v = x;</span><br><span class="line">tr[u].sz = <span class="number">1</span>;</span><br><span class="line">tr[u].p = p;</span><br><span class="line">tr[u].cnt = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">rt = ++idx;</span><br><span class="line">tr[rt].p = <span class="number">0</span>;</span><br><span class="line">tr[rt].sz = <span class="number">1</span>;</span><br><span class="line">tr[rt].cnt = <span class="number">1</span>;</span><br><span class="line">tr[rt].v = inf;</span><br><span class="line"><span class="built_in">insert</span>(-inf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pre</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res, v = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">v = u;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &lt; x)</span><br><span class="line">&#123;</span><br><span class="line">res = u;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(v, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nxt</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res, v = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">v = u;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &gt; x)</span><br><span class="line">&#123;</span><br><span class="line">res = u;</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(v, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">pre</span>(x), r = <span class="built_in">nxt</span>(x);</span><br><span class="line"><span class="built_in">splay</span>(l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(r, l);</span><br><span class="line">tr[tr[r].s[<span class="number">0</span>]].cnt--;</span><br><span class="line">tr[tr[r].s[<span class="number">0</span>]].sz--;</span><br><span class="line"><span class="keyword">if</span> (!tr[tr[r].s[<span class="number">0</span>]].cnt)</span><br><span class="line">&#123;</span><br><span class="line">tr[tr[r].s[<span class="number">0</span>]].p = <span class="number">0</span>;</span><br><span class="line">tr[r].s[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(r, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz &gt;= x)</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x &lt;= tr[tr[u].s[<span class="number">0</span>]].sz + tr[u].cnt &amp;&amp; x &gt;= tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x -= tr[tr[u].s[<span class="number">0</span>]].sz + tr[u].cnt;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> op, x; m; m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;op, &amp;x);</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">insert</span>(x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>)</span><br><span class="line"><span class="built_in">remove</span>(x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">splay</span>(<span class="built_in">pre</span>(x), <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[tr[rt].s[<span class="number">0</span>]].sz + tr[rt].cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">4</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[<span class="built_in">num</span>(x + <span class="number">1</span>)].v);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">5</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[<span class="built_in">pre</span>(x)].v);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">6</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[<span class="built_in">nxt</span>(x)].v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;用于维护排名、第 $k$ 大数等。&lt;/p&gt;</summary>
    
    
    
    
    <category term="模板" scheme="https://rusunoi.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2939 [USACO09FEB]Revamping Trails G</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2939/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2939/</id>
    <published>2021-11-19T11:12:18.000Z</published>
    <updated>2021-11-19T11:13:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2939">P2939 [USACO09FEB]Revamping Trails G</a></p><span id="more"></span><p>左转飞行路线。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2939&quot;&gt;P2939 [USACO09FEB]Revamping Trails G&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="分层图最短路" scheme="https://rusunoi.github.io/tags/%E5%88%86%E5%B1%82%E5%9B%BE%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>P1948 [USACO08JAN]Telephone Lines S</title>
    <link href="https://rusunoi.github.io/2021/11/19/P1948/"/>
    <id>https://rusunoi.github.io/2021/11/19/P1948/</id>
    <published>2021-11-19T10:18:10.000Z</published>
    <updated>2021-11-19T11:08:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1948">P1948 [USACO08JAN]Telephone Lines S</a></p><span id="more"></span><p>概括题意：将图上的 $k$ 条边的边权改为 $0$ 后，求图中所有路径边权最大值的最小值。</p><p>考虑二分答案，对于当前的二分值 $x$ ，除了 $k$ 个边权允许使用免费，不允许边权再大于 $x$ ，判断是否存在一条路径从起点到终点。那么，我们需要知道从起点到终点最少使用多少次免费，边权大于 $x$ 的必须使用免费，将边权改为 $1$ ；否则，边权改为 $0$ 。做最短路即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, k, dis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], lth[M];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">vis[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (dis[t] + wt[i] &lt; dis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">dis[edg[i]] = dis[t] + wt[i];</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i++)</span><br><span class="line">wt[i] = lth[i] &gt; x;</span><br><span class="line"><span class="built_in">spfa</span>();</span><br><span class="line"><span class="keyword">return</span> dis[n] &lt;= k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">lth[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>, mid;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">r = <span class="built_in">max</span>(r, c);</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i++)</span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">spfa</span>();</span><br><span class="line"><span class="keyword">if</span> (dis[n] == INF)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1948&quot;&gt;P1948 [USACO08JAN]Telephone Lines S&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="二分" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>P4513 小白逛公园</title>
    <link href="https://rusunoi.github.io/2021/11/19/P4513/"/>
    <id>https://rusunoi.github.io/2021/11/19/P4513/</id>
    <published>2021-11-19T09:22:23.000Z</published>
    <updated>2021-11-19T11:11:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4513">P4513 小白逛公园</a></p><span id="more"></span><p>线段树做最大子段和，考虑如何从两个区间合并子段和。</p><p>最大子段和可能从下面的情况转移得到：</p><ul><li>左区间的最大子段和；</li><li>右区间的最大子段和；</li><li>左区间最右边开始的最大子段和加上右区间最左边开始的最大子段和。</li></ul><p>考虑区间最左边开始的最大子段和如何维护，可能从下面的情况转移得到：</p><ul><li>左区间的最左边开始的最大子段和；</li><li>左区间的总和加上右区间的最左边开始的最大子段和。</li></ul><p>最右边开始的最大子段和同理。</p><p> <code>tmx</code> 表示当前区间最大子段和子段和，<code>lmx</code> 表示从当前区间最左边开始的最大子段和，<code>rmx</code> 同理，同时维护区间和 <code>sum</code> 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, k[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r, sum, lmx, rmx, tmx;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">l = r = a;</span><br><span class="line">sum = lmx = rmx = tmx = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = x &lt;&lt; <span class="number">1</span>, r = x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">tr[x].sum = tr[l].sum + tr[r].sum;</span><br><span class="line">tr[x].lmx = <span class="built_in">max</span>(tr[l].lmx, tr[l].sum + tr[r].lmx);</span><br><span class="line">tr[x].rmx = <span class="built_in">max</span>(tr[r].rmx, tr[r].sum + tr[l].rmx);</span><br><span class="line">tr[x].tmx = <span class="built_in">max</span>(<span class="built_in">max</span>(tr[l].tmx, tr[r].tmx), tr[l].rmx + tr[r].lmx);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l == r)</span><br><span class="line">&#123;</span><br><span class="line">tr[x].<span class="built_in">add</span>(l, k[l]);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">tr[x].l = l;</span><br><span class="line">tr[x].r = r;</span><br><span class="line"><span class="built_in">build</span>(x &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> h, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].l == h &amp;&amp; tr[x].r == h)</span><br><span class="line">&#123;</span><br><span class="line">tr[x].<span class="built_in">add</span>(h, k);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = tr[x].l + tr[x].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (h &lt;= mid)</span><br><span class="line"><span class="built_in">modify</span>(x &lt;&lt; <span class="number">1</span>, h, k);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">modify</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h, k);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Node <span class="title">query</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].l &gt;= l &amp;&amp; tr[x].r &lt;= r)</span><br><span class="line"><span class="keyword">return</span> tr[x];</span><br><span class="line"><span class="keyword">int</span> mid = tr[x].l + tr[x].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (r &lt;= mid)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">query</span>(x &lt;&lt; <span class="number">1</span>, l, r);</span><br><span class="line"><span class="keyword">if</span> (l &gt; mid)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">query</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">Node res, lft = <span class="built_in">query</span>(x &lt;&lt; <span class="number">1</span>, l, r), rt = <span class="built_in">query</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r);</span><br><span class="line">res.sum = lft.sum + rt.sum;</span><br><span class="line">res.lmx = <span class="built_in">max</span>(lft.lmx, lft.sum + rt.lmx);</span><br><span class="line">res.rmx = <span class="built_in">max</span>(rt.rmx, rt.sum + lft.rmx);</span><br><span class="line">res.tmx = <span class="built_in">max</span>(<span class="built_in">max</span>(lft.tmx, rt.tmx), lft.rmx + rt.lmx);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; T;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; k[i];</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (b &gt; c)</span><br><span class="line"><span class="built_in">swap</span>(b, c);</span><br><span class="line">cout &lt;&lt; <span class="built_in">query</span>(<span class="number">1</span>, b, c).tmx &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">modify</span>(<span class="number">1</span>, b, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4513&quot;&gt;P4513 小白逛公园&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="线段树" scheme="https://rusunoi.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2999 [USACO10NOV]Chocolate Milk S</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2999/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2999/</id>
    <published>2021-11-19T09:19:46.000Z</published>
    <updated>2021-11-19T09:20:36.640Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2999">P2999 [USACO10NOV]Chocolate Milk S</a></p><span id="more"></span><p>按照题意拓扑排序即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, cnt, din[N], dout[N], flow[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b);</span><br><span class="line">din[b]++;</span><br><span class="line">dout[a]++;</span><br><span class="line">&#125;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!din[i])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line">flow[i] = <span class="number">1</span>;</span><br><span class="line">vis[i] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (dout[t] &gt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">flow[edg[i]] += flow[t];</span><br><span class="line">din[edg[i]]--;</span><br><span class="line"><span class="keyword">if</span> (!din[edg[i]])</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (flow[i] == cnt &amp;&amp; !vis[i])</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2999&quot;&gt;P2999 [USACO10NOV]Chocolate Milk S&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="拓扑排序" scheme="https://rusunoi.github.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>P1379 八数码难题</title>
    <link href="https://rusunoi.github.io/2021/11/19/P1379/"/>
    <id>https://rusunoi.github.io/2021/11/19/P1379/</id>
    <published>2021-11-19T09:16:31.000Z</published>
    <updated>2021-11-19T09:18:34.070Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1379">P1379 八数码难题</a></p><span id="more"></span><p>直接搜索即可，<code>map</code> 判重。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair &lt;string, <span class="keyword">int</span>&gt; PSI;</span><br><span class="line"><span class="keyword">const</span> string ed = <span class="string">&quot;123804765&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line">queue &lt;PSI&gt; q;</span><br><span class="line">unordered_set &lt;string&gt; vis;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt;= <span class="number">0</span> &amp;&amp; x &lt; <span class="number">3</span> &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; y &lt; <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">PSI t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (t.first == ed)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; t.second;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">t.second++;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t.first.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="keyword">if</span> (t.first[i] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = i / <span class="number">3</span>;</span><br><span class="line">y = i % <span class="number">3</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = x + dx[i],</span><br><span class="line">ny = y + dy[i];</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">swap</span>(t.first[x * <span class="number">3</span> + y], t.first[nx * <span class="number">3</span> + ny]);</span><br><span class="line"><span class="keyword">if</span> (!vis.<span class="built_in">count</span>(t.first))</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(t);</span><br><span class="line">vis.<span class="built_in">insert</span>(t.first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">swap</span>(t.first[x * <span class="number">3</span> + y], t.first[nx * <span class="number">3</span> + ny]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(t, <span class="number">0</span>));</span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1379&quot;&gt;P1379 八数码难题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="暴力" scheme="https://rusunoi.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>P1407 [国家集训队]稳定婚姻</title>
    <link href="https://rusunoi.github.io/2021/11/19/P1407/"/>
    <id>https://rusunoi.github.io/2021/11/19/P1407/</id>
    <published>2021-11-19T08:00:23.000Z</published>
    <updated>2021-11-19T08:59:33.780Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1407">P1407 [国家集训队]稳定婚姻</a></p><span id="more"></span><p>应该二分图匹配可以过的，匈牙利中，对于一对夫妻，只用做一次增广即可，但是 <code>dinic</code> 需要将整个图做一次，所以过不了。</p><p>正解是 <code>tarjan</code> ，如图，<code>h &amp; w</code> 表示是夫妻关系，<code>lovers</code> 表示使情人关系，如果如图形成了一个环，那么每个人都可以选择一个就近的情人。</p><img src="/2021/11/19/P1407/1.png" class="" title="P1407-1"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">8e3</span> + <span class="number">10</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">map &lt;string, <span class="keyword">int</span>&gt; name;</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">int</span> cnt, stmp, id[N], dfn[N], low[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[edg[i]])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] == low[x])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">id[y] = cnt;</span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">name[a] = i &lt;&lt; <span class="number">1</span>;</span><br><span class="line">name[b] = i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span>, i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(name[b], name[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i])</span><br><span class="line"><span class="built_in">tarjan</span>(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (id[i &lt;&lt; <span class="number">1</span>] == id[i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Unsafe&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Safe&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1407&quot;&gt;P1407 [国家集训队]稳定婚姻&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="tarjan" scheme="https://rusunoi.github.io/tags/tarjan/"/>
    
    <category term="二分图" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
    <category term="二分图的最大匹配" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
  <entry>
    <title>SP300 CABLETV - Cable TV Network</title>
    <link href="https://rusunoi.github.io/2021/11/19/SP300/"/>
    <id>https://rusunoi.github.io/2021/11/19/SP300/</id>
    <published>2021-11-19T07:35:31.000Z</published>
    <updated>2021-11-19T07:40:52.080Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/CABLETV/">SPOJ: CABLETV - Cable TV Network</a></p><p><a href="https://www.luogu.com.cn/problem/SP300">LuoGu: SP300 CABLETV - Cable TV Network</a></p><span id="more"></span><p>求使图不连通的最少割点。图不连通只要存在两点不连通即可，枚举两点，作为源点和汇点。割点，拆点即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">6e3</span> +<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, ans, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (flow == inf)</span><br><span class="line"><span class="keyword">return</span> inf;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">if</span> (res &gt;= ans)</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ans = n;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">PII <span class="title">div</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">s.<span class="built_in">erase</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">s.<span class="built_in">erase</span>(s.<span class="built_in">size</span>() - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!flag)</span><br><span class="line">x = x * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">y = y * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span>, i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, i &lt;&lt; <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">a = <span class="built_in">div</span>(s).first;</span><br><span class="line">b = <span class="built_in">div</span>(s).second;</span><br><span class="line"><span class="built_in">add</span>(a &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, b &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(b &lt;&lt; <span class="number">1</span>, a &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, a &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(a &lt;&lt; <span class="number">1</span>, b &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">&#123;</span><br><span class="line">st = i &lt;&lt;<span class="number">1</span> | <span class="number">1</span>; </span><br><span class="line">ed = j &lt;&lt; <span class="number">1</span>;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, <span class="built_in">dinic</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= idx; k += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[k] += wt[k ^ <span class="number">1</span>];</span><br><span class="line">wt[k ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.spoj.com/problems/CABLETV/&quot;&gt;SPOJ: CABLETV - Cable TV Network&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/SP300&quot;&gt;LuoGu: SP300 CABLETV - Cable TV Network&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="拆点" scheme="https://rusunoi.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>P2053 [SCOI2007]修车</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2053/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2053/</id>
    <published>2021-11-19T07:22:15.000Z</published>
    <updated>2021-11-19T07:34:15.270Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2053">P2053 [SCOI2007]修车</a></p><span id="more"></span><p>对于一个工人，修一个车，后面排队的人都得一起等着，将一个工人拆为 $n$ 个点，第 $k$ 个点表示使 $k$ 个人等着的，对于工人的每个点，向每个车连边，记修该车时间为 $t$ ，那么有 $k$ 个人等着的总时间为 $kt$ ，这样就转化为了一个带权匹配问题。因为为了最小代价，所以如果该工人使更少人等待的点没有被匹配到，一定不会选择使更多人等待的点，从而保证了答案符合实际情况（即不会出现一个工人使 $3$ 个人等待的点没有匹配，却匹配了使 $4$ 个人等待的点匹配了，不符合事实）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">610</span>, M = <span class="number">8e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        incf[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = INF;</span><br><span class="line">    incf[st] = INF;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[edg[i]] = d[t] + f[i];</span><br><span class="line">                pre[edg[i]] = i;</span><br><span class="line">                incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = incf[ed];</span><br><span class="line">        res += t * d[ed];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            wt[pre[i]] -= t;</span><br><span class="line">            wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n + n * m + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">add</span>(i, n + (j - <span class="number">1</span>) * n + k, <span class="number">1</span>, k * a);</span><br><span class="line">    <span class="built_in">add</span>(n + (j - <span class="number">1</span>) * n + k, i, <span class="number">0</span>, - k * a);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">add</span>(n + (i - <span class="number">1</span>) * n + j, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">add</span>(ed, n + (i - <span class="number">1</span>) * n + j, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, (<span class="keyword">double</span>)<span class="built_in">ek</span>() / (<span class="keyword">double</span>)n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2053&quot;&gt;P2053 [SCOI2007]修车&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="拆点" scheme="https://rusunoi.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P3866 [TJOI2009] 战争游戏</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3866/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3866/</id>
    <published>2021-11-19T07:07:02.000Z</published>
    <updated>2021-11-19T07:27:20.640Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3866">P3866 [TJOI2009] 战争游戏</a></p><span id="more"></span><p>题意即将敌军的位置和边界的位置割开，因为割点，所以拆点即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>; i &lt;= ed &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    cur[st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = hd[st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed &lt;&lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed &lt;&lt; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = <span class="built_in">num</span>(n, m) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>; i &lt;= ed &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, a ? a : inf);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(h &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span> || j == <span class="number">1</span> || i == n || j == m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(ed &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3866&quot;&gt;P3866 [TJOI2009] 战争游戏&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="拆点" scheme="https://rusunoi.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>P3872 [TJOI2010]电影迷</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3872/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3872/</id>
    <published>2021-11-19T06:46:47.000Z</published>
    <updated>2021-11-19T07:05:57.430Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3872">P3872 [TJOI2010]电影迷</a></p><span id="more"></span><p>最大权闭合子图。</p><p>按照套路即可。源点连正权点，负权点连汇点，流量为绝对值，答案为正权点之和减最小割。当前答案为所有正权点，对于一条边，要么放弃左部的正权点（放弃正权），要么选择右部的负权点（减去负权的绝对值），要么付出相应的代价（减去代价），这些都是减少的，所以正权点之和减去最小割即答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, -a);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3872&quot;&gt;P3872 [TJOI2010]电影迷&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>P2526 [SHOI2001]小狗散步</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2526/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2526/</id>
    <published>2021-11-19T03:37:19.000Z</published>
    <updated>2021-11-19T03:49:00.940Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2526">P2526 [SHOI2001]小狗散步</a></p><span id="more"></span><p>题目有一点没有说清楚：同一个景点多次访问只算一次，或者说只能一个景点访问一次。</p><blockquote><p>Pandog 每次与主人相遇之前最多只去一个景点。</p></blockquote><p>即主人的一段路程中，小狗要以两倍速从起点到达一个景点再到终点，在主人到达之前完成。所以对于每段路程，和可到达的景点匹配即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line">PII dog[N], site[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> z1, <span class="keyword">int</span> z2, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LL a = z1 - site[x].first,</span><br><span class="line">b = z2 - site[x].second,</span><br><span class="line">c = z1 - site[y].first,</span><br><span class="line">d = z2 - site[y].second;</span><br><span class="line">LL t = <span class="number">4</span> * ((a * a + b * b) * (c * c + d * d)),</span><br><span class="line">   h = <span class="number">3</span> * (a * a + b * b + c * c + d * d ) - <span class="number">8</span> * (a * c + b * d);</span><br><span class="line"><span class="keyword">return</span> t &lt;= h * h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; site[i].first &gt;&gt; site[i].second;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; dog[i].first &gt;&gt; dog[i].second;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(j, dog[i].first, dog[i].second, j + <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(j, i + n - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n - <span class="number">1</span>, j, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n + <span class="built_in">dinic</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; site[i].first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; site[i].second &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line"><span class="keyword">if</span> (edg[j] != st &amp;&amp; !wt[j])</span><br><span class="line">cout &lt;&lt; dog[edg[j] - n + <span class="number">1</span>].first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; dog[edg[j] - n + <span class="number">1</span>].second &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; site[n].first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; site[n].second;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2526&quot;&gt;P2526 [SHOI2001]小狗散步&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="二分图" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
    <category term="二分图的最大匹配" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/"/>
    
  </entry>
  
</feed>
