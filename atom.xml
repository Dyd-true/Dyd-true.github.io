<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dyd&#39;s Blog</title>
  
  <subtitle>He who has a strong enough why can bear almost any how.</subtitle>
  <link href="https://dyd-true.github.io/atom.xml" rel="self"/>
  
  <link href="https://dyd-true.github.io/"/>
  <updated>2022-08-31T12:23:40.055Z</updated>
  <id>https://dyd-true.github.io/</id>
  
  <author>
    <name>Dyd</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LOJ542 序列划分</title>
    <link href="https://dyd-true.github.io/2022/08/31/LOJ542-%E5%BA%8F%E5%88%97%E5%88%92%E5%88%86/"/>
    <id>https://dyd-true.github.io/2022/08/31/LOJ542-%E5%BA%8F%E5%88%97%E5%88%92%E5%88%86/</id>
    <published>2022-08-31T08:22:37.000Z</published>
    <updated>2022-08-31T12:23:40.055Z</updated>
    
    <content type="html"><![CDATA[<p> 贪心 + 构造</p><span id="more"></span><p><a href="https://loj.ac/p/542">序列划分</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>神仙玩意，开始乱猜结论 + 乱搞得了 30 pts </p><p>然后看题解：</p><p>对于 $a_i$ ，如果 $k \mid a_i$ 就令 $a_i = 0$ ，否则为 $1$ </p><p><strong>引理 1</strong>：如果有解，必定是 $k \mid n$ 且 $n \ge k^2$ 且 $a_1 = a_n = 0$ </p><p><strong>引理 2</strong>：一定存在合法方案，使得原序列恰好划分为 $k$ 个子序列（证明考虑合并两个子序列后得到的序列仍然合法）</p><p>所以，我们就只考虑划分成 $k$ 个子序列的情况</p><p><strong>引理 3</strong>：在引理 2 的情况下，一定存在方案使得前 $k$ 个 $0$ 是这 $k$ 个序列的左端点，后 $k$ 个 $0$ 是这 $k$ 个子序列的右端点</p><p>证明：</p><p>首先，如果有 $i &lt; j$ 满足 $a_i = a_j = 0$ 且 $i$ 是某个子序列的右端点而 $j$ 是左端点，那么我们交换 $i, j$ ，让 $i$ 当原来 $j$ 所在子序列的左端点， $j$ 当原来 $i$ 所在子序列的右端点，其它数划分不变，一定仍然合法，所以一定有一种合法方案使得所有左端点一定在所有右端点前</p><p>然后，我们考虑左端点，如果存在 $i &lt; j$ 满足 $a_i = a_j = 0$ 且 $i$ 不是端点而 $j$ 是左端点，由于所有左端点一定在所有右端点前，所以 $i \sim j$ 之间没有右端点，所以我们可以交换 $i, j$ ，让 $i$ 当左端点， $j$ 不当端点而去原来 $i$ 所在子序列中取代 $i$ 的位置，此时仍然合法；而对于所以右端点，可以同理</p><p>我们就只考虑满足引理 3 的情况</p><p>有了上面那么多引理，我们有个猜想</p><p><strong>猜想 1</strong>：若存在合法方案，一定存在方案使得子序列之间不存在包含关系，即若 $l_1, r_1$ 是某个子序列的左/右端点， $l_2, r_2$ 是另一个子序列的左/右端点，不存在 $l_1 &lt; l_2 &lt; r_2 &lt; r_1$ </p><p>如果该猜想成立，我们就可以贪心求解</p><p><strong>贪心 1</strong>：对于区间 $[l, r]$ </p><ul><li>若只有 $a_l, a_r$ 一对 $1$ ，直接把整个序列作为一个子序列</li><li>否则，设 $i$ 是左起第二个 $0$ 的位置， $[l, i]$ 之间一共有 $x$ 个 $1$ ，设 $y$ 是最小的满足 $(x + y) \equiv k - 2 \pmod k$ 的自然数， $j$ 是左起第 $x + y$ 个 $1$ 以后第一个 $0$ ，把 $l, j$ 以及那 $x + y$ 个 $1$ 作为一个子序列，然后递归处理剩下的数字，即区间 $[k, r]$ 去掉那 $y$ 个 $1$ 和 $j$ </li></ul><p>但讨厌的是，猜想 1 是假的，甚至样例都 hack 了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">6 2</span><br><span class="line">2 1 2 2 1 2</span><br></pre></td></tr></table></figure><p>我们来看看那里假了：</p><p><img src="https://cdn.jsdelivr.net/gh/Dyd-true/tu/tu.png" alt="tu"></p><p>如图，有包含关系的两点子序列，现在两段子序列是 $a + b + c$ 和 $d$ （不含两端），我们要把它搞成：</p><p><img src="https://cdn.jsdelivr.net/gh/Dyd-true/tu/tu2.png" alt="tu2"></p><p> 那么就要重新分配 $a, b, c, d$ ，显然 $a$ 的必须属于新的较左的序列，考虑用 $b + d$ 补齐为 $k$ 的倍数，但显然有可能不行</p><p>那么何时无法用 $b + d$ 补齐呢？显然是 $a + b + c &gt; a + b + d$ ，即 $a &gt; d$ 的时候，但是，由于 $d + 2 \equiv 0 \pmod k$ ，所以 $d$ 至少是 $k - 2$ ，这意味着 $a \equiv k - 1 \pmod k$ 且 $b = 0$ ，同理也可得 $c \equiv k - 1 \pmod k$ </p><p>综上，猜想不成立当且仅当 $a, c \equiv k - 1 \pmod k$ 且 $b = 0$ </p><p>那么我们继续猜想</p><p><strong>猜想 2</strong>：必定存在合法方案使得 $a_1, a_n$ 在同一个子序列中</p><p>如果猜想成立，我们又有一个贪心（这就是我最开始打的 25 pts 的东西，然后乱搞特判得到 30 pts）</p><p><strong>贪心 2</strong>：直接用引理 3 ，找到 $k$ 对端点，把所有都当成包含关系自外到内贪心分配</p><p>但是，显然也假（不然我为毛 25 pts），也是样例 hack 了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0</span><br><span class="line">15 3</span><br><span class="line">3 1 1 1 1 3 3 1 3 3 1 1 1 1 3</span><br></pre></td></tr></table></figure><p>我们还是来看为啥不对，设两个子序列端点为 $1, r_1$  $l_n, n$ ，由引理 3 显然 $1 &lt; l_n &lt; r_1 &lt; n$ ，那么如果 $l_n$ 到 $r_1$ 之间有至少 $k - 2$ 个数，就可以通过调整使得 $1, n$ 和 $l_n, r_1$ 分别为新的两个子序列的端点，问题是在 $l_n$ 到 $r_1$ 之间不足的时候</p><p>然后神秘的东西就来了：</p><p><strong>引理 4</strong>：若存在合法方案，一定要么猜想 1 成立，要么猜想 2 成立</p><p>别问，问就是“仔细思考，不难发现”</p><p>总之，只要把两个贪心拼一起即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p> 咕了，现在不想码</p><p>看<a href="https://loj.ac/s/30344">std</a>吧</p>]]></content>
    
    
    <summary type="html">&lt;p&gt; 贪心 + 构造&lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="贪心" scheme="https://dyd-true.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
    <category term="构造" scheme="https://dyd-true.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>LOJ540游戏</title>
    <link href="https://dyd-true.github.io/2022/08/30/LOJ540%E6%B8%B8%E6%88%8F/"/>
    <id>https://dyd-true.github.io/2022/08/30/LOJ540%E6%B8%B8%E6%88%8F/</id>
    <published>2022-08-30T08:29:47.000Z</published>
    <updated>2022-08-30T08:45:26.062Z</updated>
    
    <content type="html"><![CDATA[<p> 乱搞构造题</p><span id="more"></span><p><a href="https://loj.ac/p/540">游戏</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>没啥思路，完全不会三元环，只是随便搞了一下完全图，发现 $n$ 个点的完全图有 $\binom{n}{3}$ 个三元环，再加上有显然的用 $x + 2$ 个点构造 $x$ 个三元环的方法，感觉可得部分分</p><p>然后瞪了一眼数据，发现有个特殊数据是立方数，我愣是啥也没想到，幸好有个大样例，一看才发现，三圆环对立方数，也就是说，如果有 $3x$ 个点，我先放 $x$ 个点不连边，再放 $x$ 个点每个点都和最初的 $x$ 个点连边，再放 $x$ 个点每个点都和前面放的 $2x$ 个点连边，那么在找三元环的时候，必须是在这三份每份 $x$ 个点中各选一个，即共 $x^3$ 个点</p><p>到这里，我看差不多了，就开始乱搞，对于要求 $n$ 个环，在完全图和立方数两种构造中找到离他最近的，构造出来然后递归构造剩下的，如果剩下的环 $+2$ 小于剩下的点数就用朴素构造法</p><p>然后……就过了</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pb push_back</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Way</span>&#123;</span> <span class="keyword">int</span> val, num, typ; &#125;;</span><br><span class="line">std::vector&lt;Way&gt; way;</span><br><span class="line"><span class="keyword">bool</span> e[N + <span class="number">100</span>][N + <span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lk</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123; e[x][y] = e[y][x] = <span class="literal">true</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mk_bf</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">lk</span>(cnt + <span class="number">1</span>, cnt + <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">lk</span>(cnt + <span class="number">2</span>, cnt + <span class="number">3</span>);</span><br><span class="line">    <span class="built_in">lk</span>(cnt + <span class="number">3</span>, cnt + <span class="number">1</span>);</span><br><span class="line">    cnt += <span class="number">3</span>, --x;</span><br><span class="line">    <span class="keyword">while</span> (x--)</span><br><span class="line">    &#123;</span><br><span class="line">        ++cnt;</span><br><span class="line">        <span class="built_in">lk</span>(cnt, cnt - <span class="number">1</span>), <span class="built_in">lk</span>(cnt, cnt - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mk_q3</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y = x / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= y; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= y; ++j) <span class="built_in">lk</span>(cnt + j, cnt + i + y);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = y + y + <span class="number">1</span>; i &lt;= x; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = y + y; j; --j) <span class="built_in">lk</span>(cnt + j, cnt + i);</span><br><span class="line">    cnt += x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mk_all</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= x; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; ++j) <span class="built_in">lk</span>(cnt + i, cnt + j);</span><br><span class="line">    cnt += x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Way <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = way.<span class="built_in">size</span>() - <span class="number">1</span>, mid, res = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (way[mid].val &lt;= x) res = mid, l = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> way[res];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!x) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span> (x + <span class="number">2</span> &lt; N - cnt) <span class="keyword">return</span> <span class="built_in">mk_bf</span>(x);</span><br><span class="line">    Way t = <span class="built_in">find</span>(x);</span><br><span class="line">    <span class="keyword">if</span> (t.typ == <span class="number">1</span>) <span class="built_in">mk_q3</span>(t.num);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">mk_all</span>(t.num);</span><br><span class="line">    <span class="built_in">calc</span>(x - t.val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * <span class="number">3</span> &lt;= N; ++i) way.<span class="built_in">pb</span>(&#123;i * i * i, i * <span class="number">3</span>, <span class="number">1</span>&#125;);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">4</span>; i &lt;= N; ++i) way.<span class="built_in">pb</span>(&#123;i * (i - <span class="number">1</span>) * (i - <span class="number">2</span>) / <span class="number">6</span>, i, <span class="number">2</span>&#125;);</span><br><span class="line">    std::<span class="built_in">sort</span>(way.<span class="built_in">begin</span>(), way.<span class="built_in">end</span>(), [&amp;](Way x, Way y)&#123; <span class="keyword">return</span> x.val == y.val ? x.num &gt; y.num : x.val &lt; y.val; &#125;);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">calc</span>(n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, cnt);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= cnt; ++j) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, e[i][j]);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 乱搞构造题&lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="构造" scheme="https://dyd-true.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="二分" scheme="https://dyd-true.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>LOJ539 旅游路线</title>
    <link href="https://dyd-true.github.io/2022/08/30/LOJ539-%E6%97%85%E6%B8%B8%E8%B7%AF%E7%BA%BF/"/>
    <id>https://dyd-true.github.io/2022/08/30/LOJ539-%E6%97%85%E6%B8%B8%E8%B7%AF%E7%BA%BF/</id>
    <published>2022-08-30T01:25:36.000Z</published>
    <updated>2022-08-30T02:39:01.545Z</updated>
    
    <content type="html"><![CDATA[<p> 神仙 dp </p><span id="more"></span><p><a href="https://loj.ac/p/539">旅游路线</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>看到 $n \le 100$ 和 $q_i \le n^2$ 感觉就是 dp ，设 $d[i, j, k]$ 表示“从点 $i$ 走，有 $j$ 的油量，当前剩余钱数为 $k$ 的最远距离”，每次询问枚举 $k$ ，答案显然在 $d[i, 0, k]$ 上，然后就有一个 $O(mCq + Tq)$ 的做法</p><p>发现 $C \le 10^5$ ，存到状态里面没有前途，考虑每次直接从下一次买油的地方转移，设 $d[i, j]$ 表示“从点 $i$ 出发，有 $j$ 的钱，下一次买油就在点 $i$ 的最远距离”，那么有：<br>$$<br>d[i, j] = \max(d[k, j - p[i]] + dis(i, k, c[i]))<br>$$<br>其中 $dis(x, y, c)$ 表示“从 $x$ 走到 $y$ ，走过不超过 $c$ 条边的最大边权和”，然后发现瓶颈转移到求 $dis$ 上</p><p>首先又可以搞一个 dp 来求 dis ，即枚举下一条边，有：<br>$$<br>dis(i, j, k) = \max(dis(l, j, k - 1) + val(i, l))<br>$$<br>其中 $val(x, y)$ 是边 $x \to y$ 的边权</p><p>不难发现这样求 $dis$ 绝对爆炸，因为神奇的 $C \le 10^5$ </p><p>然后这里就有一个神仙操作了：我们发现，其实我们关心的是 $dis(i, j, c[i])$ 的值，也就是不必每个 $dis(i, j, k)$ 都求，且每次 $k$ 只会减少 $1$ ，于是可以用倍增预处理，设 $f[i, j, k]$ 表示“从 $x$ 走到 $y$ ，走过不超过 $2^k$ 条边的最大边权和”，有：<br>$$<br>f[i, j, k] = \max(f[i, l, k - 1] + f[l, j, k - 1])<br>$$<br>在得到 $f$ 后，设 $dis[i, j, k]$ 表示”考虑 $c[i]$ 的最低 $k$ 位的 $dis(i, j)$ “即可求出 $dis$ </p><p>然后再看，发现瓶颈在于最后每次询问求答案的时候那个 $Tq$ ，但显然 $d[x][i] &gt; d[x][j] (i &gt; j)$ ，可以把枚举换成二分</p><p>总时间 $O(n^2q + n^3 \log C + T \log q)$ </p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eb emplace_back</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">100</span> + <span class="number">50</span>, M = <span class="number">1000</span> + <span class="number">100</span>, T = <span class="number">1e5</span> + <span class="number">100</span>, inf = <span class="number">0x3f3f3f3f</span>, D = <span class="number">18</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, mxc, que, mxq;</span><br><span class="line"><span class="keyword">int</span> p[N], c[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Q</span>&#123;</span> <span class="keyword">int</span> s, q, d; &#125; q[T];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span> <span class="keyword">int</span> ne, ver, w; &#125; e[M];</span><br><span class="line"><span class="keyword">int</span> h[N], idx;</span><br><span class="line"><span class="keyword">int</span> d[N * N][N], dis[N][N][D], f[N][N][D];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span>&#123; e[idx] = &#123;h[x], y, z&#125;, h[x] = idx++; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> s, <span class="keyword">int</span> dd, <span class="keyword">int</span> rr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = rr, mid, res = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r)</span><br><span class="line">    &#123;</span><br><span class="line">        mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (d[mid][s] &gt;= dd) res = rr - mid, r = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::<span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h), idx = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d %d&quot;</span>, &amp;n, &amp;m, &amp;mxc, &amp;que);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, p + i, c + i), c[i] = std::<span class="built_in">min</span>(c[i], mxc);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; D; ++k) f[i][j][k] = dis[i][j][k] = -inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, l; i &lt;= m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;l);</span><br><span class="line">        <span class="built_in">add</span>(a, b, l);</span><br><span class="line">        f[a][b][<span class="number">0</span>] = l;</span><br><span class="line">        <span class="keyword">if</span> (c[a] &amp; <span class="number">1</span>) dis[a][b][<span class="number">0</span>] = l;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) f[i][i][<span class="number">0</span>] = dis[i][i][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; D; ++k)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>; l &lt;= n; ++l) f[i][j][k] = std::<span class="built_in">max</span>(f[i][j][k], f[i][l][k - <span class="number">1</span>] + f[l][j][k - <span class="number">1</span>]);</span><br><span class="line">                f[i][j][k] = std::<span class="built_in">min</span>(f[i][j][k], inf);</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; D; ++k)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((c[i] &gt;&gt; k) &amp; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>; l &lt;= n; ++l) dis[i][j][k] = std::<span class="built_in">max</span>(dis[i][j][k], dis[i][l][k - <span class="number">1</span>] + f[l][j][k]);</span><br><span class="line">                <span class="keyword">else</span> dis[i][j][k] = dis[i][j][k - <span class="number">1</span>];</span><br><span class="line">                dis[i][j][k] = std::<span class="built_in">min</span>(dis[i][j][k], inf);</span><br><span class="line">            &#125;</span><br><span class="line">    mxq = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= que; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;q[i].s, &amp;q[i].q, &amp;q[i].d);</span><br><span class="line">        mxq = std::<span class="built_in">max</span>(mxq, q[i].q);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= mxq; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) <span class="keyword">if</span> (i &gt;= p[j])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; ++k) d[i][j] = std::<span class="built_in">max</span>(d[i][j], d[i - p[j]][k] + dis[j][k][D - <span class="number">1</span>]);</span><br><span class="line">            d[i][j] = std::<span class="built_in">min</span>(d[i][j], inf);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, ans; i &lt;= que; ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">find</span>(q[i].s, q[i].d, q[i].q));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 神仙 dp &lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="图论" scheme="https://dyd-true.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>test2022/8/29总结</title>
    <link href="https://dyd-true.github.io/2022/08/29/test2022-8-29%E6%80%BB%E7%BB%93/"/>
    <id>https://dyd-true.github.io/2022/08/29/test2022-8-29%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-29T09:01:28.000Z</published>
    <updated>2022-08-29T13:06:21.217Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="24e1e4d1223cbcdc0e81382dd3d1667c811c931b9d431bd76c215d73d29db0c8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Dydは、パスワードを入力するように求められます</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">被掉打</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>test2022/8/28总结</title>
    <link href="https://dyd-true.github.io/2022/08/28/test2022-8-28%E6%80%BB%E7%BB%93/"/>
    <id>https://dyd-true.github.io/2022/08/28/test2022-8-28%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-28T06:15:20.000Z</published>
    <updated>2022-08-29T09:02:36.567Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="35ff03aa22e83bd55fee090b2a7dd4a6cc84dc0046bb0342ef5c529478a463d6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Dydは、パスワードを入力するように求められます</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">暴力分一分没有</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
    <category term="贪心" scheme="https://dyd-true.github.io/tags/%E8%B4%AA%E5%BF%83/"/>
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="并查集" scheme="https://dyd-true.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
    <category term="线段树" scheme="https://dyd-true.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="暴力" scheme="https://dyd-true.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
    <category term="树链剖分" scheme="https://dyd-true.github.io/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
    <category term="优先队列" scheme="https://dyd-true.github.io/tags/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/"/>
    
    <category term="扫描线" scheme="https://dyd-true.github.io/tags/%E6%89%AB%E6%8F%8F%E7%BA%BF/"/>
    
  </entry>
  
  <entry>
    <title>CF771C Bear and Tree Jumps</title>
    <link href="https://dyd-true.github.io/2022/08/25/CF771C-Bear-and-Tree-Jumps/"/>
    <id>https://dyd-true.github.io/2022/08/25/CF771C-Bear-and-Tree-Jumps/</id>
    <published>2022-08-25T11:01:21.000Z</published>
    <updated>2022-08-25T11:19:20.988Z</updated>
    
    <content type="html"><![CDATA[<p> 换根 dp </p><span id="more"></span><p><a href="https://codeforces.com/contest/771/problem/C">Bear and Tree Jumps</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一眼发现怎么搞都是 $O(n^2)$ 的，看见 $k$ 很小，感觉要设进状态</p><p>瞟一眼题解，发现是换根 dp</p><p>考虑设 $d[u, j]$ 表示“到点 $u$ 距离为 $p * k + j$ 的点，与 $u$ 构成的点对的权值和”，为了方便转移，还要同时维护 $ct[u, j]$ 表示“到点 $u$ 距离为 $p * k + j$ 的点的个数”</p><p>其它就很简单了，看代码吧，时间 $O(nk)$ </p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>, K = <span class="number">5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, num, h[N], idx;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span> <span class="keyword">int</span> ne, ver; &#125; e[N &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> ct[N][K];</span><br><span class="line">LL d[N][K], ans;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123; e[idx] = &#123;h[x], y&#125;, h[x] = idx++; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">plus</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!x || !y) <span class="keyword">return</span> ;</span><br><span class="line">++ct[x][<span class="number">1</span>], ++d[x][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= num; ++j)</span><br><span class="line">&#123;</span><br><span class="line">ct[x][j] += ct[y][j - <span class="number">1</span>];</span><br><span class="line">d[x][j] += d[y][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">ct[x][<span class="number">1</span>] += ct[y][num];</span><br><span class="line">d[x][<span class="number">1</span>] += d[y][num] + ct[y][num];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">subt</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!x || !y) <span class="keyword">return</span> ;</span><br><span class="line">--ct[x][<span class="number">1</span>], --d[x][<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= num; ++j)</span><br><span class="line">&#123;</span><br><span class="line">ct[x][j] -= ct[y][j - <span class="number">1</span>];</span><br><span class="line">d[x][j] -= d[y][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">ct[x][<span class="number">1</span>] -= ct[y][num];</span><br><span class="line">d[x][<span class="number">1</span>] -= d[y][num] + ct[y][num];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp1</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span>&#123; <span class="keyword">for</span> (<span class="keyword">int</span> i = h[x], y; ~i; i = e[i].ne) <span class="keyword">if</span> ((y = e[i].ver) != fa) <span class="built_in">dp1</span>(y, x), <span class="built_in">plus</span>(x, y); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dp2</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">subt</span>(fa, x), <span class="built_in">plus</span>(x, fa);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= num; ++j) ans += d[x][j];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = h[x]; ~i; i = e[i].ne) <span class="keyword">if</span> (e[i].ver != fa) <span class="built_in">dp2</span>(e[i].ver, x);</span><br><span class="line"><span class="built_in">subt</span>(x, fa), <span class="built_in">plus</span>(fa, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">std::<span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h), idx = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;num);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;u, &amp;v);</span><br><span class="line"><span class="built_in">add</span>(u, v), <span class="built_in">add</span>(v, u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dp1</span>(<span class="number">1</span>, <span class="number">0</span>), <span class="built_in">dp2</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans &gt;&gt; <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 换根 dp &lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="换根" scheme="https://dyd-true.github.io/tags/%E6%8D%A2%E6%A0%B9/"/>
    
  </entry>
  
  <entry>
    <title>luoguP4859 已经没有什么好害怕的了</title>
    <link href="https://dyd-true.github.io/2022/08/23/luoguP4859-%E5%B7%B2%E7%BB%8F%E6%B2%A1%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E5%AE%B3%E6%80%95%E7%9A%84%E4%BA%86/"/>
    <id>https://dyd-true.github.io/2022/08/23/luoguP4859-%E5%B7%B2%E7%BB%8F%E6%B2%A1%E6%9C%89%E4%BB%80%E4%B9%88%E5%A5%BD%E5%AE%B3%E6%80%95%E7%9A%84%E4%BA%86/</id>
    <published>2022-08-23T07:31:37.000Z</published>
    <updated>2022-08-23T07:44:22.137Z</updated>
    
    <content type="html"><![CDATA[<p> 好久没做 luogu 了</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P4859">已经没有什么好害怕的了</a></p><p>还是比较套路</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>看见“恰好”考虑二项式反演，由于 $n \le 2000$ ，估计要个 $O(n^2)$ 的 dp </p><p>设 $m$ 是题目中的 $k$ ，先转化，若 $2 \not \mid n + m$ 显然无解，否则，我们就令 $m = \frac{n + m}{2}$ ，那么问题变为求恰好有 $m$ 对 $a_i &gt; b_i$ 的方案数，记其为 $ans$ ，由二项式反演得 $ans = \sum_{i = m}^n (-1)^{i - m} \binom{i}{m} f_i$ ，其中 $f_i$ 表示钦定必须有 $i$ 个 $a_{x} &gt; b_{x}$ ，其它随便排列的方案数</p><p>考虑如何求 $f$ ，把 $a, b$ 排序，记 $f[i, j]$ 为”考虑了前 $i$ 个 $a$ ，已经选出 $j$ 对 $a_x &gt; b_x$ 的方案数”，注意这里只是考虑点了 $j$ 对 $a_x &gt; b_x$ ，其它 $n - j$ 对还没配对，所以其实 $f_i = f[n, i] * (n - i)!$ </p><p>而 $f[i, j]$ 的转移非常显然，就是考虑是否选第 $i$ 个，我们记 $c[i]$ 表示有多少个 $b$ 小于 $a_i$ ，如果要选 $a_i$ ，那么显然 $b$ 就有 $c[i] - (j - 1)$ 种选择，因为前面 $j - 1$ 个 $a$ 都小于 $a_i$ ，它们配对的 $b$ 都一定会占到 $c[i]$ 中，故有：<br>$$<br>f[i, j] = f[i - 1, j - 1] * (c[i] - (j - 1)) + f[i, j - 1]<br>$$<br>$O(n^2)$ 转移即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">using</span> DB = <span class="keyword">double</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2000</span> + <span class="number">100</span>, P = <span class="number">1e9</span> + <span class="number">9</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> f[N], a[N], b[N], c[N], fac[N], ifac[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prev</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fac[<span class="number">0</span>] = fac[<span class="number">1</span>] = ifac[<span class="number">0</span>] = ifac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) fac[i] = <span class="built_in">LL</span>(i) * fac[i - <span class="number">1</span>] % P;</span><br><span class="line">ifac[n] = <span class="built_in">qpow</span>(fac[n]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">1</span>; --i) ifac[i] = <span class="built_in">LL</span>(i + <span class="number">1</span>) * ifac[i + <span class="number">1</span>] % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt; y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">LL</span>(fac[x]) * ifac[y] % P * ifac[x - y] % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">if</span> ((n + m) &amp; <span class="number">1</span>) <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>), <span class="number">0</span>;</span><br><span class="line">m = (n + m) &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, b + i);</span><br><span class="line"><span class="built_in">prev</span>();</span><br><span class="line">std::<span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">std::<span class="built_in">sort</span>(b + <span class="number">1</span>, b + n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (j &lt; n &amp;&amp; a[i] &gt; b[j + <span class="number">1</span>]) ++j;</span><br><span class="line">c[i] = j;</span><br><span class="line">&#125;</span><br><span class="line">f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = std::<span class="built_in">min</span>(c[i], i); j; --j) <span class="built_in">adj</span>(f[j] += <span class="built_in">LL</span>(c[i] - (j - <span class="number">1</span>)) * f[j - <span class="number">1</span>] % P - P);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) f[i] = <span class="built_in">LL</span>(f[i]) * fac[n - i] % P;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m; i &lt;= n; ++i)</span><br><span class="line"><span class="keyword">if</span> ((i - m) &amp; <span class="number">1</span>) <span class="built_in">adj</span>(ans -= <span class="built_in">LL</span>(f[i]) * <span class="built_in">C</span>(i, m) % P);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">adj</span>(ans += <span class="built_in">LL</span>(f[i]) * <span class="built_in">C</span>(i, m) % P - P);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 好久没做 luogu 了&lt;/p&gt;</summary>
    
    
    
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="数学" scheme="https://dyd-true.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="二项式反演" scheme="https://dyd-true.github.io/tags/%E4%BA%8C%E9%A1%B9%E5%BC%8F%E5%8F%8D%E6%BC%94/"/>
    
  </entry>
  
  <entry>
    <title>test2022/8/22总结</title>
    <link href="https://dyd-true.github.io/2022/08/22/test2022-8-22%E6%80%BB%E7%BB%93/"/>
    <id>https://dyd-true.github.io/2022/08/22/test2022-8-22%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-22T06:40:11.000Z</published>
    <updated>2022-08-22T09:03:16.508Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6c56a33b821f8480f36c324118c708ba127c7ee92087622a7b0d4b41ac2dfd7a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Dydは、パスワードを入力するように求められます</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">熟悉的感觉</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
    <category term="模拟" scheme="https://dyd-true.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
    <category term="二分" scheme="https://dyd-true.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
    <category term="搜索" scheme="https://dyd-true.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>test2022/8/21总结</title>
    <link href="https://dyd-true.github.io/2022/08/21/test2022-8-21%E6%80%BB%E7%BB%93/"/>
    <id>https://dyd-true.github.io/2022/08/21/test2022-8-21%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-21T06:53:09.000Z</published>
    <updated>2022-08-22T06:42:34.451Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a4629e35f255447f2e1b83d852f3605e91b494ac9bc0a5b0a9e9f692ee6f314f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Dydは、パスワードを入力するように求められます</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">树剖可惜了</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
    <category term="构造" scheme="https://dyd-true.github.io/tags/%E6%9E%84%E9%80%A0/"/>
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="线段树" scheme="https://dyd-true.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="数位" scheme="https://dyd-true.github.io/tags/%E6%95%B0%E4%BD%8D/"/>
    
  </entry>
  
  <entry>
    <title>test2022/8/9总结</title>
    <link href="https://dyd-true.github.io/2022/08/13/test2022-8-9%E6%80%BB%E7%BB%93/"/>
    <id>https://dyd-true.github.io/2022/08/13/test2022-8-9%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-13T02:34:55.000Z</published>
    <updated>2022-08-13T03:02:14.993Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="7db475cbafc82d851c6e1571e860dd5f57277110d4e6b8b8dcffd4c104771e91"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Dydは、パスワードを入力するように求められます</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">被掉打了</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
    <category term="并查集" scheme="https://dyd-true.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
    <category term="线段树" scheme="https://dyd-true.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="博弈论" scheme="https://dyd-true.github.io/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
    <category term="线性基" scheme="https://dyd-true.github.io/tags/%E7%BA%BF%E6%80%A7%E5%9F%BA/"/>
    
    <category term="数论数学" scheme="https://dyd-true.github.io/tags/%E6%95%B0%E8%AE%BA%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>test2022/8/8总结</title>
    <link href="https://dyd-true.github.io/2022/08/08/test2022-8-8%E6%80%BB%E7%BB%93/"/>
    <id>https://dyd-true.github.io/2022/08/08/test2022-8-8%E6%80%BB%E7%BB%93/</id>
    <published>2022-08-08T06:31:45.000Z</published>
    <updated>2022-08-12T12:23:06.427Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="25f00b02b555f788175c872c40c4cbda249a954956fe7991aab6a9102743a857"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Dydは、パスワードを入力するように求められます</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">奇妙场</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="暴力" scheme="https://dyd-true.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
    <category term="四边形不等式" scheme="https://dyd-true.github.io/tags/%E5%9B%9B%E8%BE%B9%E5%BD%A2%E4%B8%8D%E7%AD%89%E5%BC%8F/"/>
    
    <category term="树上背包" scheme="https://dyd-true.github.io/tags/%E6%A0%91%E4%B8%8A%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>luoguP5518 [MtOI2019]幽灵乐团 / 莫比乌斯反演基础练习题</title>
    <link href="https://dyd-true.github.io/2022/08/05/luoguP5518-MtOI2019-%E5%B9%BD%E7%81%B5%E4%B9%90%E5%9B%A2-%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/"/>
    <id>https://dyd-true.github.io/2022/08/05/luoguP5518-MtOI2019-%E5%B9%BD%E7%81%B5%E4%B9%90%E5%9B%A2-%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0%E9%A2%98/</id>
    <published>2022-08-05T00:01:02.000Z</published>
    <updated>2022-08-06T00:10:06.835Z</updated>
    
    <content type="html"><![CDATA[<p> 神仙 <del>东方</del> 莫反题</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P5518">幽灵乐团 / 莫比乌斯反演基础练习题</a></p><p><strong>以下所有除法/分数默认下取整</strong>，为方便记模数为 $P$ </p><p>一眼望过去分讨题，然后发现每种都好难……<br>$$<br>\begin{aligned}<br>Ans<br>= &amp; \prod_{i = 1}^{A} \prod_{j = 1}^{B} \prod_{k = 1}^{C} (\frac{lcm(i, j)}{\gcd(i, k)})^{f(type)} \\<br>= &amp; \prod_{i = 1}^{A} \prod_{j = 1}^{B} \prod_{k = 1}^{C} (\frac{ij}{\gcd(i, k) \gcd(i, j)})^{f(type)} \\<br>\end{aligned}<br>$$<br>设：<br>$$<br>\begin{aligned}<br>g(a, b, c) = \prod_{i = 1}^{a} \prod_{j = 1}^{b} \prod_{k = 1}^{c} i^{f(type)} \\<br>h(a, b, c) = \prod_{i = 1}^{a} \prod_{j = 1}^{b} \prod_{k = 1}^{c} \gcd(i, j)^{f(type)}<br>\end{aligned}<br>$$<br>原式为<br>$$<br>Ans = \frac{g(A, B, C)g(B, A, C)}{h(A, B, C) h(A, C, B)}<br>$$<br>然后分讨</p><h2 id="part-1"><a href="#part-1" class="headerlink" title="part 1"></a>part 1</h2><p>$$<br>\begin{aligned}<br>g(a, b, c)<br>= &amp; \prod_{i = 1}^{a} \prod_{j = 1}^{b} \prod_{k = 1}^{c} i \\<br>= &amp; \prod_{i = 1}^A i^{bc} \\<br>= &amp; (a!)^{bc}<br>\end{aligned}<br>$$</p><p>$O(n)$ 预处理阶乘，快速幂可以单次 $O(\log P)$ 求出 $g$<br>$$<br>\begin{aligned}<br>h(a, b, c)<br>= &amp; \prod_{i = 1}^{a} \prod_{j = 1}^{b} \prod_{k = 1}^{c} \gcd(i, j) \\<br>= &amp; \prod_{i = 1}^{a} \prod_{j = 1}^{b} \gcd(i, j)^{c} \\<br>\end{aligned}<br>$$<br>看到连乘尝试取对数得：<br>$$<br>\begin{aligned}<br>\ln(h(a, b, c))<br>= &amp; c \sum_{i = 1}^a \sum_{j = 1}^b \ln(\gcd(i, j)) \\<br>= &amp; c \sum_{d = 1}^{t = \min(a, b)} \ln(d) \sum_{i = 1}^{\frac{a}{d}} \sum_{j = 1}^\frac{b}{d} [\gcd(i, j) == 1] \\<br>= &amp; c \sum_{d = 1}^{t} \ln(d) \sum_{i = 1}^{\frac{a}{d}} \sum_{j = 1}^\frac{b}{d} \sum_{x | i \wedge x|j} \mu(x) \\<br>= &amp; c \sum_{d = 1}^{t} \ln(d) \sum_{x}^{\frac{t}{d}} \sum_{i = 1}^{\frac{a}{dx}} \sum_{j = 1}^{\frac{b}{dx}} \mu(x) \\<br>= &amp; c \sum_{d = 1}^{t} \ln(d) \sum_{x}^{\frac{t}{d}} \mu(x) \frac{a}{dx} \frac{b}{dx}\\<br>= &amp; c \sum_{d = 1}^{t} \sum_{x}^{\frac{t}{d}} \ln(d) \mu(x) \frac{a}{dx} \frac{b}{dx}\\<br>= &amp; c \sum_{p = 1}^{t} \sum_{d | p} \ln(d) \mu(\frac{p}{d}) \frac{a}{p} \frac{b}{p}\\<br>= &amp; c \sum_{p = 1}^{t} \frac{a}{p} \frac{b}{p} \sum_{d | p} \ln(d) \mu(\frac{p}{d}) \\<br>\end{aligned}<br>$$<br>再取 $\exp$ ：<br>$$<br>\begin{aligned}<br>h(a, b, c)<br>= &amp; (\prod_{p = 1}^{t} (\prod_{d | p} d^{\mu(\frac{p}{d})})^{\frac{a}{p} \frac{b}{p}})^c<br>\end{aligned}<br>$$<br>这个跟 shit 一样的东西竟然是可以算的，考虑到 $\mu$ 只有三个取值，只要 $O(n(\log P + \log n))$ 预处理中间的东西，再整除分块可以做到 $O(\sqrt{n} \log P)$  </p><h2 id="part-2"><a href="#part-2" class="headerlink" title="part 2"></a>part 2</h2><p>记 $S(x) = \sum_{i = 1}^x i = \frac{x(x + 1)}{2}$<br>$$<br>\begin{aligned}<br>g(a, b, c)<br>= &amp; \prod_{i = 1}^{a} \prod_{j = 1}^{b} \prod_{k = 1}^{c} i^{ijk} \\<br>= &amp; \prod_{i = 1}^{a} (i^i)^{S(b) S(c)} \\<br>= &amp; (\prod_{i = 1}^{a} i^i)^{S(b) S(c)} \\<br>\end{aligned}<br>$$<br>可以 $O(n \log P)$ 预处理， $O(\log P)$ 求<br>$$<br>\begin{aligned}<br>h(a, b, c)<br>= &amp; \prod_{i = 1}^{a} \prod_{j = 1}^{b} \prod_{k = 1}^{c} \gcd(i, j)^{ijk} \\<br>= &amp; \prod_{i = 1}^{a} \prod_{j = 1}^{b} (\gcd(i, j)^{ij})^{S(c)} \\<br>\end{aligned}<br>$$<br> 还是取对数：<br>$$<br>\begin{aligned}<br>\ln(h(a, b, c))<br>= &amp; S(c) \sum_{i = 1}^a \sum_{j = 1}^b ij \ln(\gcd(i, j)) \\<br>= &amp; S(c) \sum_{d = 1}^{t = \min(a, b)} \sum_{i = 1}^{\frac{a}{d}} \sum_{j = 1}^{\frac{b}{d}} [\gcd(i, j) == 1] i j d^2 \ln(d) \\<br>= &amp; S(c) \sum_{d = 1}^{t} d^2 \ln(d) \sum_{i = 1}^{\frac{a}{d}} \sum_{j = 1}^{\frac{b}{d}} i j \sum_{x | i \wedge x | j} \mu(x) \\<br>= &amp; S(c) \sum_{d = 1}^{t} d^2 \ln(d) \sum_{x = 1}^{\frac{t}{d}} \mu(x) \sum_{i = 1}^{\frac{a}{dx}} \sum_{j = 1}^{\frac{b}{dx}} i j x^2\\<br>= &amp; S(c) \sum_{d = 1}^{t} d^2 \ln(d) \sum_{x = 1}^{\frac{t}{d}} x^2 \mu(x) \sum_{i = 1}^{\frac{a}{dx}} \sum_{j = 1}^{\frac{b}{dx}} i j \\<br>= &amp; S(c) \sum_{d = 1}^{t} \sum_{x = 1}^{\frac{t}{d}} d^2 \ln(d) x^2 \mu(x) S(\frac{a}{dx}) S(\frac{b}{dx}) \\<br>= &amp; S(c) \sum_{d = 1}^{t} \sum_{x = 1}^{\frac{t}{d}} (dx)^2 \ln(d) \mu(x) S(\frac{a}{dx}) S(\frac{b}{dx}) \\<br>= &amp; S(c) \sum_{p = 1}^{t} \sum_{d | p} p^2 \ln(d) \mu(\frac{p}{d}) S(\frac{a}{p}) S(\frac{b}{p}) \\<br>= &amp; S(c) \sum_{p = 1}^{t} S(\frac{a}{p}) S(\frac{b}{p}) \sum_{d | p} \ln(d) \mu(\frac{p}{d}) p^2 \\<br>\end{aligned}<br>$$<br>然后 $\exp$<br>$$<br>\begin{aligned}<br>h(a, b, c)<br>= &amp; (\prod_{p = 1}^t (\prod_{d | p} d^{\mu(\frac{p}{d})p^2} )^{S(\frac{a}{p}) S(\frac{b}{p})})^{S(c)}<br>\end{aligned}<br>$$<br> 最里面的部分和 part 1 类似，但由于有 $p^2$ 导致复杂度变为 $O(n \log n \log P)$ ，每次询问还是整除分块 $O(\sqrt{n} \log P)$ </p><h2 id="part-3"><a href="#part-3" class="headerlink" title="part 3"></a>part 3</h2><p>此时 $g, h$ 都不太好算，我们直接计算原式：<br>$$<br>\begin{aligned}<br>&amp; \prod_{i = 1}^{A} \prod_{j = 1}^{B} \prod_{k = 1}^{C} (\frac{lcm(i, j)}{\gcd(i, k)})^{\gcd(i, j, k)} \\<br>\end{aligned}<br>$$<br>取对数：<br>$$<br>\begin{aligned}<br>&amp; \sum_{i = 1}^{A} \sum_{j = 1}^{B} \sum_{k = 1}^{C} \gcd(i, j, k) \ln(\frac{lcm(i, j)}{\gcd(i, k)}) \\<br>= &amp; \sum_{d = 1}^{t = \min(a, b, c)} \sum_{i = 1}^{\frac{A}{d}} \sum_{j = 1}^{\frac{B}{d}} \sum_{k = 1}^{\frac{C}{d}} [\gcd(i, j, k) == 1] d \ln(\frac{lcm(id, jd)}{\gcd(id, kd)}) \\<br>= &amp; \sum_{d = 1}^{t} \sum_{i = 1}^{\frac{A}{d}} \sum_{j = 1}^{\frac{B}{d}} \sum_{k = 1}^{\frac{C}{d}} d \ln(\frac{lcm(i, j)}{\gcd(i, k)}) \sum_{x | i \wedge x | j \wedge x | k} \mu(x) \\<br>= &amp; \sum_{d = 1}^{t} \sum_{x = 1}^{\frac{t}{d}} \sum_{i = 1}^{\frac{A}{dx}} \sum_{j = 1}^{\frac{B}{dx}} \sum_{k = 1}^{\frac{C}{dx}} d  \mu(x) \ln(\frac{lcm(i, j)}{\gcd(i, k)})  \\<br>= &amp; \sum_{p = 1}^{t} \sum_{d | p} \sum_{i = 1}^{\frac{A}{p}} \sum_{j = 1}^{\frac{B}{p}} \sum_{k = 1}^{\frac{C}{p}} d  \mu(\frac{p}{d}) \ln(\frac{lcm(i, j)}{\gcd(i, k)}) \\<br>= &amp; \sum_{p = 1}^{t} \sum_{d | p} d  \mu(\frac{p}{d}) \sum_{i = 1}^{\frac{A}{p}} \sum_{j = 1}^{\frac{B}{p}} \sum_{k = 1}^{\frac{C}{p}} \ln(\frac{lcm(i, j)}{\gcd(i, k)}) \\<br>= &amp; \sum_{p = 1}^{t} \varphi(p) \sum_{i = 1}^{\frac{A}{p}} \sum_{j = 1}^{\frac{B}{p}} \sum_{k = 1}^{\frac{C}{p}} \ln(\frac{lcm(i, j)}{\gcd(i, k)}) \\<br>\end{aligned}<br>$$<br>然后 $exp$<br>$$<br>\prod_{p = 1}^t (\prod_{i = 1}^{\frac{A}{p}} \prod_{j = 1}^{\frac{B}{p}} \prod_{k = 1}^{\frac{C}{p}} \frac{lcm(i, j)}{\gcd(i, k)})^{\varphi(p)}<br>$$<br>发现里面的东西就是 part 1，于是预处理出 $\varphi$ 的前缀和，整除分块是 $O(\sqrt{n} \log P)$ 的，里面又是个 $O(\sqrt{n} \log P)$ ，总复杂度 $O(n \log^2 P)$ </p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>注意指数要模的是 $P - 1$ ，筛 $\mu$ 的时候 $-1$ 不要存为 $P - 1$ ，因为 $\mu$ 有可能在指数上，还要预处理的 $\varphi$ 也是模 $P - 1$ </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> P;</span><br><span class="line"><span class="keyword">int</span> fac[N], mu[N], dm[N], idm[N], tt[N], ii[N], dmp[N], idmp[N], phi[N];</span><br><span class="line"><span class="keyword">int</span> ct = <span class="number">0</span>, pri[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fac[<span class="number">0</span>] = fac[<span class="number">1</span>] = ii[<span class="number">0</span>] = ii[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; ++i)</span><br><span class="line">&#123;</span><br><span class="line">fac[i] = <span class="built_in">LL</span>(i) * fac[i - <span class="number">1</span>] % P;</span><br><span class="line">ii[i] = <span class="built_in">qpow</span>(i, i);</span><br><span class="line">ii[i] = <span class="built_in">LL</span>(ii[i]) * ii[i - <span class="number">1</span>] % P;</span><br><span class="line">&#125;</span><br><span class="line">mu[<span class="number">1</span>] = phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!pri[i]) pri[++ct] = i, mu[i] = <span class="number">-1</span>, phi[i] = i - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= ct &amp;&amp; <span class="built_in">LL</span>(i) * pri[j] &lt; N; ++j)</span><br><span class="line">&#123;</span><br><span class="line">pri[i * pri[j]] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span> (i % pri[j] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">phi[i * pri[j]] = pri[j] * phi[i];</span><br><span class="line">mu[i * pri[j]] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">mu[i * pri[j]] = -mu[i];</span><br><span class="line">phi[i * pri[j]] = (pri[j] - <span class="number">1</span>) * phi[i]; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; ++i) phi[i] += phi[i - <span class="number">1</span>], phi[i] %= P - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i) dm[i] = idm[i] = dmp[i] = idmp[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>, t, p; i &lt; N; ++i)</span><br><span class="line">&#123;</span><br><span class="line">t = <span class="built_in">qpow</span>(i, P - <span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; <span class="built_in">LL</span>(i) * j &lt; N; ++j)</span><br><span class="line">&#123;</span><br><span class="line">p = i * j;</span><br><span class="line"><span class="keyword">if</span> (mu[j] == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">dm[p] = <span class="built_in">LL</span>(t) * dm[p] % P;</span><br><span class="line">dmp[p] = <span class="built_in">LL</span>(<span class="built_in">qpow</span>(t, <span class="built_in">LL</span>(p) * p % (P - <span class="number">1</span>))) * dmp[p] % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mu[j] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">dm[p] = <span class="built_in">LL</span>(i) * dm[p] % P;</span><br><span class="line">dmp[p] = <span class="built_in">LL</span>(<span class="built_in">qpow</span>(i, <span class="built_in">LL</span>(p) * p % (P - <span class="number">1</span>))) * dmp[p] % P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; N; ++i)</span><br><span class="line">&#123;</span><br><span class="line">tt[i] = dm[i];</span><br><span class="line">dm[i] = <span class="built_in">LL</span>(dm[i]) * dm[i - <span class="number">1</span>] % P;</span><br><span class="line">&#125;</span><br><span class="line">idm[N - <span class="number">1</span>] = <span class="built_in">qpow</span>(dm[N - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = N - <span class="number">2</span>; i &gt; <span class="number">1</span>; --i) idm[i] = <span class="built_in">LL</span>(tt[i + <span class="number">1</span>]) * idm[i + <span class="number">1</span>] % P;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; N; ++i)</span><br><span class="line">&#123;</span><br><span class="line">tt[i] = dmp[i];</span><br><span class="line">dmp[i] = <span class="built_in">LL</span>(dmp[i]) * dmp[i - <span class="number">1</span>] % P;</span><br><span class="line">&#125;</span><br><span class="line">idmp[N - <span class="number">1</span>] = <span class="built_in">qpow</span>(dmp[N - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = N - <span class="number">2</span>; i &gt; <span class="number">1</span>; --i) idmp[i] = <span class="built_in">LL</span>(tt[i + <span class="number">1</span>]) * idmp[i + <span class="number">1</span>] % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">g1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123; <span class="keyword">return</span> <span class="built_in">qpow</span>(fac[a], <span class="built_in">LL</span>(b) * c % (P - <span class="number">1</span>)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">h1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>, t = std::<span class="built_in">min</span>(a, b), x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">2</span>, r; l &lt;= t; l = r + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = std::<span class="built_in">min</span>(a / (a / l), b / (b / l));</span><br><span class="line">x = <span class="built_in">LL</span>(dm[r]) * idm[l - <span class="number">1</span>] % P;</span><br><span class="line">res = <span class="built_in">LL</span>(res) * <span class="built_in">qpow</span>(x, <span class="built_in">LL</span>(a / l) * (b / l) % (P - <span class="number">1</span>)) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">qpow</span>(res, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t1 = <span class="built_in">LL</span>(<span class="built_in">g1</span>(a, b, c)) * <span class="built_in">g1</span>(b, a, c) % P, t2 = <span class="built_in">LL</span>(<span class="built_in">h1</span>(a, b, c)) * <span class="built_in">h1</span>(a, c, b) % P;</span><br><span class="line">t2 = <span class="built_in">qpow</span>(t2);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">LL</span>(t1) * t2 % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">S</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="keyword">return</span> <span class="built_in">LL</span>(x + <span class="number">1</span>) * x / <span class="number">2</span> % (P - <span class="number">1</span>); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">g2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span>&#123; <span class="keyword">return</span> <span class="built_in">qpow</span>(ii[a], <span class="built_in">LL</span>(<span class="built_in">S</span>(b)) * <span class="built_in">S</span>(c) % (P - <span class="number">1</span>)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">h2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>, t = std::<span class="built_in">min</span>(a, b), x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">2</span>, r; l &lt;= t; l = r + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = std::<span class="built_in">min</span>(a / (a / l), b / (b / l));</span><br><span class="line">x = <span class="built_in">LL</span>(dmp[r]) * idmp[l - <span class="number">1</span>] % P;</span><br><span class="line">res = <span class="built_in">LL</span>(res) * <span class="built_in">qpow</span>(x, <span class="built_in">LL</span>(<span class="built_in">S</span>(a / l)) * <span class="built_in">S</span>(b / l) % (P - <span class="number">1</span>)) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">qpow</span>(res, <span class="built_in">S</span>(c));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t1 = <span class="built_in">LL</span>(<span class="built_in">g2</span>(a, b, c)) * <span class="built_in">g2</span>(b, a, c) % P, t2 = <span class="built_in">LL</span>(<span class="built_in">h2</span>(a, b, c)) * <span class="built_in">h2</span>(a, c, b) % P;</span><br><span class="line">t2 = <span class="built_in">qpow</span>(t2);</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">LL</span>(t1) * t2 % P; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc3</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">1</span>, t = std::<span class="built_in">min</span>(a, std::<span class="built_in">min</span>(b, c)), x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= t; l = r + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = std::<span class="built_in">min</span>(a / (a / l), std::<span class="built_in">min</span>(b / (b / l), c / (c / l)));</span><br><span class="line">x = <span class="built_in">calc1</span>(a / l, b / l, c / l);</span><br><span class="line">y = (phi[r] - phi[l - <span class="number">1</span>] + P - <span class="number">1</span>) % (P - <span class="number">1</span>);</span><br><span class="line">res = <span class="built_in">LL</span>(res) * <span class="built_in">qpow</span>(x, y) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T, A, B, C;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;T, &amp;P);</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;A, &amp;B, &amp;C);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, <span class="built_in">calc1</span>(A, B, C), <span class="built_in">calc2</span>(A, B, C), <span class="built_in">calc3</span>(A, B, C));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 神仙 &lt;del&gt;东方&lt;/del&gt; 莫反题&lt;/p&gt;</summary>
    
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="数论,数学" scheme="https://dyd-true.github.io/tags/%E6%95%B0%E8%AE%BA-%E6%95%B0%E5%AD%A6/"/>
    
    <category term="luogu" scheme="https://dyd-true.github.io/tags/luogu/"/>
    
    <category term="莫比乌斯反演" scheme="https://dyd-true.github.io/tags/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/"/>
    
  </entry>
  
  <entry>
    <title>luoguP5667 拉格朗日插值2</title>
    <link href="https://dyd-true.github.io/2022/08/03/luoguP5667-%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC2/"/>
    <id>https://dyd-true.github.io/2022/08/03/luoguP5667-%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC2/</id>
    <published>2022-08-03T08:16:04.000Z</published>
    <updated>2022-08-03T10:33:04.614Z</updated>
    
    <content type="html"><![CDATA[<p> 拉插 + 多项式卷积，难点在平移多项式</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P5667">拉格朗日插值2</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>直接线性插值是 $O(n^2)$ 的复杂度，考虑到询问比较特殊，可以进一步优化，看式子<br>$$<br>\begin{aligned}<br>f(m + i) = &amp; \sum_{j = 0}^n y_j \prod_{k \ne j}\frac{(m + i - k)}{(j - k)} \\<br>= &amp; \frac{(m + i)!}{(m - n + i - 1)!} \sum_{j = 0}^n \frac{f(j) * (-1)^{n - j}}{j! (n - j)!} \times \frac{1}{m + i - j}<br>\end{aligned}<br>$$<br>仔细看，后面的东西是个卷积（ $j$ 和 $i - j$ 贡献给 $i$ ），但问题是循环条件是 $j \in [0, n]$ 而不是 $j \in [0, i]$ ，考虑平移多项式</p><p>令 $g_i = \frac{f(i) * (-1)^{n - i}}{i! (n - i)!}, h_i = \frac{1}{m - n + i}$ ，注意，本来 $h_i$ 应该是 $\frac{1}{m + i}$ 的，但我们让它 $-n$ ，即是 $h_{x - n}$ ，那么相当于整个多项式向右平移 $n$ 位，原来 $i$ 的值现在应该在 $i + n$ 处，那么我们把 $G, H$ 乘起来得 $L$ ，考虑：<br>$$<br>\begin{aligned}<br>&amp; l_x = \sum_{i = 0}^{x} g_i * h_{x - i} \\<br>&amp; l_{x + n} = \sum_{i = 0}^{x + n} g_i * h_{x + n - i} \\<br>&amp; l_{x + n} = \sum_{i = 0}^{x + n} \frac{f(i) * (-1)^{n - i}}{i! (n - i)!} *  \frac{1}{m + x - i}<br>\end{aligned}<br>$$<br> 不难发现当 $i &gt; n$ 的多算了，所以我们对于 $i &gt; n$ 让 $g_i = 0$ ，那么后面那个东西就是 $l_{x + n}$ </p><p>现在问题是 $m \le 10^8$ ，我们要求 $(m - n + i)!$ 和其逆元，好像 $O(m)$ 都有点危险，发现其实很大一部分消去了，考虑预处理出 $mfac[i] = \prod_{j = 0}^{i} (m - n + j)$ 和其逆元，只算没消的部分</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>注意 $0$ 处， $m - n + i - 1$ 的下标到了 $-1$ 会越界，特殊处理</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">using</span> poly = std::vector&lt;<span class="keyword">int</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1.6e5</span> + <span class="number">100</span>, P = <span class="number">998244353</span>, G = <span class="number">3</span>, iG = <span class="number">332748118</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, f[N];</span><br><span class="line"><span class="keyword">int</span> rev[<span class="number">1</span> &lt;&lt; <span class="number">20</span> | <span class="number">100</span>];</span><br><span class="line"><span class="keyword">int</span> ifac[N], miv[N &lt;&lt; <span class="number">1</span>], mfac[N &lt;&lt; <span class="number">1</span>], imfac[N &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fac = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) fac = <span class="built_in">LL</span>(i) * fac % P;</span><br><span class="line">    ifac[n] = <span class="built_in">qpow</span>(fac);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">1</span>; --i) ifac[i] = <span class="built_in">LL</span>(i + <span class="number">1</span>) * ifac[i + <span class="number">1</span>] % P;</span><br><span class="line">    ifac[<span class="number">0</span>] = ifac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    mfac[<span class="number">0</span>] = m - n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= (n &lt;&lt; <span class="number">1</span>); ++i) mfac[i] = <span class="built_in">LL</span>(m - n + i) * mfac[i - <span class="number">1</span>] % P;</span><br><span class="line">    imfac[n &lt;&lt; <span class="number">1</span>] = <span class="built_in">qpow</span>(mfac[n &lt;&lt; <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = (n &lt;&lt; <span class="number">1</span>) - <span class="number">1</span>; ~i; --i) imfac[i] = <span class="built_in">LL</span>(m - n + i + <span class="number">1</span>) * imfac[i + <span class="number">1</span>] % P;</span><br><span class="line">    miv[<span class="number">0</span>] = imfac[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= (n &lt;&lt; <span class="number">1</span>); ++i) miv[i] = <span class="built_in">LL</span>(imfac[i]) * mfac[i - <span class="number">1</span>] % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rdy</span><span class="params">(<span class="keyword">int</span> &amp;bit, <span class="keyword">int</span> &amp;tot, <span class="keyword">int</span> len)</span></span>&#123; <span class="keyword">for</span> (tot = <span class="number">1</span>, bit = <span class="number">0</span>; tot &lt;= len; tot &lt;&lt;= <span class="number">1</span>, ++bit); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_r</span><span class="params">(<span class="keyword">int</span> bit, <span class="keyword">int</span> tot)</span></span>&#123; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) rev[i] = (rev[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (bit - <span class="number">1</span>)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> tot, <span class="keyword">int</span> op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> gn[<span class="number">1</span> &lt;&lt; <span class="number">20</span> | <span class="number">100</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) <span class="keyword">if</span> (i &lt; rev[i]) std::<span class="built_in">swap</span>(x[i], x[rev[i]]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; tot; mid &lt;&lt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> g0 = <span class="built_in">qpow</span>(op == <span class="number">1</span> ? G : iG, (P - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">        gn[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; mid; ++i) gn[i] = <span class="built_in">LL</span>(g0) * gn[i - <span class="number">1</span>] % P;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; i += (mid &lt;&lt; <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> *x1 = x + i, *x2 = x + i + mid, *ed = x2, *g = gn; x1 != ed; ++x1, ++x2, ++g)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> p = *x1, q = <span class="built_in">LL</span>(*x2) * *g % P;</span><br><span class="line">                <span class="built_in">adj</span>(*x1 = p + q - P), <span class="built_in">adj</span>(*x2 = p - q);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="number">1</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">qpow</span>(tot);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(t) * x[i] % P; </span><br><span class="line">&#125; </span><br><span class="line">poly <span class="keyword">operator</span> * (poly x, poly y)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.<span class="built_in">empty</span>() || y.<span class="built_in">empty</span>()) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    <span class="keyword">int</span> n = x.<span class="built_in">size</span>(), m = y.<span class="built_in">size</span>(), tot, bit;</span><br><span class="line">    <span class="built_in">rdy</span>(bit, tot, n + m), <span class="built_in">get_r</span>(bit, tot);</span><br><span class="line">    x.<span class="built_in">resize</span>(tot), y.<span class="built_in">resize</span>(tot);</span><br><span class="line">    <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (x == y) y = x;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ntt</span>(y.<span class="built_in">data</span>(), tot, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(x[i]) * y[i] % P;</span><br><span class="line">    <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> x.<span class="built_in">resize</span>(n + m - <span class="number">1</span>), x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, f + i), f[i] %= P;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="function">poly <span class="title">g</span><span class="params">(n + <span class="number">1</span>)</span>, <span class="title">h</span><span class="params">(<span class="number">2</span> * n + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        g[i] = <span class="built_in">LL</span>(f[i]) * ifac[i] % P * ifac[n - i] % P;</span><br><span class="line">        <span class="keyword">if</span> ((n - i) &amp; <span class="number">1</span>) g[i] = P - g[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= (n &lt;&lt; <span class="number">1</span>); ++i) h[i] = miv[i];</span><br><span class="line">    poly l = g * h;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">LL</span>(mfac[n]) * l[n] % P);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">LL</span>(mfac[i + n]) * imfac[i - <span class="number">1</span>] % P * l[i + n] % P);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 拉插 + 多项式卷积，难点在平移多项式&lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="多项式" scheme="https://dyd-true.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
    <category term="拉格朗日插值" scheme="https://dyd-true.github.io/tags/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>拉格朗日插值</title>
    <link href="https://dyd-true.github.io/2022/08/03/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/"/>
    <id>https://dyd-true.github.io/2022/08/03/%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/</id>
    <published>2022-08-03T00:47:17.000Z</published>
    <updated>2022-08-03T12:02:26.137Z</updated>
    
    <content type="html"><![CDATA[<p> 已知点值求多项式</p><span id="more"></span><h1 id="拉格朗日插值"><a href="#拉格朗日插值" class="headerlink" title="拉格朗日插值"></a>拉格朗日插值</h1><p>as we all know ， $n$ 个点可以唯一确定一个 $n - 1$ 次多项式，那么现在，给你 $n$ 个点，你该如何确定这个多项式呢？当然，你可以 gauss 消元解方程，但过于麻烦，且复杂度较高，这里就有一个新方法——拉格朗日插值法</p><h2 id="式子"><a href="#式子" class="headerlink" title="式子"></a>式子</h2><p>给定 $n$ 个点 $(x_1, y_1), (x_2, y_2), …, (x_n, y_n)$ 它们确定的 $n - 1$ 次多项式为：<br>$$<br>f(x) = \sum_{i = 1}^n y_i \prod_{j \ne i}\frac{(x - x_j)}{(x_i - x_j)}<br>$$<br>显然，当 $x = x_i$ 的时候， $y_i$ 后面的系数为 $1$ ，而 $\forall j \ne i, y_j$ 后面的系数都为 $0$ （因为有 $(x - x_i)$ 这一项），那么 $f(x)$ 就过点 $(x_i, y_i)$ ，这就是我们要求的多项式</p><h2 id="一般拉插"><a href="#一般拉插" class="headerlink" title="一般拉插"></a>一般拉插</h2><p><a href="https://www.luogu.com.cn/problem/P4781">【模板】拉格朗日插值</a></p><p>就是上面的式子，预处理是 $O(n^2)$ （有些题要预处理逆元但一般瓶颈不在求逆元上），每次带入求点是 $O(n^2)$ ，想得到原多项式也是 $O(n^2)$ 的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">100</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n, b, la[N];</span><br><span class="line">std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, t; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        la[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) <span class="keyword">if</span> (j != i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">adj</span>(t = a[i].fi - a[j].fi);</span><br><span class="line">            la[i] = <span class="built_in">LL</span>(t) * la[i] % P;</span><br><span class="line">        &#125;</span><br><span class="line">        la[i] = <span class="built_in">qpow</span>(la[i]);</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lag</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, t, tt; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        tt = la[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) <span class="keyword">if</span> (j != i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">adj</span>(t = x - a[j].fi);</span><br><span class="line">            tt = <span class="built_in">LL</span>(t) * tt % P;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">adj</span>(res += <span class="built_in">LL</span>(tt) * a[i].se % P - P);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a[i].fi, &amp;a[i].se);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">lag</span>(b));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线性拉插"><a href="#线性拉插" class="headerlink" title="线性拉插"></a>线性拉插</h2><p>在很多题目中，取的 $n$ 个点是连续的（或者让我们自己取，那就取连续的），此时我们一般可以做到询问线性</p><p>考虑我们求的点是 $(1, f(1)), (2, f(2)), …, (n, f(n))$ ，那么带入式子就是：<br>$$<br>\begin{aligned}<br>f(x) = &amp; \sum_{i = 1}^n f(i) \prod_{j \ne i}\frac{(x - j)}{(i - j)} \\<br>= &amp; \sum_{i = 1}^n f(i) * (-1)^{n - i} * \frac{(x - 1)(x - 2)…(x - (i - 1))(x - (i + 1))(x - (i + 2))…(x - n)}{(i - 1)!(n - i)!} \\<br>\end{aligned}<br>$$<br>预处理 $f(i)$ 和分母，复杂度的关键在 $f(i)$ 的求取和逆元的处理，每次查询的时候维护前、</p><p>后缀积，可以做到线性查询</p><p>值得一提的是，如果 $x - x_i$ 的逆元好求或者求它不在瓶颈上，查询时可以先算出 $\prod (x - x_i)$ ，然后每项用逆元除去</p><p><a href="http://codeforces.com/problemset/problem/622/F">The Sum of the k-th Powers</a></p><p> 经典的求自然数幂和，一个结论是： $\sum_{i = 1}^n i^k$ 是一个关于 $n$ 的 $k + 1$ 次多项式，复杂度瓶颈在预处理求 $f(i)$ 的地方，总复杂度 $O(k \log k)$ </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">100</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n, k;</span><br><span class="line">std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; a[N];</span><br><span class="line"><span class="keyword">int</span> la[N], la2[N];</span><br><span class="line"><span class="keyword">int</span> ifac[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> fac = <span class="number">1</span>, fi = <span class="number">0</span>;</span><br><span class="line">    ifac[<span class="number">0</span>] = ifac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i) fac = <span class="built_in">LL</span>(fac) * i % P;</span><br><span class="line">    ifac[n] = <span class="built_in">qpow</span>(fac);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">1</span>; --i) ifac[i] = <span class="built_in">LL</span>(i + <span class="number">1</span>) * ifac[i + <span class="number">1</span>] % P;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">adj</span>(fi += <span class="built_in">qpow</span>(i, k) - P);</span><br><span class="line">        la[i] = <span class="built_in">LL</span>(fi) * ifac[i - <span class="number">1</span>] % P * ifac[n - i] % P;</span><br><span class="line">        <span class="keyword">if</span> ((n - i) &amp; <span class="number">1</span>) la[i] = P - la[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lag</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, t = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        la2[i] = t;</span><br><span class="line">        <span class="built_in">adj</span>(t = <span class="built_in">LL</span>(x - i) * t % P);    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n, t = <span class="number">1</span>; i; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        la2[i] = <span class="built_in">LL</span>(t) * la2[i] % P;</span><br><span class="line">        <span class="built_in">adj</span>(t = <span class="built_in">LL</span>(x - i) * t % P);    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">adj</span>(res += <span class="built_in">LL</span>(la2[i]) * la[i] % P - P); </span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="built_in">init</span>(k + <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">lag</span>(n, k + <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重心拉插"><a href="#重心拉插" class="headerlink" title="重心拉插"></a>重心拉插</h2><p>设 $g = \prod (x - x_i), w_i = \frac{y_i}{\prod_{j \ne i} (x_i - x_j)}$ ，则式子为：<br>$$<br>\begin{aligned}<br>f(x) = g \sum_{i = 1}^n \frac{w_i}{x - x_i}<br>\end{aligned}<br>$$<br>预处理是 $O(n^2)$ 不变，每次计算的复杂度变为 $O(n * t)$ ，其中 $t$ 是计算逆元的复杂度，但这个式子最好的地方在于，可以用 $O(n * t)$ 的时间插入一个新的点，只要计算出 $w_i$ 即可</p><p>注意处理 $x$ 相同的情况</p><p><a href="https://loj.ac/p/165">拉格朗日插值</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eb emplace_back</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3000</span> + <span class="number">100</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">std::vector&lt;<span class="keyword">int</span>&gt; xn, yn, w;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line">    <span class="keyword">return</span> res; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    yn.<span class="built_in">eb</span>(y);</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = xn.<span class="built_in">size</span>() - <span class="number">1</span>; ~i; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">adj</span>(t = x - xn[i]);</span><br><span class="line">        t = <span class="built_in">qpow</span>(t);</span><br><span class="line">        y = <span class="built_in">LL</span>(y) * t % P;</span><br><span class="line">        w[i] = <span class="built_in">LL</span>(P - t) * w[i] % P;</span><br><span class="line">    &#125;</span><br><span class="line">    xn.<span class="built_in">eb</span>(x), w.<span class="built_in">eb</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, t, g = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = xn.<span class="built_in">size</span>() - <span class="number">1</span>; ~i; --i)</span><br><span class="line">        <span class="keyword">if</span> (xn[i] == x) <span class="keyword">return</span> yn[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">adj</span>(t = x - xn[i]);</span><br><span class="line">            g = <span class="built_in">LL</span>(t) * g % P;</span><br><span class="line">            t = <span class="built_in">LL</span>(w[i]) * <span class="built_in">qpow</span>(t) % P;</span><br><span class="line">            <span class="built_in">adj</span>(res += t - P);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">LL</span>(g) * res % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> op, x, y; n--; )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;op, &amp;x);</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;y);</span><br><span class="line">            <span class="built_in">ins</span>(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">ask</span>(x));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后话"><a href="#后话" class="headerlink" title="后话"></a>后话</h2><p>其实还有一种 拉插 + 分治 ntt + 多项式多点求值 的 $O(n \log^2 n)$ 快速插值方法，后面有时间补充吧</p>]]></content>
    
    
    <summary type="html">&lt;p&gt; 已知点值求多项式&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://dyd-true.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="数论,数学" scheme="https://dyd-true.github.io/tags/%E6%95%B0%E8%AE%BA-%E6%95%B0%E5%AD%A6/"/>
    
    <category term="笔记" scheme="https://dyd-true.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="多项式" scheme="https://dyd-true.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Boruvka 最小生成树</title>
    <link href="https://dyd-true.github.io/2022/08/01/Boruvka-%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    <id>https://dyd-true.github.io/2022/08/01/Boruvka-%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/</id>
    <published>2022-08-01T08:55:39.000Z</published>
    <updated>2022-08-01T13:30:33.266Z</updated>
    
    <content type="html"><![CDATA[<p> 另一种 MST</p><span id="more"></span><h1 id="Boruvka-最小生成树"><a href="#Boruvka-最小生成树" class="headerlink" title="Boruvka 最小生成树"></a>Boruvka 最小生成树</h1><p>这种最小生成树常用于解决边很多，但边权又和点有关，并且常常和数据结构、 dp 、分治等套在一起</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>初始化每个点为一个联通块</li><li>每一轮，对每个联通块找到权值最小的、连向其它联通块的边，加入 MST 并跟新联通性，直到只剩一个联通块</li></ul><p>不难发现，每轮联通块数目至少会减少一半，所以最多进行 $\log n$ 轮，思想很简单，但“对每个联通块找到权值最小的、连向其它联通块的边”，这个操作给了我们乱搞的可能</p><h2 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h2><p><a href="http://codeforces.com/problemset/problem/888/G">Xor-MST</a></p><p> $O(n^2)$ 级别的边数无法 kruskal ，考虑 Boruvka ，问题是如何找到每个联通块连向其它联通块的最小边，考虑 Trie ，对每个联通块建一棵 Trie ，再对全局建一棵 Trie ，维护好 size ，每次就在全局的 Tire 和当前联通块的 Tire 的差上找到最小边，这是 $O(n \log A)$ 的，然后合并联通块的同时合并 Trie 是 $O(n \log A)$ 的，加上 Boruvka ，总复杂度为 $O(n \log n \log A)$ </p><p>注意到如果 $a$ 中有重复元素的话，可以不费代价的直接连起来，那么其实就只用考虑去重后的 $a$ </p><p>似乎有更快的解法</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[N], fa[N];</span><br><span class="line">LL ans;</span><br><span class="line">std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mn[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> si, ed;</span><br><span class="line">    Node *ch[<span class="number">2</span>];</span><br><span class="line">&#125; pool[N * <span class="number">60</span>], *tot = pool, _null = &#123;<span class="number">0</span>, <span class="number">0</span>, &#123;<span class="literal">nullptr</span>, <span class="literal">nullptr</span>&#125;&#125;, *null = &amp;_null;</span><br><span class="line">Node *rt[N], *tr;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123; <span class="keyword">return</span> x == fa[x] ? x : fa[x] = <span class="built_in">get</span>(fa[x]); &#125;</span><br><span class="line">Node* _new()&#123; <span class="keyword">return</span> *tot = &#123;<span class="number">0</span>, <span class="number">0</span>, &#123;null, null&#125;&#125;, tot++; &#125;</span><br><span class="line"><span class="function">Node* <span class="title">merge</span><span class="params">(Node *x, Node *y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == null) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">if</span> (x == null) <span class="keyword">return</span> y;</span><br><span class="line">    x-&gt;si += y-&gt;si;</span><br><span class="line">    <span class="keyword">if</span> (y-&gt;ed) x-&gt;ed = y-&gt;ed;</span><br><span class="line">    x-&gt;ch[<span class="number">0</span>] = <span class="built_in">merge</span>(x-&gt;ch[<span class="number">0</span>], y-&gt;ch[<span class="number">0</span>]);</span><br><span class="line">    x-&gt;ch[<span class="number">1</span>] = <span class="built_in">merge</span>(x-&gt;ch[<span class="number">1</span>], y-&gt;ch[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(Node *p, <span class="keyword">int</span> x, <span class="keyword">int</span> id)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">30</span>, c; ~i; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        ++p-&gt;si;</span><br><span class="line">        c = (x &gt;&gt; i) &amp; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;ch[c] == null) p-&gt;ch[c] = _new();</span><br><span class="line">        p = p-&gt;ch[c];</span><br><span class="line">    &#125;</span><br><span class="line">    ++p-&gt;si, p-&gt;ed = id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> id, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Node *p = rt[id], *q = tr;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">30</span>, c, t; ~i; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        c = (x &gt;&gt; i) &amp; <span class="number">1</span>;</span><br><span class="line">        t = q-&gt;ch[c]-&gt;si - p-&gt;ch[c]-&gt;si;</span><br><span class="line">        <span class="keyword">if</span> (t &lt;= <span class="number">0</span>) c ^= <span class="number">1</span>;</span><br><span class="line">        q = q-&gt;ch[c];</span><br><span class="line">        <span class="keyword">if</span> (p-&gt;ch[c] != null) p = p-&gt;ch[c];</span><br><span class="line">        <span class="keyword">else</span> p = rt[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> q-&gt;ed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    std::<span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">    n = std::<span class="built_in">unique</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>) - a - <span class="number">1</span>;</span><br><span class="line">    std::<span class="built_in">iota</span>(fa + <span class="number">1</span>, fa + n + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    tr = _new(), rt[<span class="number">0</span>] = _new(); <span class="comment">//建一个空节点用于find</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        rt[i] = _new();</span><br><span class="line">        <span class="built_in">ins</span>(rt[i], a[i], i), <span class="built_in">ins</span>(tr, a[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> o = n - <span class="number">1</span>; o; )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) mn[i] = &#123;inf, inf&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, t, t1, t2; i &lt;= n; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            t2 = <span class="built_in">find</span>(t = <span class="built_in">get</span>(i), a[i]);</span><br><span class="line">            t1 = a[i] ^ a[t2];</span><br><span class="line">            mn[t] = std::<span class="built_in">min</span>(mn[t], &#123;t1, t2&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, j, k; i &lt;= n &amp;&amp; o; ++i) <span class="keyword">if</span> (mn[i].fi &lt; inf)</span><br><span class="line">        &#123;</span><br><span class="line">            k = <span class="built_in">get</span>(i), j = <span class="built_in">get</span>(mn[i].se); </span><br><span class="line">            <span class="keyword">if</span> (k == j) <span class="keyword">continue</span>;</span><br><span class="line">            ans += mn[i].fi;</span><br><span class="line">            fa[j] = k, rt[k] = <span class="built_in">merge</span>(rt[k], rt[j]);</span><br><span class="line">            --o;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 另一种 MST&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://dyd-true.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="图论" scheme="https://dyd-true.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
    <category term="笔记" scheme="https://dyd-true.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>luoguP4389 付公主的背包</title>
    <link href="https://dyd-true.github.io/2022/08/01/luoguP4389-%E4%BB%98%E5%85%AC%E4%B8%BB%E7%9A%84%E8%83%8C%E5%8C%85/"/>
    <id>https://dyd-true.github.io/2022/08/01/luoguP4389-%E4%BB%98%E5%85%AC%E4%B8%BB%E7%9A%84%E8%83%8C%E5%8C%85/</id>
    <published>2022-08-01T00:10:45.000Z</published>
    <updated>2022-08-01T00:27:40.460Z</updated>
    
    <content type="html"><![CDATA[<p> 套路对数化连乘为连加</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P4389">付公主的背包</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>显然 OGF ，我们要求：<br>$$<br>\begin{aligned}<br>F(x)<br>= &amp;\prod (1 + x^{v_i} + x^{2v_i} + …) \\<br>= &amp; \prod \frac{1}{1 - x^{v_i}} \\<br>\end{aligned}<br>$$<br>求对数，有：<br>$$<br>\begin{aligned}<br>G(x) = &amp; \ln(F(x)) \\<br>= &amp; \sum \ln(\frac{1}{1 - x^{v_i}}) \\<br>\end{aligned}<br>$$<br>问题是求 $\ln(\frac{1}{1 - x^{v_i}})$ ：<br>$$<br>\begin{aligned}<br>&amp; \ln(\frac{1}{1 - x^v}) \\<br>= &amp; - \ln (1 - x^v) \\<br>求导得: \\<br>(\ln(1 - x^v))’ = &amp; \frac{-v x^{v - 1}}{1 - x^v} \\<br>= &amp; -v x^{v - 1} (1 + x^{v} + x^{2v} + …) \\<br>= &amp; -v(x^{v - 1} + x^{2v - 1} + x^{3v - 1} + …) \\<br>再积分回去得: \\<br>\ln(1 - x^v) = &amp; -v(\frac{1}{v}x^v + \frac{1}{2v}x^{2v} + … ) \\<br>= &amp; \sum -\frac{1}{i} x^{iv} \\<br>则: \\<br>\ln(\frac{1}{1 - x^v}) = &amp; \sum \frac{1}{i} x^{iv} \\<br>\end{aligned}<br>$$<br>于是构造出多项式然后 $\exp$ 一下即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>注意 $v_i$ 有重复，直接做会 TLE ，要开桶把相同的 $v_i$ 一起做</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> si size()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rsi resize</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">using</span> poly = std::vector&lt;<span class="keyword">int</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1</span> &lt;&lt; <span class="number">18</span> | <span class="number">100</span>, G = <span class="number">3</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, iv[N], rev[N], b[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == P - <span class="number">2</span> &amp;&amp; x &lt; N) <span class="keyword">return</span> iv[x];</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rdy</span><span class="params">(<span class="keyword">int</span> &amp;bit, <span class="keyword">int</span> &amp;tot, <span class="keyword">int</span> len)</span></span>&#123; <span class="keyword">for</span> (bit = <span class="number">0</span>, tot = <span class="number">1</span>; tot &lt;= len; tot &lt;&lt;= <span class="number">1</span>, ++bit); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_r</span><span class="params">(<span class="keyword">int</span> bit, <span class="keyword">int</span> tot)</span></span>&#123; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) rev[i] = (rev[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (bit - <span class="number">1</span>)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> tot, <span class="keyword">int</span> op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> gn[N];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) <span class="keyword">if</span> (i &lt; rev[i]) std::<span class="built_in">swap</span>(x[i], x[rev[i]]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; tot; mid &lt;&lt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> g0 = <span class="built_in">qpow</span>(G, (P - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">-1</span>) g0 = <span class="built_in">qpow</span>(g0);</span><br><span class="line">        gn[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; mid; ++i) gn[i] = <span class="built_in">LL</span>(g0) * gn[i - <span class="number">1</span>] % P;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; i += (mid &lt;&lt; <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> *x1 = x + i, *x2 = x + i + mid, *ed = x2, *g = gn; x1 != ed; ++x1, ++x2, ++g)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> p = *x1, q = <span class="built_in">LL</span>(*x2) * *g % P;</span><br><span class="line">                <span class="built_in">adj</span>(*x1 = p + q - P), <span class="built_in">adj</span>(*x2 = p - q);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="number">1</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">qpow</span>(tot);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(t) * x[i] % P;</span><br><span class="line">&#125;</span><br><span class="line">poly <span class="keyword">operator</span> * (poly x, poly y)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.<span class="built_in">empty</span>() || y.<span class="built_in">empty</span>()) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    <span class="keyword">int</span> n = x.si, m = y.si, tot, bit;</span><br><span class="line">    <span class="built_in">rdy</span>(bit, tot, n + m), <span class="built_in">get_r</span>(bit, tot);</span><br><span class="line">    x.<span class="built_in">rsi</span>(tot), y.<span class="built_in">rsi</span>(tot);</span><br><span class="line">    <span class="keyword">if</span> (x == y) <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">1</span>), y = x;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">1</span>), <span class="built_in">ntt</span>(y.<span class="built_in">data</span>(), tot, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(x[i]) * y[i] % P;</span><br><span class="line">    <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> x.<span class="built_in">rsi</span>(n + m - <span class="number">1</span>), x;</span><br><span class="line">&#125;</span><br><span class="line">poly <span class="keyword">operator</span> - (poly x, poly y)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.si &lt; y.si) x.<span class="built_in">rsi</span>(y.si);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = y.si - <span class="number">1</span>; ~i; --i) <span class="built_in">adj</span>(x[i] -= y[i]);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">inv</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = x.si;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> &#123;<span class="built_in">qpow</span>(x[<span class="number">0</span>])&#125;;</span><br><span class="line">    poly y = <span class="built_in">inv</span>(<span class="built_in">poly</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">begin</span>() + ((n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>))), z = y * y * x, <span class="built_in">res</span>(n);</span><br><span class="line">    y.<span class="built_in">rsi</span>(n), z.<span class="built_in">rsi</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">adj</span>(res[i] = <span class="number">2</span> * y[i] - z[i]);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">dif</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">poly <span class="title">res</span><span class="params">(x.si - <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x.si - <span class="number">1</span>; i; --i) res[i - <span class="number">1</span>] = <span class="built_in">LL</span>(i) * x[i] % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">inte</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">poly <span class="title">res</span><span class="params">(x.si + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x.si - <span class="number">1</span>; ~i; --i) res[i + <span class="number">1</span>] = <span class="built_in">LL</span>(x[i]) * iv[i + <span class="number">1</span>] % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">ln</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">poly <span class="title">res</span><span class="params">(inv(x) * dif(x))</span></span>;</span><br><span class="line">    res.<span class="built_in">rsi</span>(x.si), res = <span class="built_in">inte</span>(res);</span><br><span class="line">    <span class="keyword">return</span> res.<span class="built_in">rsi</span>(x.si), res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">exp</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = x.si;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> &#123;<span class="number">1</span>&#125;;</span><br><span class="line">    poly y = <span class="built_in">exp</span>(<span class="built_in">poly</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">begin</span>() + ((n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>)));</span><br><span class="line">    y.<span class="built_in">rsi</span>(n);</span><br><span class="line">    poly z = <span class="built_in">ln</span>(y);</span><br><span class="line">    x = x - z, ++x[<span class="number">0</span>], x = x * y;</span><br><span class="line">    <span class="keyword">return</span> x.<span class="built_in">rsi</span>(n), x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    iv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; ++i) iv[i] = <span class="built_in">LL</span>(P - P / i) * iv[P % i] % P;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="function">poly <span class="title">f</span><span class="params">(m + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, v; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;v), ++b[v];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) <span class="keyword">if</span> (b[i])</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; i * j &lt;= m; ++j) <span class="built_in">adj</span>(f[i * j] += <span class="built_in">LL</span>(iv[j]) * b[i] % P - P);</span><br><span class="line">    f = <span class="built_in">exp</span>(f);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, f[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 套路对数化连乘为连加&lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="数论,数学" scheme="https://dyd-true.github.io/tags/%E6%95%B0%E8%AE%BA-%E6%95%B0%E5%AD%A6/"/>
    
    <category term="luogu" scheme="https://dyd-true.github.io/tags/luogu/"/>
    
    <category term="生成函数" scheme="https://dyd-true.github.io/tags/%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0/"/>
    
    <category term="多项式" scheme="https://dyd-true.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>test2022/7/25总结</title>
    <link href="https://dyd-true.github.io/2022/07/26/test2022-7-25%E6%80%BB%E7%BB%93/"/>
    <id>https://dyd-true.github.io/2022/07/26/test2022-7-25%E6%80%BB%E7%BB%93/</id>
    <published>2022-07-26T06:39:22.000Z</published>
    <updated>2022-08-01T08:06:56.961Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b40a0835a4bcdfeeedb8d3986ddcd392d018eb40d97ea6d7c2004822797c5351">91be494885fcda4e29aacd3585d6ad0fb8cc6cad100ff4faeee64ea5d4d79acf04becedce5916fcf84bd081f11be07d2d4aae2fbe2a461aff4abba2219fccd8633349705ca89b1176996eafff3d7c3d10a2c1bd230e5e24e7cbf1d6aa8cd1d4f5f00e5f6884618fc92453f9e8d1040898bf04c7ad3958c2459040858a01c4bbd2d388b487c6f2dee407a3932f30c369f44983747860b00f210b271494053494e0d3a4079e3498a8372593cd236d55c075a50d6d0c12f1a576fc4bd8e418fd38acd0c77c18d67a71af88cd9943ad9195779a1fbe6203800d4d3c99de4d93e29864f7ed4c25e4df4cd83004ead30fc9877ca1c14f97253bf61f5c1f8cd67e4c606aa4036083bc7543439671484a2b74b257a28e316d3124383cfec2ccb0f9928ffe4dffc62abee6ae02f67d55e6b2ae16095217de774a954c5be84d3fd276680377faeb9b9582fad6152ab1979a3df6755ba912db370f5f487bf145fcc43a8d60bdeafdf51f8a10121e03596b1a03a04a3633e00cf45b55e40334cd3658955a0749bd97c05ae470ca97f7f31c5291210f3833bd56af995a85c403e3cabbab68fd22fc9ebe8120ef06cc15c072b06d3a61561c3a74c3d9600bdfd742fd7ca8961dbe0be7688356761701a2a3efe8c13e6a1593f573643592164eb30610eadaa21b0b72ce4768e03789c6e849d2bb0277a395f7f5c6314e1e52c242f016266a5131d34781b1612c5c6dc151c0529ae045bdec4de8b91e056785f3f6c1b1182fc6328e63ced0fa71d048fc659dd033dd09abb008c9c71e81e3d9ddde7dc7d0c5223851fdf6a124e06500d9fee4198d09de4740f63712e206679bab160a46bef4bbb5d4d98a0a9be5fc890fa5ae2835988f2faec70a48d6254cf7668575c1b0a1f3c8f4a52f68fe2704b64913e7211fd469709f09d42517593bd4317299bdd57b575728961ba6af50bc09a74162e3bec1ec680957d64f5c9a8d0faf7ea80330495e11406620271712f91c9beb48d88500261975cfae5205fde15831ccbcddde977bb800427d39d2d9ee8c7c7758a0e43add99aed054bb3a7b69bdaf98ca58c2b0ef599170b7c4f167522198423ace26eedbc663a24683208c8440d1909670b4506ec6b9b7f1a432a54cf4b10111879f1f191dd3ad9af58a780cc93c405642cff40c4bc4d43c3216dfaad5035dcc4f6105830929b80a63c8366a656aa48fe3a4fd4fa2f31e9f53dbc274dd39fa7d1c067ebf5552949579a927d222c7aed4a12144c69e877af10d9787aef53c529fdabdddf5f644a43b433b3750031204d1e81fb3c4584e7e7710297bc4903460f85a8c875d0dfa34d6f6e66494eba41c72e169fb34975adbea8437ed5342b58f2a94bba4831edeab36e252dff704f6e346b07825ff218f061543bebde82b8d40dd821c94a01ef49400b22c06d901f42522b84389e92e568fd20871db40d9c1e97efc88fb2cc0f2121d485d49cfca614177e0b5a2381c994b97190bb60e40dae43c9ad35abc1c64357a649df343cdd750b56d76e8d0c6a4ab7d9f92c0c453246139c9136cf76deeefd355fbc59e50515edb744be6dd8cc23256adb054c98ad47f027370a9a43acc14883bf6b6de939014da7a0488c468df22f3155bde2d0f2445347c45d0cc44b7247e2e6f208dce6f9c9e08289b07283b855c9063c4180546eebcf8977ee45615ba759ea5ac61fd671e36bff0dd357573b8c3a53f3bbeb1687c1605e37cce545d204651b23a2aed1c8813fe3d02b90080e179bcae3a0e22de2d2c1604050fb28d114da47eda9b5c3e92d4db9acdeb6bc2b24e6a580869a58572b12fb7921c824256d4681624cb33f40f1652ea2ba3f3dce23721a9985ebc972cfa457c922645b28843802415e812d7a56309cae2dfcd2f1bc37d83e621239f88f9b7b4fadf8d07af91e7f74650698a6231cfa79f04b50c7adf6f73431d1d6e426dbaee63c7addb67d7bba2d1fc5a7cd01ecede8901f091908f0fd661458e7dcf1a72ec398cd274d337ded5cfcb67de3f7cadc6090fc343221d2d5a42e1891c6f1411da5caca78ebfc66d33921f4626049a3a8023ca95b8dc207169ad964241f5a7b2d92fa86f14946154fad6f6161efef6267e9420289a7ab17446940fc5ec18f2c7a5aac1f8561442754939d8cdc2f25984998b8a31497ce8d9ee36e6921fd3cf3b71488d68fca7c7ad113d3b1eee6fdf319efe53bc393b7cacfb27e1498757684594f042994ed217485569e559a66e5ae21c7ffe1e47a70e456cc40935cfe43a980b56d32dd6216b578746bb9828a0e40da851fabc650d001b1786c267344c671f79d33ee8004b187cc9582fcbdbc8d3405f504bb0cb6a2f528ddbba3d06568857ac1112a10e7d13533630ebd9e9d3376fe8c29dab76fb7cbb4e31a71b85a2b044f0fbcfc2ab8a5c68c329c79e48f9276df8ef9cb092784086afabdba50e166087c186d5468e85ddc61ed45553343a0d67317bc459e06ae688977d1a3f1b3dacb0ee24bf9c68924156c79a0f542c3fc95bb60d51b5c8c87921c4f18f51cdffeb6481b987962022127ebfa8d9185a17383accdf7996276f01e436189ee202fa4513124b957a39d92e3d7fcff472cb22acd9bee174d9e57ce2dea8869ef8735e69817da609d891d266e4866438d2bec61a976f5256926aed0ff46421ff4eed2d78a77a545cbc27c2ae640525fba86585b28ef93260973d6fadad0b42e7c3e5ee89d55f3691afac399decbea0d19d10a6a814a040ac7645759a5d86e4109d22891b8807b7e30e352c34abb4f506f60722080997244d2d0ee617c505848272581ac2d729331df235fce6bb08ee03e8e79eb376daca61613b450c64eb80deefbcb41af3e65453e335a0ef371ab6a4a758ebbc6c46f6b50a87055b3576d4d5ca8951d778969b72d0e806259cb0a9d41685d2bc917e317451f986dd6cbabb83efe07c32771c3fe94ea6ba924df8e4f0a22185f4a8e3a4ec123be5af0c75ea21a9d0c699fcb6b8a969cf7c8f9e02eacb98a495b0e4a6d682535300df530b984d2651101453b9385b694bce0dfe81b6fa34dcc0e6de55c15867d940b26bc7175a4bfbe915cb12376b2cabadec347d9eab0b6d33598dfad2333ddeb8967a9e5c1234cf6d3cdf9cb571906e6bcf23dc94edfc03b19d881037e844b048f23c4806af01df1a91b880b434e8b944f505aa8dbc041500cb6dc664705136ed5d699da8434fc5748845db404e8b06ba27c538d9a379c0a5041461c670cf6447b11132ba6b5b1dfce6a83f47206d186d7e334cd3e4417fcfbd723945133d3bf42255d980ce456bb602f5ee9bf99c94974272171bc85e2b0af665f0e4094843e550cf8d26b77084224a8c6621de622d4ef47083a97f6039503b0b496101c1959a4d458aa6ac8b5ba34b66a1f0c99b4598b815c392782f47d6e1399b021cfa3214eb63de7050006e7cf3477277a72fc19bd2041ed0a673f16e5d080586cb16c79327fe380c2ff61e478aad86236a67b5f57e76749d8b7e9ca7c013be96e2dcb940c64a4da0199a7c1b01a48b31477286bfd9dac775a5eae42e305edb708721b0bee4439e1f75000e0bb6d3c7f8c003b1dde17f61f01fc2619a2b90a7bf2c4f894dfd5f1ffce0a0fb2c61bec8c78a17667fd7280f678f062864024d06c92e9220815832d43a8a2cfadbe00d727dbc5ae8a2c02a53085acde30199ae34e308655490d20ff4761817478b2201ec7ce0741edebaec20bb71676a02bc392c8a9d751d86ee0a8fb163fe6be4854968b35e66f4d7a7b004bb72a58852e645eba78d67b315adf8fd606351a00ec0d7de2a5a194f16d4e2b61981235c1e946f310f548c36bb3557673f94c7542d6be14b055e1d324b3b774df6e24a900b021cdd35665957a45e9054d8ff72ab67ded9ce2e4e0c7c20df015c9e0ceb4b544c026336cd6e5d7c3cb1a1e16c64b293525d7849e1edd99d4e3e108df34160d4b499e9b2953a8462baadf00c0cd53fb71fd07da120360a64ae26fda60d97e67cc3c9f1be8f9fe92177abb2325cbd745294b2ccc894b58f404cf2028b90afcb5c958a1db2a5a4c1459622e43e40828938597f230a4bc58797973043af05a251c65876f93f3d1af72720fb6c32c5ee7a6978eb8e51b3a832b60fcbc1c5f4d7a2f4e11a7684b665a1bc8ad34ff1c4661215bf612e104856a3e96122fd75d6255e9ae5485bfefd7593d41c2ecc22e0252554f808be09714edb15fc3d05bed1c36ff91556a76d25e2e764a474c3b0d5827225d0a2b5eb00eb9c4a7c7ff58ee3ea3e5737b510e3b0dff41d1b267f0137d9aadd66663380c2b1cf2e0df3c3380d6ef211e256536440595562ec8807373caf57e3a22ea5389eac4be19be360a882ba176d8bb1cd1918aff6c55c97368f81c068bb1580dccded14b51201f381743c87d35196a3e67461b60457310764cefaca9a0b30cbcd3d08064e17e3fa238661decd3693532166538ed42322730c202f0b0041288e9987c73b3718e769a8c032258c0d5211cd993326cae571fe6f8640368703f5ae88fee4c5eaaa05ab4674a0b260dc6ff196ffda95876780c9203e4dd6b2b563f914c94a19675057f756a5d25c4ef09b9d97f192e6ba3f5e4041ad18838a160f21fd84499510a0087974cc30840d2c3e063eaa556947c55ca08bc1bde15353f9bcbb404a24ffa1f76e19a9f5906556142f71e4856845cbbff2cb4a26fd8f089ee73f9d16a81338493bb4b2b9ce2249a84f609ddca5028b62d59c05c680e6bb462339b7482083607a9b5460f7987a33bf33e2d864ce6ffc649415d3c48a4648f473b972d8ba25d7db32e121474f15b44fd7c27ff7d53af89a21a7ab637fbc0a9769af16a848de94a21c5059049cf66e5d2b88719edb30b76d48af4018b840b215dcbfa3266b36a7930eed5ca9dd5e481ffe02968e2ff19308643748ea75571b492622fd5b00012e82b6f3b343032c66f381d56860297aa52ba86e6ef1dfa6e3b13593968a1435a919764fb612722691564e6a41a72a962fcfeabbd35b77ba8c152ee1a2a0827e33b873e1534893e9daaafbc3486ba5b77de77f02da6818e9eeffe3f3a42f7b2a3b9d2ef7d3ccbb55b298cfe53b711497497555547e20b4f032990a24d53fd7fcb8d7adef4407c3a77f260833f5131ad50cfcad1ade2c7583cf163b99037fec118eea8db2dca6b5115d167986904ac119bc307c0cfc892c817cb83fabbbdffe5352b4df628f7e6507115963f9711bc5564fa385b9be5db245b103e8d42fc2f54a26a0e7f381323c7266cc776a5834b828e24da14f7957d8e161e2d2ebe5f1fdf6fe8e07cb9bf79af40f0a98d1a44062ffdb24e53f8df576cc30fefbd189b68b8c3947c1fe2d308bddc05be45618fa668c83364846f5888b29dd0974645b08fccb76a1299b8d246da0dbe1e244a8e449bc97e20f94168db7b018826feeb8b2ac3e52d6eb42473613cd33733f7662bf95619fee4997d38bfbcfc142b7bc3fb125cf991f1df624be014cd7dc80a3c13ca695759e27abd2535028594805888942beb2bd73c73dd2f87000349ca778fff154ec11679cf739180941f2bed7c3214d5efd78cb640722fc91b5887fb52e315ba3a05515f8418af52a14853b812129e0fcae67e3381c38f9cfd111b2e6c6d45b9620822ef69a102f3da77260f7434b352465fbf4999c553e80f989f78e7c5edcaa4a51230faaf9cf0760a6b311a19865d0ff6d08f890b40c9c2ac7a1724a32e41e23ccdf5615ba5db856027c3215ccd8485129b7364ba478aca9fb116ec20d73a48e6ff74dfea627dff973e31375c655e06999ea7bc175dddfce98ec673793a556202a99f7cdde899ff2b6c27ead40b24efdf549703d6e044d47f79d615a34478f4d534624e12edf6c501ebc48c38af9ed767d3ba47f9e8b3d4fb6672a4851c71aabf9cd356e4337d0d8b6a15d159a635b9da939858fcad0d1d7abb293c89c4f3fd1b50318697494830fc3f9b14d3747f4c1f705af6832eee49c7baca6280d61c0e6a790ed344253f51bee3115f8efed976d30b98ae0fae22d2e758cafd928f223f38e553ae876046862d19faf50eae7721b21bff5b56f53fcbdc9b63badcdb434ce04d74d0a49b8297931d7980f8e588b71b63529054e55561807508e9ee0c7db9ef81708f67b21043c875249d4af697c09713e8cd982cd89d5f7121f6940d5b1447e61302937cd04708ab2aa6c631998ca61c29c6060d440eaa62c94de7b30181d262115a93ba96ce96afb234805a7ce4c1bd165a46c0392deb62baf041a943625df34da27111cbf63e4c044571f912b7c7eb959946551fb64e8b24b10eb0c6af12addaaddda709ef3e3b7a116b6f71a447552a97c2bde21d0026cd5373276b505b3b54f7fd174d296867dd74c3a663c6bbc17022a583c07c991fe39dcd4b60dd31abe3203acdf51d71dec32552f6111d61dd7f32fda6663038204365ef2f9c5c884309342f0515b9c1dda4767f4de810195738d9d28ab7f7fcd808f3040ecd7cbde1bc925dd158f035532b3c0a44b4aebb15d671236881b5403140d0adac1a55a1de111f1391750bc3d9db8131453781b3f163454b1a4da4ecc5b1c676e4b4e6fc00a04caa41bf7e995110d70710343f6e7cc592e30eb6d865c28bebddf6d9eac4a5c51b500dcd7ca001ad12b97f38db2492fea00fac16f57145c085a7f907815db5165be7914f09c81fd71ce01581d069b97df21fbdf6595146d24ffb159db50b26bd56a217cb3eb96f0fd7ecf2e0763ff86063ca071e1940d328e99572fd584786efcd7050dcdfa3a936187a833bb335c72dce3f8db008faf4037afb816a8c1715ec33acc233de98d7bc5d468d73b7b63bf38a6dfbd10810096b05d065aa5acb88b5f78c54df0f35812bdaf4851055d3e12e454787212828ec5792dff96f2c15c10f5ca434ba52be70d9b980bbf7f22a92c127b157d8a2cbb66c77fad4957c8c8eb324d1206809926cd30327c90aa346dbd12ce4ec38942d9979b88d6580218217f7f6b7832941f54d19edd45bfe145f4a53d2bea542b9c324943229b1c8af74a4002b29b75f1d9e37a7ebf8b5cb60bbc77aaf7a87aeb615eb44a53aa4a0edd9af8053ec6aaa168444646b1e7d44257906ebd4172bb45af16572a4ae524b3da4a9d1a5f2fd188560a762a9bd50d568da865be69f1097983d83f2825efad1b638bb6a2ebd8a4fa39e34a04eb56df29b37867bec9e1a6b7eea4519cd33a14da26c5847a3823c3eced4eead517479c4890cb10b2b8b4307d9b61ecfbddd71db8e30bee9ac5a835f69764a2dca60a16f70773f7df77958314f4d5c8ba83579d0efe6ea01141486ec84b248f695560443efc90ea6f5d6f1e8b51daee426d8e5875b1aca92239b4b3c2ff073fc56fadd746305cfbe13269203e5b23f5165bb86a19aaff77e8ffb121871aea9b178ea8aaa7311b84fd75191c8642255a13682780430fa33ef79c246d9609a84926fa39bf330100083c3225f6fc334d76ab331bbc73a7dace4b58479f9620024d97ce42ce49cfab467039ef1a3ea1ec9970a37394903e306f8d9799b5d72f26183bf614a9ecfcad065e96bc96f5f5f22f09ab6b6ecde2ba77e642f2f694ae3220f186522cd7918ff9998a9b5f35ba9dfbd0eeafb493fcc7bea4c2d3d5c9b2b1ce6b613639443cb77f28e2da4ba994e6f72ffe897d2bd72144c9fe59f750f92d13f6f80043e3198f228c8df351f0efc5da2d46eb4dba2d2d3a6e2f784a27cddf46c04044f437782df4801c8836023f17e8b21f41488e002acdbd61fb2588b0955b6c11244785898bddecdea153177f1b0095cc0ac45ee5367f48fcc466654fb2f4790293837f743def638a4681e2f8e418f3e81be5c5809bd8eb3fa301a2184b8997ba742fe1d7f9aae086f234155f972e53478667e8c8313e81a8f09ca3fc0d93b707c95c09c73abb7d4ba0cbf470ea0e4a94452e1fb28d973e0265d8adc0a9e74d24b3d1386da55286b3245c7eca2d651ef73c1ee54ea06094e3457a610f420f01fc4332d9ac5d893bbaff4b97a9f1852fcb9bb6cc111b7aa0085e85094c333c78bbde61ad2c138427384114d4190b5daecbe0fd66ec252323b514b245fe5296db3c04d0e2ee4c8800ab7c3b63573ae16d38886dcd211e9332aa899681fe7979fe0b401e0091a49b9b281c05f1a8a6350a1952575f01bf43bb52050fb15f7ef999596bb5d57475cd3696f63a8d88313a81d6cf79888b2f7ad5ede38ea7ac983e51617621202695d3eaae860831ec44f6cb9a73425760341f97bf4380c532002b5cce0cc6aef9d1cc68c68b8f4395b08649df347a7e56312b3289c8e321cdaad2f0dc1847b198e0e23073357187579621df1d39004e11a306125b1aba9ba8fe0970cb6af72799bdbbab63248765c424fe5c040a4f8e0671170152be43aec31242156ab2643a509ea0b98be4dc00f727853541a3b5c2f75ec608becd37bdc8ac926dc93209db1e63a1ef757fe77520030dba7a010ebac33f1c4830c06f8e7163babd2e999ea2484a53d186e900341ccf585ccf204b8cad72ed9fd2ffcbbc19e84e4ade01a2cf78b76bc9328cc0be1758abd35a3d517f6c99a78afb94b8bc48695216cadcf6ed0c0a801177aac40b376de03c23231b3132cad58c3d991f459b2e0f01c4ad74c3b44fa884d963349c274bacdd2b423fe573ee6c39ec62a4a0bf4463348a2f47c0528bba8fa64b0d2059705e5cb9e26bd85447a4afea09b3a8372dea58e2457a04e88f1cb5b07cc2f9f933605348eecac0dac22ce4b7fb21b0314d397a73d163304fe7bad9e886b0af6c8bdb73bbb0b6bfbab92730590ccb62d486c391851d520afb2f77e24f2e61c0a2aec29e662b4734195bcc64a04c8f8805b3c43dfc835287c3992dce8a6589ea62caa51114d55e3fb582dae9c228cc3befa6683284e1236a64b932d2196d735c94e8571be01ba8a711cd7e38f416eea46aa5ba089f6a53e99a1707a3d1b51ab9bfac02f295994a444c9b7f048bf1bf0534a8a7b818d535b8a9a2580b4940ca6ec1e285790ba87b7de38de591b21bb8117687de22a878d578d61e95de94dd8e08214933416ba5e80d5a0728e63336d75f5e379c2d312f48b001e0cc79e55bf94b56c1213ee8aba0c4fcf7a40781c738a559818170cecc2c6c036b9da6e6472b8cfa1202e3760cd925fc8345bc21620e8ef727a2e07576c3eac62a67059bc4a7dacd242f29df336e036e5f3e52524bb00e79b27ae475a4feeb8279280699a54d0f2b7f82fd9ee6fc5730df69935ce70d2e18daa05c1b07cfa03a1176a9f119ef05a05dcf4fab4b3329bcf8949fa13cd1ba249fc9f6258e6b0f2435998e553a3e5a9c62ca36f261e10d220a218afdf1133a457177556c6fdd1aa13f5ef920b16b440e9e61f12f47f17660356e59b6177a3f7e934bdc8a8cb3c888997775703943e11d0987da6e502958c05a79b199eed80d5e80d35dd14f54ffdc8af168f88978a974dd8ef614789a239da2c83cf487db424b371844fe3ff24fb94f54d75d65a0f97f26ee9a6303807828887d6a29c30dd8e076265d6f1f79000dfdeb3ed2943b847a1808ba13144e5abc4c064e5ff70e3e196a7fc636e0504cd0f579fdf497feb9cdd48916eccf4ea5c7fa9255be7d6be8ce617443de218308a387d13c7e6d1b7578680bead98ffd01b736ba0c0063617d7a8070a36a25a4e81c354d7ce043b9079aaf8e782f79fa01a37d63ca297abc14542d63352abc8bd226919557cb525f193685af56bebdb5593ca988e95473e1ee2ffbe3b2ce8c13aff16341bd6af3b64973c9b496add0163cf796953aeb2f3afd09cc3c4cf2be675ab10154e0a5d9d3e7d364c4fbc576c319734ead1286c7d1427d04abf1de34d06bcca43d9a66292b4f9d40e0183e005694221df441a7956b77b9c8fc293444345936d692553886ae2afca6b2f47506636aed0b219d51981362287769e5c06000766a8520d194f8d5d35d40e6d45246e1584df67a1fc3fb5f07e38cd3078c47ab1555c1bbcd569d7d4e480590b4fce36ed7e9eb89101431c707bea86310c9cc0a4ce7e674d2a81f3d1ba70aaaa25664433f71146e48ff637647a7024a6d2cb7d98b33632dae76d183da4a008ea63f155e80743f04e3127d92128b00cddbcc41a40f370318a9b9ea19ed52c026d2174bcf523e4a04d0e6df78777abb9077e1ff5c94012439ca1f1f8cc976a2a65513274fb2d0c6ae91f16363de7fd8e9a2a6b735ddd66e632b64850c0fe8b0fac3e2c93d5cdfa5345b6752c6970de33a143dd4fe0fbc9becd204dd5798acb4f7873516f4e7a34e58a4dabffa050fb68447fcf6e533e8b6597dc008677ffc25448f51a3ad49783cd599699bb10f59cc7fe59cbfcbe182ef17909fdced92c1a7a73cfb7df0f2696c476a096df843d5daac6de7155953e1be6502bf107add0a7059053db6813f4a3b62e9d563dc82a84885c2632a43fe8df77c848ae1c4650ddaeca9095aa4b58b95ffb27def7a75d7095fdd99d23e79c41a4730207ff76262b24361902c8ce4a5ce4f6b6cddde01268a3c5aa891a2341323fba1b18c0c6d76b46bfeb76082d04704820d852abd3913f81d6391711af2373a29e8e57460fb694da4c48d496244eaf562a3dbb16a3475327482a840f843872beec4ce687fc6b8b5406c19a43958993fd5f5f03e05e6bd761f7dfcd23eaa49adcc5f61d3ce9e042cbc67ccb5793db0d92a66e90bd9b0d9cd590be375af7031fd8853d550069dcc11a8adb058aa7414edefc0be7a84bacd7a587b1c0ac1010046ce6018742316dbab082498b5283cce033251989fe48f82d2a8ab3fcaca499ad4dec01534deb312e204def582f4dd23005208308d52cd1d87f4b538922db13949387e21baf6532908788d9f03219a8377d2abcc66706995fe3744fb123b6486782468369129e4aae51c2ffc5862c49160155f6aa8a990882892d500ea18726db3bc67f9092af2a2bf1f5a41ce4f697b5e0463af46a99f332f343ed0a8476b00026e1633431f9877a09dfc24f65bbbd4ca68f0f4d6f2d9f62f3700d50508d27494f1e5dcad54c60587068ab919c1980d4b34cc33d5458ca9951d4fc96922a7bc4cdd2b57bfd5fbaee69357a1b635b19fb4f9be8cf01773af14076e41d09256e8c26627bd84f44e4dc2a5b21a56f7551edd706a34f47618f9633bc302a466474b0496d879635116f990521ea992c8faa0b5f7924a0f2496c24c86f365fd52a65a0f030140b539bac5aa882a97c2f0e1ee676dfb583b28122a795fdd05da1a001f345ff544532e3461d56b282da44a32c4962db25f743aeb7fd556feb45bd9cd63a026a0640ee58e0d3db96d364ac4bfe8dbeccf9062c16d1c927af4d795e2dd14676cddd2cc860121af380126bf308ceb851d218bb692ccbe7b2b1debf05539b8840b8807e1d079789d34290f459c8ec7611cb163d8ee80694a636922190c5b7d71fe41a730820473d424a79b9bef1aa4000e4413d1e9a79e8d824a796e89783a15e91f5d99c13d92f21cbefa017a4400c3f4ae2afe2677c71c744d8403547d96c2d55d5dd6507c32b6bbf0399fbe87cfec43926476854438f918fb7f0c99cafc5ab677929c4bfca0249869e279229a1805f98f47b44f1f927dc3295741cefb8680fad9fedc11fff9ee41ce7b6e8c9fddae6d36710563da39ca1bc03c866f580ea4d6f78198b6668131b1689f174fb8d2eeb71184be1f9e2cf9b9b0460c48b5b392fb9171e019b774d4bd15cc056f6c5479a8a8e115b6dfa1bfaab79a729d41f1892ade2f091223026697cbaad62c9d70700e399d49482b27ad89a714abee17609c543b3f9ae998cefeefb0d6f7344e5e89d1f57b102b95fa35b6feba98942a6fb09f25faa8168f9d0de9fbbd9ec574ce2c745ece2e4cc935618fca8d3fe3f07046dda3aaaf9fcfd1de43f9c73a77ad6bd9dcae6b1c1300e04ab64c4084b35e5a1dc36f9f89cf6207a8628c2c8b5509119ab5a13ba3b7a57088226658e29fe7438cc8be9466896057ab984d5f9da713e62c9348acde37b129339cada37d404a0dc6fe9276d3dd0da9c17ca81c1346d4b3ab0fc232b86a1928d69f49c595af444b8820fd329ab7c1a39c8612a185ced7fde48f1cdbb762f27052957844110cb7b8b55c8bf9118615f7362a65ae2f28016ad274d7d7576b5ce7588054eb38389d21eb8dfbaa03479c79ee8631d5167117af08ff5fe86abaef14383c355a47646d699e14ddd8bed4133194c8a367994d698e48a064c0e5989b272f8e1959793c5838d33493fb89beeb447dacc02dee67795de439e993e55df652170ee8153dd863228782d2226b62f9578f6529b0cc4150e4c7fd22fb29bb7a4b873b0533a82f52f4c30a7f65385fc7e137e9ee278881dce0977338ae94998308b7ae1d5c9cab547779af445fe8f87ee0f7bd124aabcc8957b65c2bcf31d065f6300c0b320a01863a3f7117014856cd23eb5ac8aaa1742de58f0e4e0645dcf0c789a43660083251c627b7b7e0b6c5a8eb0e66cdbb8e4af9c1e83b65018d29f2124738841a5eccc9806214d7618d5160031584b64b6dd031a6af6a538ef89eaf53796a4cd380fa06d997456b549cfd0b08ac542ef7ce10565d4570c86885d961ce915557d9faba3a510256a1da6a4865675b2cadd06ba006686e31b532cb733db65ab4b5ad89878938b78b4fcc08755b0783a27e51a20d100b6796f2de4279848846e7d6d939ecad5a87a11f2d7313462b74509609b0d27e302f879233212132e6359717865a68e1068cc527cfb2925edc7f734d15c4f91b7c5573f32418f68c176e3d4e4469a9ceeb938286c49c8dc195cd92bb4ddcd0275294c853fcbf8e899f1ee2b9b7e254f75dd8dc14fedc393e6560ab4fd06fff012b7b1fe7ff96104116ca6999d493f014ffe606e24e78bc59ea1de32d10b6371054e9a7a51520384447276d1753b2a2693bb33c5f713dfec25cf34519fa2fcb684e49c2baaa6c11b028490cde1b631052f1541794d50a14c415c5f88c135a6af6efd8f6e07b2bed8f5da9be8ed24a615b43219354e4de9d6068d0438eb87c7c2f07818f6cd0f3f19d86ccc14ca8fc9e5b48031ee799a7315b9bf29d1f7f7f9c68fbe6c73e2110bf11721435f4f8bc299d3830ceba04b0184ce7246a4a65abb6c70b266d177437e9d81090e7f7cd61e1b565623766d5712d34783714f3ae8e2dc5948112139d8286da4e7b5f0a92c849691276740d74b504bc45f4b5024bfbd48e1dab41c8f016e91f031f41bc4546c4a7e839459ce3804e72720e12941f0f021515ac1407de8ddea438318d6035f5fdf87261a2bfec8e2a580bfbc01469b7eb692a05362c425e54bf8152c1c8893746d5b7c902512f36b3aca56e456060872cd2700736850e52ad4a804a046c34c1fea5a5e5d98606f2e65ddea0f51eae2ddc5a02ff695510976af5e756238a0ad4195cd8000511db3e5abcd6d086dde04302d9f34149437e05e55444950b97c4bc532d1ec390cb2122080a54bf0d37ea955664bc666d24899d2296f72e13618b8378adcecdeab01bf705a44fd7254ca5ec1872f2394114227d0dc48b5740e9663737024ea720797c0492fcf1356e9605cca537f497eccfbb843b73dc6d03172e1e53a8f1adb029ff974aad93275658ffabd210ac9b0e647cebb7ec5c8874678fa8ea9858735130b938193901498ac78fa3e7c7dc415749c9af007a0c9910230ef49c7d47bca9b69b3f09eed65074ea0610c2010843b20a3737926945df2c75ee4c865869e443d5a106e5a9061afd164b01959bcda7f32b9ba972a5741fca7d68cceb04f2da1bbf91a7917486762fdea2198dd43c6281ef50349062ccc22d1da072eb97ec7193689b617fdb17a2d6edd1fb213381b4298abd7a6f72566a5965b47c2cc38a98e89e04b7dee3aba3ce72d0a579889bf3ce0e671e198e23be85d72b8ce327c9e14243c40cf4300d26219eae734225b14119227589bdbce8ae8b565842a22552097d383f79f3b5792e7b6fad4db1bf4533ce7e247d745a49ddba33589465bcbfb5383dfab5228d145c7536167c258727aa998adbd6b14d628f3de209ba363ca9b55c44a8a6b33956396377b675cc3ec273dadc4789f91e7c16ef0cb6adf31b7c3bf7f749835c03954367c1d2f72f760e72272610b847175f907e1a2f762175b578349f43b373071122109ce37c7cf6c4d693b651854f85bb591660742e9964256563b848cb96c4be43993b6f9f87718b54947d8ba389106cf1812797c0caed8217b2cd54c1d980ac92b4927a30c4ea627acaa2760cb708f907749038c07c960ab8cbd18ed3bbac5f1ceebe0400883fba4ecba0ac00475770c24ca973eb6c643c8fdc8daa0b3e57167c6e1a26f2242eff262c163e8c0bfb0c13d9ff07b04755c5563272760faedeb1a349248ccd5ff29b3afe121c543e16bb52be4c15b4df53a69f65f68fdd8fa6a711d34916afdd4a7dd68dbef9f57f75978d2514b21c97d1d0a31ff068e3c9a11caf219b56cf7f2a312c1dc9bdeb514e13e993090ff8ceb1b89b57c0f47953b4c51998cd9fdba38bf47130518e0c75d831e9b15dab9b37508433989df802a6b1567dcd69cf9aea4f4626bad801cff7135f9718cdc0c5ce7f5f02f08b85aec14164daff9ace338793cb1fe2f2fea8ae2d84b070b3930e69339f8687e68dbf12f2a53f745ce89bbfeebc85d4b33b3b9dd5e1b4a052cceee1ac5fc75eb5e49f6ecc1416ad3c3d5be0167763ed12704bfd6c33b45fb85ad8a56617dc264a76127c13f17b56ad57bbc7f5fcb98c9b33a37af7a1f026157968054e01c52efe9e2df50b79faf15ad840e567d7d1efdb8829cf901f17a5d5d01794262d8cb04e156495f80e99aa160b2737aa6663815f0c7f951c44dd27e4d564b87af7bc3fb49e0839a19e5554a62c3c11e1cee62f2bcc2e2d7463a3ebfab231448fec47e5a67975f8e78af6f4e5dddbaa481ce38fb5a35b3c9691e9cdad4f9e4672a258e011f60d4749004801dce49477f832fd87f4b3363e6b30847d0251ae3caddbad011419e61ced0ffa7b326222b44ec57b740b4c1014e394b966ad4956d04edc20a9c0a1109a36e59f30a1c5b24281572c17d221b04bc63a131ff7b5237603c992eeecee12dd38dac006d25a47371b2a279f245f43c52db8056943417fffb6ad273ac72de752ecfb0f802027332faeffcb7a44099e35a0ebc4182c2cd869ecb08ac0e802446cfd300b33dfebbd42a75ec0edf5679a78a44ddb009b6b9f10a47aa82544512f07b6720f02f47f8b9227d9aa4f07a7faad490a038c2b2aafc0f3b665165fd147aa6e8442305aab84673b383c8352b56b6786d8a18cddbcf1a2379904cdf6fee3d4548d61826725a5685c5912a0420d1f48648820253002d539b1a2bbf848273ac7e06b5548c2da44d52b7580bb46b20e329384999d5ef9497ff59c9aeff188fa94db754c6c491a700907fb0d6d9d886e6d5e645241a17a9f911930a35bdca9eb5914d0c2736e64f8151e607f23d9433fd84187edb10b0071abf14a8f4666d00d655922365f425f3fc09bddb046cfc3453054ac41b876e57c33fccde06db83ae34dbfcf116f4dbca28b9317f6ed0243e3df3f3f61eb2efbc958e0b80000c41a91bcb633995bceaf7f81e5074fc45c276277f4d944403785874d120b5d224d196e5743949cb2f8841bf27836cd7e0bfbbe0a87cdeccd8fcd94d1d4c152b151749e98ab1aa7bf58c3978a8104dc0934f44b0c33bc3e435deb15885c11dae08de99026ab869424b2de0e3cb63d9c8ab73643aedd60e2127993435886343d96663fa8c937861ac00d49dfa0afa973c9127dc4bd236e15d95c7e0a9b11b6bb1c875b47f98779d26e4bf1056c5a108e9c52748e6489cd16d08fb4e5813a85ff35f0419d341f382f5b0800b1d4335598c52e5ccdb41a7e7e671c07063669f53e7e987e9224581f2faa067d5268f84771adb0eab5d0f32635b26a641a5be0565e063af02ae073940b2c00e61753b8f01113f6943cfb6a5430017a66cfca13610a94f2de88f05e386e097e6c4c222d0c25a9e80309b184d7b75f53fc7cc1a46e9a38cb71e730eb1105e4728aacd3f17dbec2703fcf5f5fbb045605983d7ed465a14f96347fda353319993f5d2752976414123adccdbf7adc49c01dc7431cde44b7891e98604e93b2a66ec9a023f5f81c5329e6875502d8eb6b7c12cc1a953e20c00ccd97aa9ce6a0e9f0e175152230e2cb89c9fed06235d45ea51c4cfadd210c58f75ddac56b2d2ecf5617bdf1a85347db1621dc3f25fa3f20c48b7afe2fc0d31f4fb644c05f86251d890a8b1b19b3d7af3fc193b0c17f45740e1864f9dc42b223a2c14c7b724dbb68cc614790e51e0fc274800fd7973105ac29a09c040f1e3bf97a502533d18b4eb45a89838f2ddcd65cac4e379b4202010b2973a913c3a19a111339fdf9c78ae8961ffd33fa98850a6ce99646b97aca72e718432a807d2e4a252a618089c46ca3d18e1fd65fb9c444ad4f003e0414c422305d69a9cc1831ef1e909d7a498a7350af7d0b00f888260fe441bf77661a0dfa33b3c28f13687a4abd6fb13fdaf637e24ef2c3cc60c476263d2e6c8ed490ee32ce5aa04ed2a8c7c65630a3c169dc1147d31928111c2d57f99ca8edb4ad454dde0cb673bf0951a533143d213dc7315882deda26d3a4ad6ab8cc64d030d300e533ae1a4badc5b86d5a68d90cf12d5821c8e3a76628116108ded17ea94798355915c2c5d953dd8ef8b33ad42e4712445dc6792908767557bcc9e99462e2c5654580a9f62465ee5ea91a89a730f6863898c1352360ea7b967a4416be1790f36a46989937e4eb01e228dbff0de78c31e288ae3d04d544abb6e058fecbd535f7ff7dcc0dabe81d9c186cd1e7c67bfa43215d2f2575753e65c3b2108f28163f90bd83739df4af7cc67afacf0448375cc597419241590c377ea29ae3033696c4bd4a7d164c5e5cb5abd5a2b474d2c82f29f1e33b09438cbd3fed48d6ec77420737f827f0ad310be4d516a07e04b41fc75f68f0d72a1dee83869beb23c00bd8818cc231fe060fd440218171d30e6034b22b8ac0a7b53c31cddeb159bbc97fa48860075209d27895c02a07d276959e34bbb13f2cd870c17e9e947a36b44917b04c6766e3e6ccf9710bc2287a9f9c466af969e4ca17dcb2a6bfae93bdc3afb948267f943f2e12a40a060639869a43d790d821ff225d461fe9de5896f3f2b16172ad316ae9e9ae5cb0435119c33613efb1246a3da27f8c023c4dd3fc1c1108a0d3e1d104f6cd1de489fcdd2ae1ddf43363c7fa713c5ce92870ee2705dd1df69a6b7a59f0b0d25e46560b8d94b07a6812e3f60707be9543fa5853cddf4d72eb19f818a308524bc726ec36d1826f8e746123d966b89357d5b9feb10fb872380487b960108f7aadb5256607e44397f0f844a21058cc87f473e8bfc5e7223d598267c4a104574bbed8a25930475c822408af27a658c8f927468bbcd38a7e2c656e8b7d9bda10a9a018630769185ebf61b64318779aff323417c1f61801c96284fb48e675a4ea02aeb3f29cb9ad1e7527c835a24be588a0cbeea33315d2298994af4a8c20b437a244d898654b496b7917da8780d59fac7310534b59681bfc049e5aa2c1de98e75f6506dd7b868fbdc2801bf36af924533b1f605d2064535be94a6feb6ca6fdb6fbb0a5a9f38f030ed12cf31bac8e388982cc4dfe1a0829fa666845f1bfab8f0d724cf2c0c27e6da34350929b1598f15c26805e8bd17fc4118cd4b3012e517dc69e966ef2c26d7a791ade70bc8eb91d5a3016fa7cc81c65cd3bdf5f068fc868d6ca9466e39b6ece6c4d926f18398e429a3d217fee6f07d0e60eb34d97eeb2715f857592d847229a76d77a77baf6b775f3df5f1a687c31279d3b53e33bf1aaff1d954300e77c9f9a9f292d294a50a20165077d29d2a97ac438fefea3a25502d29f6941e52804c167ef0e3bda95c0736993a78fc11f59d21034dbc321ad9ed6ede37305c8b7b58fa80a55f29d90e6c2f3b95e205e99ac7950b6c78fb31b9653fe88229c436a0ab13b05298923fd91e7fa3a1e39b76129f774852f8257d5f27859a338e97e8906735250588de8b2271b7de8ffde50fb8a794efa0a5daf8c219681679fdf60c22249f583b78b2a6653e925366650063ebbb8c13c4990fdb2032aede03f6e4826b1f152b094e49a564bf952072b2250f655e1e550a710c322b5c980a16871c82a27a85cb1e016d064a2bc1d7e92b1909f7cfdb887d2c65c2cc5c9e9b27161ed802888ba1ad66ce571b2ed0e1b2d138f40bdfa6bc1b320c89ce292d77bfef09a37c1c18f8b31e90990a6cfaa8173448cae795324b3825d89b1f9285ac03ffdff937e70366a3bcc147e72ce654804572d271e82435f92c11515360ee8605e16a4ac68ab563203dfb7e47ead8d30c7b9431252450a3a22f0b278c7923ced49ac58404bf9a3e2b8b0eb80b47d2e1082cf8a7f2da997c8dbcd42ef2644cec27ff2837898070b93bba10559c7480cd0151865aacc5c944e11c63791ce71ea8113060c4bee584ebd2b6eb44d8590d6793a9efd27e5a414f7f26e4bb1fe8299b5b8b580f23ed2b569d07ac2987e4f43d7de6ab0c34114e6916104a4decfc1d19bb7a3ee52120ff1930fd56b9a4597e2f4b4edba3b29fdaed119fad2d047094ef1c6a066603e89c1efff7ed78c0880375ef9f0edce4578411ba71ccb582fae37d4806c2a049825f211385759cb9b93645012e69c0ba0b73a65ed255071b58d088f3450a31cf64b9ceab82ee21b21b38a25d753d9c27d9a567fdc0fa41a5914ee0e509f26f7cae9896132c011d69dd41717c20561ba9b8837b25030ed4408e3f289f76fab40569c2da267036e6f2d428d13044cccdfdcb53571df94f647ebef0ddd78f3c1299934e1a5d5997803cbb8cb1aa0070a71b011b71712f2efaf8411844399044a26caf66a74afcd518c27babc6f8cdd800f588b009b05bb6984202af91c0b600562444f25d8d3b2c3116456883db6429b9969693322d32a63c1e479f6e6f091e6a3ea70c6f971ccc65c416cf464ebf6972ce3983d9f5ec1a503f4536c3569a3f315c1507d96824b5aeaac5816277bff3edf0ebcf3fc1d0e509ee4dad343cbd287666b269627f867a8181912fb11d0dde3154b6c281054dfb2b0b5e87a1e5650691b659b824487f3d4008377ff482a549c73db589c85667a320d12e4ec8c92673fdecb30e878e7fc2dc99066d878807aa74eb2f85ca96e9c0537a868655bf5de4884a8360cb2128f137089c2420b94601dad29c9c8b6b983dedf3856f61caf61625faf4cfd3ada6730b39605d12b8480d0a22d66b8c20d8219898c60b4ed1e9e343485e2d94dae07834a9e15ed507e35935457c6990b1e9a777c6fb000f9049d07b05186c2f9dbd5851dc31bbc94cbeb01fc4a5aa2a484293f14c6319f8e592e81da933ef2e6ee2607e4e6ebeb0b2b6527e57ee77a9532ef5fc4f964296f8bc1b2e38873defe51427dc9a89ee2f13d008ea014fcd2ce13d88d4d9a6169eef401de1347acc1fa8c0172a55948572c559aa1ebca35a207b9e634f480959b7ec224e6876969412f5f78c4471d0f24d30183a62500dca2afb6ed878188427c85c80ebca3a1401b389c010c9a1e35fe910b0608e102e7a90c8ce8fc7d1c134657126a70fa4ca17c93f6d242fa52c6fe26d2545710ee05a5610c3dec60e323d3538f7d28c37f093850a2720d43386ddd4e441bf5920c472a9055c0997e5543500d272c3dd0bc561b0acf597e60f94e9af6e860fe667ee4efabe9e4a1b5dd2484251f7ce40e56d52c076bcbab9d3f6b264a452fa6794a6c86518eb76c11af6e371ee2e8728ca660be80bd1321cf2bdec705fc34ccdacb393467cb2395dd0e9b6724b96ce41a6b5a9174a0d5c3cafaaceee42b59290f9ce1f7b0bb738c0861ec21505d5ea67d3fe731333d2db24ce2f821c3ce21b008799217ef7b3b6a0a49b8f212a8bb3e0aeb7456ea7cea0352b6c777409f6701247f37d1bd0e1b64b649e781244fc9df52790e3f280c007453d032cb99161ff6fec328e8a786c1857a6f83d52a782c0e6faefbb12200204c72ac69d67cfef64a62cd1753ba007ca63961d78abf66974bf3a6fa536c6d3bd1cb0de91ec187c735f116c7956e9d031a2dd47b0f475aebee49acc8cd32eb6891efff2b944de964a8d4a6802d921e8b642dcec83f4418a64d4a7127de409e43b9c0d5fbd8b88ca6170ba170450b80dd043d6c011f540ebcc7400bb6663d983c45d689ce1be4d6040a0636f4bd1eb5676d51a728c3951650ea9a9e8dcf279e6f91cbfc0c06d23fba499bc74772c462d5502ad11f001fe0663d9754ec748c970fed890c3653eeef91a7e57aea41ef96312c0366f34c0821c51595de39d491ff4df05c0ff9d973acf1600643474fde329dcbf1f9bc313f8d30242ed7f9919ff6fca73fb8ad267cfd93f8398bd1a04fdce95e024bb870aa7a6e0c4fa1ea2135bc8ff0f50c847bc04ac2c46d3223b759d0279772d5c3b8c7ab86fe2b271da6262f2f1afdcc17a7703e783a3e477967db52984cfd47a3732016a70f7cfea42710047c3a3bfe33aea65061e77656d6ab96c90772679169dc506830fe93c34f32100e91487186336d23cbf88766e756ec66e8917f8dfe4253f5e9a96b6c925695aa980ba0326e01c0035dd9eb0dc3ebb97e1ac075036ec1143a45a36f527aa3d4796f3942beaa344c2f3a1182e5a54a65dcb5bcd26136ff9865fbaf9b2f95ae4ca4abc6d9e6a3c3deb3663e08729966fe4b8b245059cae27fbe6b8b66071e62dffe0052740829fc1d84a587ddfb224e96860d5ef6b7c804d12ad79b4aee39c8a87e92d777538d688109b1c38f801b2a88ab29e84c2ea5772f79b55c3975ef4d7236e3350f555163196613c8c15f744f08bc5631d2061dc0d1ce3f5e446c59e9178a47de6aaa8837de07d9a7b05748e2300151d6b260aaf4b805bf664d62678433d501b117db008e7dab9df33d5580e549c1febdd6b3c1adf15a49d92fbab912c6e7ae41fa97fcf98568bfadfc073e4a4ce8ca3c3ea9eb995c2d9cfb06ef3f35f2b671861edd6741770402215aa7cb647ccd34e150d6d33a9545ea9d0efc9a7e6cf1cffeba1fc18658d7118bf543cc83b28851378e8b675a92ced3c4bdf8377778fc392550ea729c82a6ee552933bbd9b5673ef19ae8beba3d87968cc01bd892b5c6e0a378689cacc709a9267236c94deb24b9f4fd585b3502dd9dfa043527443945a56e4467eaf285305febb57b4cc1a9524ca3ea256606dacf0f54e79df4a385d8c7374073560250ff477573f86692a19448be04672536549561644327e5276b8ebc2ba993cfeaa18996fe3520f346a4dc75b1ab2c895819eb86c03ea0eee3842063f8bb0de61a7441afbb835a31a2bfd7a4214cc70d48fb92c34fdd184ff887654b7f95216dbc17c7e112d8ca32d37e514a53f9f50214d93e89dea5c741f1eac1e8145cd69fc8fae4659e060adf9d8e579674dda4eac0db324b92a597636a13eeace71d78e875c039f80a2ca558c6831a4ccd819d2dfb67acb1ba2d0602126fd29208c900cb99ce5dcd9a2ec1e0357100e8f572cbe0077692117afa28c6253ebd8522253b33d9a6ce39aebb3edfedf4bc43f9089088529c3f0600a057d7e911c13efd03bac29fe4c1f8b58a7d45ab8536232bf44179b1056da8b4102a886a2fb0c706d68320fc44ba4ca48a67e5540578b046187d41413f09b3f7063ff194b3eed30f0f60aa2a4a70b00f8db75e2822b699fa5d82ee51291d59a1f4bebf8e5928f95670099214e0d9db1338cc2d4adb3f5d5c2c030c2dfa54d90a0e654212c8e3c7e8fdb41ed87b8ac18ce75b9f0c8d1d89be676ea901ac40329909a15e5326e4a5a7bc2480f19b990b35425e59c482ed0ab8cb366412773c6dcfc959755a35bf9d244638f492daf0d58c682c4e6405cc6084cc25f6ca3c606d83e348c4f960c802638ede878eb9b5cdffbd67fdf5c2ce29b2e3fcbef7e2a113f5b26e171a6362d1e56522859b967dda64d3f62ea2860b05147180427e431b5aa29f7236b6c503b38d6c32a8684a915534e4f35d9bba7d1e43c8939722fee3551d80eee03bf8fad2563462929f39a211509922e07f094224dcab324ba257f06c3b809ca9e37842d56703684c5a4dc474c909010dd31d24519396a8366b4feef2ce2c60833a89167fc434036c994e208d339de1b2ad25ae299c1a7eadf95d6baf48ee5ab170b6d0e74a5fe660af40129f041a1edbe6dbb81eec5e39b88674722a12f1f25830dd2e6ecc162c3c9b4ebc6d2d0a1d2a692d80e713b744a05d780c3d99ba4a052f6288f995700ce2fceddd12060b123f2ff167bbd4f4ad647d3939c489ed11982523fcc882cede3e24b613b157266d32e285f3ce2894f077249880a77fc64a6d6591c2548bcf83b8392acc847304d311078021b06cbf775c6c9d977cb48d00fc3374bf728201cb6cc674124976acabb23b9f0291297e189e1241f84492a538cefc1f95c34a2339d2a0ea69030e9c71a3cbac2948a0a9d96af774d46a53654c422a044d5d41e11cff8672345ba93f637f343692f34aa1d40bdb941efd1147ffe79deb67b3d046a8b5bdd347cc818b873ed8ec638e31a97b50679c635a5e6e75f72fc07ed5636bbf568dd364fc35cb1e20648ca140c8ddeccf5241ea6d82189a8b8fb45915f2454be40d9da2c0f00cad335461b147e34d2b15f2b6ea4186418ac43e179c152729ba4a249e024f65db133ebd64ab360d485c22c4bffcbbde6ac112d1673022ba8e52e8adbaa057924b013452e3f0fa02fcb4e0dacb143334d7f21adb843180dee6917399aa5c6eda0f0805c458b6991274a42658be6d5212b8abea0d601c96f6d5a028c3e51f7d60942640b2f7eda89698b7d822dcbc5a0aef4c1a5de647c0d2c5017747496b5b28e3b782e76d79752e89fae5c7889df522a3687b3ac2ad805d25c1d1bb3e39191c8824dfc03a3976d15b2822130e6c122d370139d447d6d4bd4881456defd0538426415558395ca169a4afa28a4a54193ba631b2a459bea99ab9e3da0402ab04e718e934eb046e27f2a08e592f9aa4f5fb7e01f0d4ace64e3099bbf4a8584f1955df2f4bf5be0a8c6dd3167df0f933aed32d89ce8a3889be45d9c1324f79bba4fdbbe9be5343a62c1497c170ddf2c938ad9d9a1fab677ddc5cee6f23f1841089cb8629a1f673a81b83995b953c3be9fdbc9646bfa5af1948d99da5ad42ca64fcec4926f8d1269b90f4f12cc75a583b10a5540e9711b80b58276e7d03e4cee0aea01ca0f143b16b22f470911e0c00b66336d73e72e3aa5ec87708493823d5586e213822d143ce49a41f02b1ac418a3edc1ec45756bad1fae4b8d8480f412c19ef82bfe266780e1493bb4a89bef5f2d66a438b8f93f6cda87f7bffd7b192f6a26ddfb3cc334ebc225d536480e996712e723b4fa657379d9fea223e811822309890b923ec8f1c230f61e5a966bdbeb412b5d6e73747fd4b833b1519b26e95e99e90f7cb0e911f5b58642f9577473e7425870d617a0f8a0239b366222714eef9b5a696cd413dd4e6391232b8cb7f1cf1ad00a9841b47ad8bf506350540cf351bd85690651465120ba004293ebf4604d834ddba9d72b9ba12c14e55dfd3d7bbf849fd11d5efd864400049b35bafff6c0e94d0b5f5026b131cc9c99c56a2f527e4e02d73461e9b6393d5fc7aed4bf652789035327a84e5f777ee046df4fd8a3b35ee990b6a8798deefa36e779be53881bb2a8ac375f1b88582bc9c15afd2d81494566629fdc9e29eabf8bf21f3718d120bbdaf5163cb810b464e3d35b976c18baefb6cc4b8962bfcf27c420ebd67cd9f50aa8ffb3fc1ec3f5abcbddacb018b7cf1b37e4ac51509bbcde9dc69116f1d8d41157db9b57cc3ea039ef553bbdd72fb0db44ad8f9f128a7354bb22afd89852c2a76874e7ede10218ef2563fc15484a4aab71205a699c1f0b8f9f870b3002af510fcf8f40b7298442845bfd95dca8f09d755b02c2fec9e0009eb357f4762fc90deab55b0edb25b8f425ef670766037734e802e20ad9a2e4b9c9f9b3bc8a3f1c92584082494e845ec15f69e4a842a3a8508b6da66eb4b3652049a591d26c013e61a3422dbfddfc78f4edaba4e38c8f7fe7806af6f98769da2350086aa3637b8593018d02ce72b80a1603aa59d3a71200c0c5f7262f7728050a8cb6be769c7eeb1d79238fc419245b7a56b9a7e4837a1befb96243b92ff170fc40e874c61cd15551736817dd77f5ded530c8892571455824b8bbda90419467da806f1cd47156140583bf75627e59d751e721ccec6016ea7855f7f6749a4f4f534cb0bfa48cdbfdb1ad49ca359d1a70f2b9d6421bd06a0aa13eed8e2a043169c61978ffdad029cd08a21cd358918921fd9a7d17fe6b73b9c6db055c5eb99c711a70bef095e134fe19afc52359102a14044e256c3e20474f973e401271a0e417f50a0c4fd3faa1b47a2a6382a51c99e8535fcd64497b35c1536b6f77b3af275e6e4cf34b19293f2ad29a2f539ec8ec3413e10cbcd55094ba9b775f7f390950c455027ddc52832abba9fcde74134383e0932bba33a8d0173d5c90f1af0669d5ef4201b8ccd726a18e162ea36bb9dd274bf22540369612541c937ef8b6599dec030bb99836b7db38b2ad11ab37ff3af5dabd89da6dc48ece925ba46d201e817a15e4f9b5794c4e929d7432240c00bd4405b9738a1cf5c8dd11230217718742d8374b45c10c47537bc4f9d338cb57e40449bef7e3cfc72830fa5f01bdec5fec6edb98d7df0627093979e77b7aedafcdafe1c0ed420557a796780ea6aa3e819817287cf1a23bbd0e08097c2fc8bc5322147230eed939c5f9af4c1b82361a4c5461d9418dc3274523989608426a93d9890a2b2a00c9ee0f4dd617dd2f410055b83c79d1eda9bfb7ed589b9b8e59edd970cd89b0f026f793f67ba6f70e46803bc5680cb097974e4c82801a75e3fb0fa0994659396bc6a51a34ccc501a0af8e7d2743bcd2907ea23e88d8aec78a9d661291a1292e17deab25f662fd0d6182c7b49a6c62184fe4532a366f3dc6802c5ace5d7782bfd1de424f5badd10cddbd731aec53f0af7669a819cd0c0315d89665828efe3ccc35bc6fa85abcfc505f812cf61dc2a9f83bbe1cbc863c2c2b0536a075a718d32698314163967036c38901e094d6f93c62708de85dbd28b2a90b99b3f9dffb9f11846fca90597770854fcf09b753bf16af5fbee816e940753cd48022360fd698fbcad8158b984bec8c228c21927896d81cb1cb0885c3f560f0a56a4facf915bceeb930d3421e6321566a491f5463592c5ff572098a5737e0a96edd63183eb473c76048689d9d58a385a69b5f9d74432a4bf33992b05a112d25d53c27a9706dcd0d2fe79652ac74445d413dd5cb1665596ef62d0823c2930868b92e3f2b73b3d35c3dd00bcba2530b99907cd807fb3d840825dba3fc0edfb0276a59ff6e5467746dd4989fd0b8105079189288430d453e7bf5e59bd2863fae78cdef445356bd913d3977dcbf142d78f5dd51b1037eb4fa4d1bc0c5ae317d3ab2c3dee78aee25f142d8599e5d218fc779410e478dd1ba280faf5c5cd018e40eee070907a3481020327ba66850feff5aba389b433a008e951c530ec7cd4bf14a7f72639e084e7c2c3328004c417b4af275504fcb129a39fc43b2d882e6ab792bc29de603afff872d1e1d8ae58bc2bdef8070a476580b99513419811fd36dad4315d31b34edfc06d68c673178ed6ef7a62a25cbf0ce90c8b603198f7252b745f694a4574456f77bef98153c347c5bf8cb37d8df1e50711b78508ba7b209c3fc86508c835a537c50ea73a735420bb19546200c64839c91797d19dd4825e29ffecb9bcfeeb94c11835bb8d2b5a01781267479551af4ec302184330feaa676f2f6d78305f7520d17dc28572c646ecb0ccb401f98d1f1fe175bc6c6068850e2460efca2afad4cd776b3927c51dff87c45554a4d8e67e805203a6541791fc09473d52794fed8cd231d16f780ee22869024553e2ced72c2b675091ab30b217bbc06c2e10d10f02035f9f56f4d3ee0b98726b5aaa92d89611e34f081a7e208334db734abd7f7c9a8101149ffd7b4503111f575a7cd9f5216e310413c71009fe6a6293c7164cf14d447e1377837bc4d08b3e79930d5fc0d5c075f40af0ac0891256527187e8bf5e2c1d73776235876294fe0b7530727a12222e78965fb01ffe7fa498800be71cb56c50d206e9cd7698fe32991dfe1d6b4f001e960ab00625691053ab9b4b8d5bdfab74495585aaba9436aae170989f33d3d9b5576f3101a7613ccdd37116b919cb6a334e72d52d4c20ff5b6ce1c56a0ac66b69f5325a26cfafa3ecdb13643b9635a3670f333b6963cb061441d1a3f83dfd24bd5c77c8b835daffcf9a091813e5424c2c723c119a6908d8426a5573f913f8dc9cc79d79924d356e436a15b1a5ee234c3128b4e1584793713099a23db2d3efda19af57d896a6f00c5132d83fbd3167a5310946dd1e63a362a32f1309639f60883ae41efad82637d108242dc04b9ce590ca935610fdf4ca031a13a6b64658a911bdf129faf3b673addc629c1f912dce87eba19815b90143ea3247c9aa03e5746ddcdb0dde74329dc9dadad20851e2072126541bcbb17e7d7a93cbe6658eab35422f72da51be49394957a560406d6ef76a70fc435775aadf862ceaadf3dd43016828b7f7986f1797926610eef7c705d6d362f1e774a3b83cb30fef9e1b75a308978a20cad0c622cd25dfcf10d3f6dd3732d498c36e55a7d217516721533845a6f9a01c941c35236e1dd5548cfe07247012d62211c7264f40539d3d51ade2b56fa2aadbbcc75636845e470a729d7bec90910095326f70245c898be357e859cf0a260e842d38564359dbfdce7e6278f0dad0d4a4af833045b06055794c0068be8b691bcf92846f945290c1eb46d57f02e228c4ece98fdcad9a61510032f2ccf196e16a6d88ec7449db8193f4808b78dc28947fd9b1c020ae0735ec889c54a1d34c353337de716829648157d5382d211379d60596ff209095e49c8b36b98ad6fb886e18d68c10967bb1f94444ca2d30b4e41154fdb96d0d6686a6a0d3dc256cc5c22e117f692a4dc964f4602208d369ce8b6861cf9cc7e9a1cfa01b387c75afe1f4309d594e3624424103d6f9ee5694254a1c2253637ec12b131ab27427329e681d772b57606cb1a45612f32f92910f6e742a1fc7f7d85bb62e6b0514d17a784e64db43a2fca8fe1b65f8c84eafff107b9d80198798c6cacba05d5329900906ec420f131dc218522c598e78a60cbc044d09099ae50f64fcfb85416601f27371c43e86ab1bb351c449adba7322de91fa21bbd2d2451bedd249acf43fd4b1f186e0947dc8e04284a45050135cc2b48815f903652d6bff5a12608f293e0ef8238cb5826db106b82e056030777450148741835aa6a96593bd9ef2fe42588f354f1003fbcf23678357f76bc8c64d3652afff29c182fb0e496b1e753e93deec8157192b4b88e7690e0f081db5934dba523136a868774d13eb3cb6e00277575ef5ad66a4332e4bc8c606005baefc722f85493f5f83f4d504819f55b3a27599427a6371717db505414ab567aef749fbd1bb528aba650d5e89bf03892404649a8d408d588a9aa6a40e0c30f1442843f8569dd58fce866a98a64084ce2a68918a9f8c7d53ebde3d5eaeb838261c6a7bd97f93244ec825b91710a51c4179f02b8e2d0554e870ae68e90864f06c43fb8041cb693ff10ed4843281c0c66892d00b3500fc9add814d0b242c5b9bc7f233029f94ed4062b75991ef2c2c08f97fcb3b6e65d31af376db7121d7e5db84c9bc63f4edef9e20a48a1064e166a108b394f76d11e7b2f2219d2f1135f8b65054fd5f54fab3aeb7b135c2da647ac5686f9da8853cbea8f7d8b9285afc56fbba048e1aed81e752bc6b396cd60108ab4a3c5cafdb3045dc67be301171e7572ac0e7c760998219798494558eb9ac8ad3eaec951b5016a0e916974b20750f71c8bb6ac34f996326ef77157f3dd2eef532757b8ac837aa2d78e861c6aae0cbe5c5ba7406e09d9d6ecd7b828fe626801d6bf8c3c89e13b83b19c12816fc52bf0bbf5e5cd131a2f46ebaca22d6e398156a1fbe927e36bd30db1da0c6b7b56e7817fcd66aac69b43aef1a8cecaaedce632808522a063ae05f5f6356688aacc4e831f5164e3d8d5fa6bb0b2fc87751fd2eda40d6548236b7e1770f00bcb843b4d0b87f08728c4b774cc7fec3f200bf12fc69dd1d1f7d302a238068962e43a5b13898e7b330f9e9b88808d6758c9ba6fe015f05244595e9525073764514ba0563a44f10f814168d9644f4c2a6780049374846e0ed08a6dec0112d856a2403ed56ff546599ec961cc971f1af3ff1eb657a2ab7081f0393a30a3f4b449cefb248fec28b686cba71aced79c65e12248de1fe137a19c9a43b4a7457d2c1f240976ef30c5b85a2895b561f933c6e8c25c649762b9d80b3763433f6ae2b04b30adbe0194773881145b8a801e8f571813b193330883333edf72c0a380918945d997b2daa5de8c863fd4e3ba7516a21abac3a3624b450717138a19d84bbe44877130b4c5506f92a95e1f09badde899bcdb601a142863c73488631c881f501d0b027ecc439822b9ee592643248a535255af2d39acaa6ecebd5103cf7b7a8f563f6821fb9a4973ad703c132b5aaa340411b66491de3018d9ee543ad85ecc50da2166935d3117272ca5ce91f8283b9e74cbd98fcfccc763ad377a56f09c10e199777f797b1d74043bf75e5bc0eb39dd1a3afa3a99d627974b773ee03b4e5339abe5faba6756cbafa4fe26fdec9de5d64efb7913b342915d9c08b93f07d7afc34046b40ec206ae60cb8c9838daee61d585338d940094e9d8be1f1a2d5330558c7029033b55a6e5d3ac4d97e372ea3f9c11e1a41725d113b67200aa2e09d17f1cecddc91b8fb7da6213ecf1b9dbf0c29e5e441d174aafa1c0de4ab76e5500c5057af723c5963e1c8454bc7f46e9a84c6156d6aae069485bbf37991665b8a50e720dd0d48c81bc70652fcff295f02ae049ed752a5a570621634deaa158d8711cf757d50398473fedf5112e6a4c251f97ac98e43862bb20976756113f5c94fb9028512bb4381e3085241b1c4151dae97c9422312ffe88cf553d7e0afd255a971df6517ae8411b004dae09f8b1ea7424d24f17ab79429eed207a24d28d883303b41f0efcfba831921f4f548527ba594017b8d14f636dec5a3cafd2c0ccfd6350091c82fba2f5667f84f82aeae51ea56a3a4299e38aaccff2c7d30b1eefa03532a77ff1c4d47e38b522f3e5dae771a3505866109252522ca1326a9fefeff103683bb9f46c69bded302ce810f78fe7845222acd445a6ffdefae6df361269ac5dc3e24d057d7a3c99c18313c1e528f4d522d45211d6c04d283bdc73b0c8fbefb55010ddf587d19f255a8dc1ffd2a74f235058c443d681b0a5b740a965ee80e34a233437edc1fe018be674aa66c316d61470b129912c72f818bd9f3e880dbd911ba6ad819ee4483120a6e1190313731b99dc36d9a88c6118af2ac36b53622fc4a957420d3b82d730dd95b4848f362608aafbb52d371aa9e5351938490052f2eba4710f1a61a6c90685cefed5367df5d576aeefba92e5adf130ac31613110d540560d687d9091782ee4775c5c27343e7dfd19277c1e82e6e6cfe10965bb92b6921a7c4f6eb08f7b8702990860d6cfc24767a40232b5dc69ca0d5152c6e8055450eaccaa999dca74e57408ed0a90dfaab8c3c0b6cea2e80216c6c74359a6aa643c7bbde6e5af1f464473b0cc154dbb80d0b367962b81ff46679f8e2fe410f7043030e4649bf5f27c55794f19a861136dd91861ed3c494c40580a97bf7dde3fbfedc056cdc41e2598e1b9d09ed269a0e3d879707c81e49e6e03f4a2c474f9c40fc159869e4fa05e124ef70cb1e7be309bee6a1652c80102587dc5c17facabca762d065554e9b1297dc3df7679d24187d8ecb5c4ced3885ba47b70269b8975630bdb0b8036c9c5bd5621a193dedb326b160642c267b376776360a966c1069c8b3446659184c06cefeedbe0d0bb054e233872a70865d7dc6a49f134f8fafc9ba02f6f9dafa01071e8f4af8b1773499f7df4bd2c7a77084d6027819749718cc450dad88077d3480e821b06fc1d265cc53ade6b16e3763af6a28be978c911f85c8567dd6d2f6932aba22ec7a2300717962a076239fc1a916e3c175dbc431c16515558e97aa3273ddd9a54e4f287644c91b5900a91dcee36a2fb69d86735669c3538b767e5202b33fc66fa69eae1f455d081072c6bba75545878734dae89226120e2789ad40b30defcc5bd525be15f9229e2baf8d17ebb7574081c21695b5fc41065da8decefb14653fb8bbac788ac40cd8b85050d2a502ef345e268978d5d676d1db734d7f6c00ff683922e4740be6b733ec66f7a7ad9864ded11bc648ccf9e7e04a4f3f329328a303e1272063700dc73804222254ab162a7197164c20591e5631ad747f7bfb7448d061f7c87d5207902bb3588d427498509c4238825dd87570fe376e150c7dd2159229ce818be35d9cd0c819416410bee297a276b7e2036d2799aea57477a5b74b1ad19cdaba14eb705dd920fc41a18ac0dd53cadfb27e1373ecd78d5d395b7e38504f9594bb5542ca2fde8461df7fc504b142b5490ac9261e0c225dddf59e236daa76d1b1adbc74e870d7ed7fd0d9ad521f8239088b82934b4a044fa901e3a8a7746c09d3aff95e9e50ed1bf6c0b7f168c5490c4182a6e46bcc9a7fc03782f6bd6e92a0c9d1b0df7fefbc3c2ba027cc54ac59b9e367323a724c2b2c014c1c9ce4dd9eed3a8540eaeafb973e0ca1f7d4c98c15e959fd27ede99f0ca70c075d001388898cabde720667f2b88f23ca1890d526710b04c86bddd15f1755de3352ac9da07a8556144178d45dd9f78d4ea80ad57994c6b94f252a011ceb9d623a0a0c41dd018262d08af55b57693d4ed495e50fb52a246b9e3ba2d9e197a8ac12bb1a16d9c25c8fe9e395a94df2bfdb7d32efd47652c6fefb87e8a6dadd862d6ed00458b165d209f1f7bea4e42de2056382a2c6851bbd64f603df788ad0aa11c243dd14c33e378e8f8515c0915135bed434107010b342c4ccdb37169e20d70c9b3e359b8e66167846cb43ae0b6874f92102274a93115f55e94d158f9c9f13ba4b37bbc8a84fec27549f1fbe1d3748768f3d6d5cc6243aaf4db694c9d7601e275e3958184134c52fd83dc9a1dbb4161c34cb8e97e7f2b7c4bc4f36b21ec349786cc63a7e8302e8d9eda2b9c846745034b62623b98b946722c8a98409a3ddaa4d7c07b3662030c6ef7b2053341d5c3733864077eb428246852ef617ad8e6ebc2c5536891002c014f08bb45df95b34064558b9dee0fbc456900d5e43744fe7a006e75d45ac285f3abf25312a0e7ea6efce894a6c9605fe0c8388a53e54b5ff35206545ab8934ab0a0ca09ccf63c0f32f1c64e6a4ff9c5764a6daaaab7e2836efa01bb7efdfa6183d83a5e9977af10df994aecdb151d732c97e649f4bc9668d457fdddd11dec444f3ee1c8975b39bdeb5025f8ac5e65ce924a14753f327b512fff25ab0f9615373c9be67116783580616bf62f3d022bd90a8afc6bca480a9b391356c70c6dd34ef6075e337d88cfba1f38959fe3a3a649f516fd8ecca353299449a1a3e73b04a8124c39de7f312d07f3bc3d86415e18ea93426c13f103a8e7d4399d8b1feb855ea7326f2fe003be3fd263e0b5efa848ec6b81cff050851af425644220559f22bfc7ab238253d3b6ecbfa4cec16edae22202ea93397459a38290b5bbaeef328ceeaf2a13eeb5a0bdc41d1cd66c7910d7e28994bbb3bd3a59d5b55b5805bfbf4078db6c600a82e3c6ba8de6ac9d46b6534189ee7ef6e65b478bd3f841ebd16a05fff478c3679c71bdf8aeea284dbcdce6a46311fcb353c9e759ab5c65e7e2aac84c7128a7ebee7f5b483715db4e5a1fdc23131d69408d6f2ddf41965be0172017e6eaecb685458f744c71924a99293e0a5aeafc3b1322ead9d5dcec2c627a034ccbdf1f398e80b01795195b5414a97e04a12dcc85a1eb2eeead045a800c0917a058217130c1de5cb808287d1931300a5352548d4d80f01a0e05eacc1a2c04c506bd15bdb3d9e435e0c0195bbb91ec482533107d6c4ab9184124d55e4f4fb8af3d70a64c25bc7dbe78db55a5ee90200330b88059f5bae2ae0dbc38d1e4c79fa1d1e16855516e1b1f8825906d5c479cb50d90f50b1c0ccfe7e8176fa041dc9f63a0d34a93b78d1daba67bb270e1b8fd1fbc647f8607dd373a9484a77712d2e38ee563c9160f2d2013344202c85fc7f852db9da4d7bde9b8b0d409caa456321a3a1fbee3ef4e7e69f35fa21499c8c3fdfd13293a00121eb898e8889856a965c2603440fa6b788548bdcbf364d239b6fd5e25435ce71b130b45d9b3f9a81855ea861ca41f24a37635cd3afe25c9e7ec026e8b44b06fd745616dd0284170f05b94654a560e99a7236c167ffbbacc401f9163230a6aec74d2dc687104eb5848f963cb7e7c70e9bda1c5f7b95602244ca060a44fa6a4ecbadee6bb37eb239b7eb07541abea3c5cf9dac629c5169b614889e8209f981ec895b4cfbea22f824460ec21e9c48df335f8e0d2f14f1543e6ca4a246e6ca68cd04ace3b890ae16aedf5d739aba44760f0c1b823ec39208a5969b1f6ecc6a527c12096f1ef05349f4cdeb56f18736491812c0f185dd31fdfc5d6d17d8c078318a00016e91f465f88f2c416d0361c6e6f653b4b6574ecff895e1ee78d33e66cfc0a7c81dbc86f724f97268c47f04a18676180faf59bcfa2f79246532560707fc15bbca1a6f37e44a9bdac69a696f0698fce49236b440ec27d36fcf4f53c08e528618cf9dc1b9b6dfa5e0bf7ca0adac2f68508a19fba65ca9c06947b5d019aaee1bb5e5480b68acc29e792fd69bdf8f4c91133fa417b00f1692ff49971489a9baf3f3f4f5b573d64838cbd39b134a571d7ecb3d180d94d2e55c5ca6dd57302fc4772ffc16da72862b0725506cdc2856bb355ea86e9cabfcae88ba8f4507bbfed37698e8c5a45ab7a745aa8c1afa2058e3d49e046656a99f642fcf984b453554b6c4113fc90e9cfdafeb266c547780bc2ad57617491e6f3d12843126496e1840673096adc6346ff706e39a79e4191db75d8510fe9f1b428d6e46cc54b80c61cadd3ff7084d69dae23d50b18157a48f9a30d400beea505e3f52e35e3dc36ec82683e98bb2fc02681ec8951b8fe7df9c74d4c93407cee3c3b32306438776dbf920f336912fb22e29bc2c0ef6e4b8ce7fe311a6233167c02aa05ab5f12c56bc5521fc364551849fc9a7c9e436730a9ef7913b4cf83a9cc558b38cde736c06098a994c4f8ea21115065279e5328a56748933af449f288c7cfe816edf23b692d24f67124c9f53926e3620f2c1ad7eb361787e9a59e3bdb448bd93874ded49c5e1a438d22fe493c5aa4a36e2487fa032c12012d258405079760a10aabd7058fafb344772d98b9499db645e903c5a1eed79e65d6333362d5505e81fa6c6d863c30483a2937412e85c1bf4a81aefb4ff6abed3efe531fc23beaef8f5e0655ee1ab31f582ffa4377f52ef85d30d78bba9e0e53a5ac5523fd68f0638327dee1115a0d3f806009e18f2348bc3db1c4915d3278102989378bb8e4e0743fcded789e81be182bbbae47562d230869d9797baa604cb4958998f4ecad1072d64addb311db2bd7c35a9283f0235c44c62e73fbb98bf12261136c35c3eea9d126bee591f4eaa2e5b0929598a4c5aea59e809016052935a4f20ca27972f8487615e47cdece67d0a7f5fd0cd9a0cfe7f72824f4ecde7869b9ffa3a4f90b5ac06ce502ecc7bba028c7ebe0712da75150acbf0d92978696e82c739bc8508cc2656f71830d18aad378ef9955706ed717ec4cc7d96491fe15b22ab4aa2a3619507f453955c6ed555ed96e14a0a211832e7c7575fee879fcc73833ffd677f86d0d7b7c004815af4b444b500d62db3f9d861535418156ae4cb9cc2e775141817ef8a4a79afafbc9d7901d43c7f3ac7a1dcef369fd6adba19e3095c910bd2dee25cf4d3b44ac5f9fcfd6c654552e1e2b69595d0e320e9cf91e0aa83733c29bffa60b3a51df1078d3d278e494aef9480257538f24ee01648e6120abdb669c0ccce89eb921235adf8f7f37cd68160b2b05301a407c32442345eccc34eb7ac3d3069204c9c74dc90feb31f1677a77f39a9d91af5a5caadbb8702bbb6ab53d81334cd673b579bd244026c3be16b4baf89e48f672531a3849b49b8cf32c76f504c381bb031a38153cfa8c7f5e9f6afb64bc80f81af2d452b926c1a18d9422ad806524dee91c8957bc9a812d32455a7c3891ff3378871b5983e442334a131ae2667d12af3f1149d9afe8e233799ac02448d5699880f5e33edc210ac096bb043a261073d73e078742150db637b4b01ab63c8a9adf490d86dc85b3f0e201d3400c89d19b7ca68f5742fded32eb18396c93c2ce39e768821602cdbb10cd21ee556937372e5d7709040bb90f6db1b70e9a0ad76287c639d651cf957e5d7acc0be624d1620ef3cc915e6c6b10e99c4bed3e23bdbde25882207f81359fad8cd391ccbf5071be5c3e1ae61166f22e1e7b8363402af07025c748744e0afded2968f17cc41637186bdc31a736e2125945599fc3b124284576fb869d6b4fc85697105bc9bf680c2f0870730e983085da2b7f3ac78c461812def5d4769dac52ac8305c4c934340c5a45adfbd9e12897e9f9f6f6b616a564e16c6ecba7499096f3d765273ddae7a36e309971b522900737494e8918fd7c997f1e038d0db09f272ade226f541737a299d9c67560f088244469978f3091587c240f3ef6a1bc49a427e49b88b1cf09404a06baf035113b3f122d29333e36b297b84e500b1b220ab7438128fb764b31d4dc0cf64773c20989b2634fb09a8c56aa59bce90167b13d33e5c40be0aee9a1e8eb4655d562ce325798e2c6676493cbe998f8b1581402b5713a36b0928b9e505f2f11f734c046c59238a17ff47b15d7d7489e308fa7c63444f90d8c3aab2962acffb2e9a62a83ee28b3374b5aff961e4eecf88a2da85c3e64650d3c472abaf7e8d28522214f2da0b9cc63324e6e6f5c154016da4e4fdf330c7b1b313e167df41ce32f0b5cb310e390e7c293c81906fe2b1ba6ff3683a09fc30ade2f0442c33c1d83865a976e41988d46d3f105ceeb5527ed184fc142419ae2f2cfdc656cb7cc65d37a745ac497051ccc93ec3c47ce84964c628e9e95cd2a7593a7f1783fb6484f4916b6239b4f7ccfe612722f7cef60865a8a334dd13e94873f0011ed6538b4ab197bfa8ed0f4f9e55c9ae0ec319866be38f38f544b480ba67232eac3ccd528750b64de8d0c04b070538a4803aa172d1730abbded3d7a9ef266dcd408955bb02f765d8555beb038a227cf6d07598dcc3505e916cac3b0c20cf518c20037e639aa5fa410e36a3c93ae73fd355f2a25262412208448a4441ff856e04d8e76039017fb23897ad4d843370c715f27f09d440cf364c39823928dd5554f6cce6a5130de66856a4ec8793102d84ddbaec0690b991cf2cc99e6b734ba9cb08ae69608204073027b34b741e30e311b63e3549d73874b925ad56ca366dc6491896f813d700fbdd5647244f1ff51b0ecc9f7fbe2451854cb25ab3af38bb73b0cf19483505a135fb726f8575f2525cf49152a92792185543eb9b99d38b96f77810d9e5f468b8a87d60ab4dd6858a285ddb32582022013182a60922bed8b789ed9525e800a39b2bf7632879ce20c542b7140cbc46d92a7833a56465dc43a5bc45295db9802d0a35e391678865f13d4d57800745f275de42f4ad48fc0a271e719f4efaab82b02d95c452316fed6bbb8a42f9ff62b0cefb57ec1ca43edfc8c7b788fbbdd9ff04e6e9edfd236ebf0245e56c426a3402c0b1d2641f46d57598e33071c1d28d238929f20ec46790ce496f4e1e6cdb5e2ef95b0024abc07b959b13cf9f65fe855d3bb7c40cfb4d374a7102997df5b657348b96c7c5c3f594fa840f0a278865799f3f9e98a9fbcf87a3224d835df1297240be0f6f4682df0a1b01bff29a68f03e4d7fe15b559681c6f228419f18ac5be4f0d3b17ea4de6cb075342b4e4b6c3a4add58ea370c8a44c81c1ba1f793086f41171560c092672411e053fa7c41b9f3383d098e965fd62783251cf3e6844e20ff39034953d4333e0f75f9bd31003aafdae7a569b6e94f593cfb66421aa951f9a1aa9a9d05b21abca4dcdb7aeaf77002b1bdb9e978c5f1ef58d05b8e53b1f5403dd2ecff4a8487ad9ecb6fef8e1d1a55e2605cd760ebb65e67a2aba25a3fff4a7dc4ba3b81061493db500d01468217a052b1522844eb3a62ca47eba55f28c58c1f1cad0206d0e39ad5193ec3d39c91559418991b4eb4f616244188ab7787ae13e2499a42a0fb575895a0ed6fdc02428bb2b11e8c40e2db938ecd9ab48ec14fd486ea4c4ae5aa74b31f52505de64d9f7a721b72aabde7f4cffd593fb8c2e5c0827af72e61b45a2895728f22cacf230baf6068e2381aa200f4e8a085f0dfa5ba4ddd3247001e761c7f5818bc385dfac10e3fa5ed34ffcb0c3c67d3814b79b0dac858b8c51d0f4687e2b1e2581af91c53c4c54b1755e7b792da9fd8c92b4020baa794dc757b49feaac6655c03e4ecc6f37e09920f77c39ab4cad41e05dff0ad321f4101ef16e2d78a9e41488198b5e7523d627062fb36ce08f459b21214ea01b738d0f98e9999e7900cfae543a7f002f5b28bb5ff11be2ccd5b22f76a4ecc309be238793a1c3aedd675acd3c62359714c866d199479c288b0a1bac78bda3cbabc0a5c2ac290edacb1b728d1f60ff3490d9bc0769423d6cf93c2c84e07f93f42b734179a213d0e380e329a0455fe075f3c6a2fc68ea2fd0e317033cfffa6dd674be2d874fa2f5f8debc7b048c4b54fa0014f786fdda46fc970ca066f7d91d932c3beffc49f3dc7715498f7ebcf88745684e27699accdbca1831b83d42c92cf8b58a61e0ab36c5fd90218a5ef992b509ed21fa39954afac6fa9c05e4a3bb4e5f5c2fd8afd705c0683387ccb2cb57ae3404cec0779646e92daf31e7b87f669e7be308aa554925e08a42107bdbe7a6be1bd3853cc4783a4feb912595c3f446be32e5d557df0644bb4587a7a90d7f9f08b7b4809ab994bb49a72b79cf6084cb0caeffbe85dca2d86acc76a30ae2b53dbf189799ff87c17988fca8f5c9e7a9619c79d44f1577a666413e18400efac739cdb53addaf97b0a54ef21862d0e64672968778b9feb22f0388d1ea4ec6c8c738b11c0f9e0a1857ab95db8cf5596430063fb6e154675eb67dded387d280f1406586064c2eef78cd0263117b076b94f66e66e85c8cf79978778543cbaa8c9195ee84b1c8c0bb403f187b0c3d6288bca338e7f48a20452c44a47c89fce5a10390bde8491b50f2bb1912a7a6fc249db83aae3cb9e9c74e0163c1df9af32818f16b82e993ded1c9ebdf5d68810a81fafc26f36fb7a24eb6e3cab7224e487513506fdff29920d149a24e5edcb7f86ff7ccc0d5d1f7eaa7d6f4ea7e48d1f720eca43de9d135d14c2670466b800a5c3d8b297a00772499ff6300e4836ed5e48d0eca2279cabcd243f0ef4b3babdba24c098307404fe68722f4b60aba9a7d9c85c416e6c89c0bb69ea8316dedf27085d5152a52c92da66e8c65626794991c0825c6c5c03eaff40e76d5c7245c187d6f4d50b4081c6147ece02957622d54902869bb84f7bb8b33a5cfbeb48f46d5122ed51a41ce736c17677d9e9275b91b9b7faddb618e5360eefa6e51f6ddfc4e8bcba2fd87e783967eec7b1e95fca395e3da890dcf3f357651c1229b98393ae0fdf318b16d387563abf83154cb75196847468e1a68b3740f52da8caf0f88108aa311119f8f53b952b677055622809dc57b5661998d7cef5d4cce846afc73851c4f28da4f06d7772f675ecb19e8e9fe2f769a59618bf3f4c712b7ba766ba44521c399792330061590f493579020394c1c092a35ff24d6e3e5d9f8fe1cc5716058fef2eea9f569b065dfbcaf6d57020c627cf9ea2ae1c23f21fe4e48d5243e15d5b2106dec88e4f8e084ade6cc3fbbc1bd557819da5240a3f860821863206584677aa69162b6ddbe8b0f381c729254d6e8d9bbe9010ee8daaf8b1af765ba644512aa4702c1dc4f1a1a0b98acef3f3021ece734de5807ede0e375816b31345469e38ba730f979fd16c9979ec5eaf77a436279713598396ffd6aab0f843b1b9ecf06f2aba1ab67ea33fc64ba0cb9a1fdd0d5177a806dbea99b6afdc279403611774abca7604110b91a990814980c9f2a06c7c327a86c5e1c2a2069df5eef14894641533e4990310fe5986c1548ecd5bb1605b2197bdbe2ae6de0acae0fff849052a926c87334e5f119520c9325751b4ca6e5f83859feeac291e5021789ecacb63caf2c1e75cc8057d1ffc71a192ef2769b9603c5b46cad31387b92b770e74c81e24b33f7e93d04820f3b8a89787114362c65c852c0ced2d8d1a0c3e8ef12c2c523885622e826e08d033b74ed0d1e3a17b1409db399d702e256f328ac6cbb7fdd07a0a0208e4f17fbaa38046e4bbcda0c3ee82a8665e5c530c61575ad2ebf7feda119845274521b76fc1446205c994ee53580cd5f8c277de005528608c91c450d34e0470839294c6eb4028eb5f47cb84207e2746d904cf6ec1fb43a8ebe3d6a016f10c416ffa9349a6ba99054918c4ad062f7d1096ecb46adc44aa37d77439e75ad99bd79049f49ff93b9f6151f80d43c8de44e75a7cff818903b1a2a9700ded65de3fc612d707c0cded417610bc60953cfc72c7dfee26c73459f4de0603f5a66b406db4725affe18330980ab7587ff033f0132efe50242860d793c7ff3254c6a2f4f02941eddbf99f2aebe7f8eaa2cf6aa97c6164d9039cfcb9bdd30a2286574b18fdb61b62b27c0403538ad9972cfdb8bcb24e42461eabde973960a1fa01fe090d455b381f21717d9e97d80bc884143d4000f65d4ffa9216048e48cc9c127b3a80035a133c7d000cb05dcfc37a6298047bf72256249caa11f8b11aa1296a7a92b7d834455e1ff8130d41b2cf7f587a9dc87755f71b432098276017d66fdc0f0e1f0d9459cbf75d8058eb0d8bd5225189639f0fd198be2f051cfc414f9df8c047f4aed0bf6c0d8bfe87b3f493634de26d423fd5f3c41325a429f8a5632ebada7ed0f4ca0d0ae346c748418ed98bf85780ced111bf2f7a2142e35e57879dbbb7b02f7ce18980854fb462946470909d622631c2b8db2fc4aaa40218ed47324a32ef918870bc50dceefa038f30534437918bffac87bcaec3943cf2fb39f57d59fce7091dde5f58dac331078cf07b94c99216420037c0b7e6a45aa74ce8fc8820b928ca2fc34ca7c876652cd64093b785e1d1730e550f38c4d805ab26e141e28dfc56486fa45828749e338a8f2fec4e79a29baab3561f0cce9ee95b9536aeaafb21a39024f3c0f9dce4a28d3f0bc3d2e20f697cfe439b168116324965795c8cfdf95742474ac0ce8f5e11b115b9840cd275568f8f1fd11768142772602704e7c9a6189cc8dcc4c9fd0fbd909ea66e4a0d60bb7153e2e60062ee3a92f52ef30d466ac2e16caecec6809ac7700048719a087c42d54f2f5357ead47b913540f8358225e513021aaada204e3d23ea06087636bfff2a72194c5e8bd97cb8a701b4d2e083fd14560d7f685dc96c7873fcb51e324596dedc7c7d0ee041b03ecc82ff34b8fd3ce66ccc2ecbcdc31592bbdf35cac15c0c0bd5f449ea346d29028c7d08acc12f23c6ac3a1b7c8c6dc9333359ac3ccb6f1d301cf59f3e183adabec198e0b307ce286adda09f7d48152a50d7f3fe8c91ab8bb26224749d44753d55af6683c141c1edb6d353960a692810d33a5fa800256af707c55a04d8e89ce0c8fab6bc69383284ded0ec5d4ebcf71e9107148910a4fab14046da04de94bc708167a7b011af94cda45790ac738c399e6fb070926dced3908dd3142338eff4366d4f7f835f5247f2b617bb4539d10bec5c8f0e9c83157a111853df886dfd07f427595ee5490550851ac3e0e2d1c67fbc9d210be8bf74402a9178d5f0fe7c85425f812c93318579e8b9fdf5b9bf1e83f20cd0e02d911a18500360707af3dcffb026b1cf626e79b2b06fa6901d4f653df01e75b2e216872dbacf59088bd071623af5c80c0471136c3d350bb91b8d73e8b27eb96ab071dfd7eef56fff736ab157e38e2df7c5c94f17bed243d1dcb4273a4b442ab00fddb3d6b5f481eb9bff6cca569e09bd7c6ad39d8b51d6462190645d432d403b627f99899a4a48378046bdd6a50ce0d1c679ddaf3fdf9bfa305e6166f1640b50ae5117043ad942d49c80c27ebc531722894d748aaef42881319884dd1a951c90880f2c320163f907e40d72957e08d401769b55ecb3d02388e3d10ee4d868bdbe468ed55d29772a6f2c7973d9aae3db4b0da62fec859fb57d31eb6b9c064f2d421a66eb3c0697ebb22fa4013a4fb3a406934e5a7a6325d476bca6e27245407dd74a65e887c669a67db58039502decdde832b21a6141db12f39d1f744f72e7124d65ccaeb4d11c2d6689b912249a21bcdfba2dec57c7d8058589eaaa868fcba4296e950a04e3049992804eb2aced94cf6066281690b61ce30cd3a67b65f098eea3b37c3608dcac57dcd6693feee94a89e0ea73e2004c53bd7df6e727392cbabe78fa33515ffb8104725ac37123f64d50024ea3a557077568bb7321596e3a365b9e82b779d5ae4a13d6eeac305d6415f34de63a70ca0f7d42234939bdbcbd2961bbcf07487e6eda31e84be527b8c535b78bead6e22ba3603b25747917db537c56971285851479a7408373b27f254f7a64df89c7ecfc5b8d9e7f811a28a1e024e318db685fbc5ff26f4fefcaa90f74cdf741ede8417d389847e86d861c63acc9f3d23a7c7c0af88abc1ed49b727e18bc631eaca141892ba1cb3ab831f40e3dac2c414264adea4f1b0615c6516499ce96773445972760d376dac777a78a7c34472111f1ead56d51e97162c627c1d8b6f5934688cb7d4e589343a2bf8e5989fad508499430084c278d8143511dc29da47ecedd91c820559d7f8f56ef511ef6b3155a4aa423e82230bd4825db625a63f7ae2067c7607b183c410b523e4a69eec21b562c3dc964d15966309c56936dce93d62045b12952dca142c6867d2cfd9457902748151f0af2a29b859c359d917d34bc83ab565cf6c5151ec6b2edc24fe95b025e00cd38cf9b254d38d3a7165fcaafd9e9a0b893e2923617c4ed7a88f612dd4c4d909327706c339e77607a1ddce9147f6dbec3cb5708083947ff52882a6667eaf0a68f8c4a6f5d7c5445f86b56050fcf9ac36c3099cce17db6fc934de47299df5d980f691cf9555b517718c7a6295d3ff4e863b6035544bd30d931946564b01b69eec1714599134c7149f8de72e1b30ef368c7035a80ff158001301f4c8eb277ab525e289198aa94ddd209a5d6dbd351399b5438f060b9892412cbdbc8de3dd058a049f196c6eec304fc26a0970b554f33cef859d4f284572454df93569923f8687a59c23788bbb581896c30b5711f05cd8e1568978edf185d952e31f947801e3cc2beef13d1784dd8da17a28355fad7fc1b6671176911e1c37ce0a0c115838bf7a8b7a71e171c08f660bbbc2d796714d2ec7c89592ec63167ebd5e1f9da7bf00c2b88201bbd4a5ba61614a73f7f93d2c1c9e704371909c14c4f9e816a02837910975c2b1c6a3b6d559d55112b8b948bacbe9f797bf2c276323bce9150a64e0101bb5bab2af287ceff5d080681174cc305aea33061141be2a0d48cd0441d090720e576c0e7b448d8a609dc1fd16ee55353946d45b2ff072170993100144b803c1aaecf3b234f0105a0b5337fd589e4546beb481ef36c2faabd6c2bb0284cb1eb60f0a317fedcdb25439b90536cb4f76f7dfa1e64e057bad1ad3882273381b4bc1717335bd232dc7a1007af815128b245e4615214480e1f187a0db13806484bb5f4e8e40d0728abed3895fb3d5eb2b73310eec281f70a2341a3178f8a54b2ef6b14bac59014cc6471662667f56fc6a0cd7b175793d5ea3d2c22e286395d790a580549a382b588f73e689f0a5a9c94eaef77b70c4ec0b81b0391ccc8ff96ffbd24f09a5cd8895ee6a3461bceaef8380957a8b2a2d95c6e304c22687f781a2d821be79130cf434b2a1d3e69e9b6ae9a68ce95d1bc20b6398ae1077b276abdd183aa958deabdcb0244413b73987e54db8ebf922eed2a7bbf04d61d77a7f434f4ee239ac92dffbf7133a3a30d0fa2042d2ce25c0f4ec938423cf8b326cc4dccb1747bd06bd5eb8dc15d9ddc3591264a35006fd9496a7328c89b8b696608a8290d3eaff8468eee11d973611c6b11221a42344cb04fe2d8b464a6f6a85acc99681264e954bbfa4535a4b79777f2068db164d564837aa60de6df49c2f3e7291b8d95aa8654ccff412497ff21604b2257a3de649a0cdb5022c6c910c73f632153ee6ab61b91839cdc04ec9e1f2bb36d9f42979fc7a3bb41b126c0226109bcc149de73f998981d870de0a9ebd2394fa77cfade335e67ddbb5d0af5925f1619be54d07bd50d73da5def31a7405f095e6d5e0638ae724310059742c1a19d2ad3e19009ff87823c6632e96f0cc0ac6f47f3077472fae62228571c78c8fa79b4ee42b783a80ceb8110232cf3bb4e56db4e05fef82d8c0a05dfe5dad4dea5a9967a8203dfd3480fe3d75f034fc2ff0d062ec251c6b2242bcab5000558f4eafe73e5fe858e7e2124f30362258127d41ff3cdfa2d727fedcdcda70d1be160d9d77fe562e74f62b634655f52b0cf532ed8ec1b748afb3ba658566e26afb9ac451111fb9de38704c0d2b7483f911d7a120aeea97ec7a8e9109c030dbe1cbe3b0c4ff6c085e03bcb5e3a712d80bf1a42e1f7e32b1d1447c5982caffeea782fec8c5f42e97cf169b6a04f04aa9e300a352f399fb16b7de35ca1b2613d56ec3463ac60eadcb4ba68a912938501cb36fd4dee452899b45c28132a3795151205b672de46e8204bdffd607859b993168c07a99ec5654665a14e8cb28a0149a01a22980befcec23d9b4070f54475c38679d29f03458ebd7340c86d3e6afac49c883669f221c1ae6008f0630a7f842576d78ff1cced15993a690e0ee81a142d25d4c1baf2c3a55df12c1e9d0ecb9b5c98145bba46f32b760c3e7f22ad60eb4cd1ecd5f8224e6fa126fcf9529bfadcdd6c6128c458d0ba6edf0d7d94d45ae3d896eed3488c18de9e072b07d1e3fcec5847756b8162389de252bd27a244330b799d5806f79d4d674a6c6f533e6db6d736e7308638845fca50d8f904f6793d2abf3380cf0c4f73f6e6da066cbb2dac787580b5569c32a5b68a1d5ed161e228e25e1bec64e4306ea5ed07d556e079b2067851b080f355743b3e81d8ea7091b5c3bfabcc3ee09cd76ef7f6c3dbbc65d86f15ae010c3c4f0cfa526ff3f896b9a07974220553e2503aff778c4f9ef163eda80d797bc44912969276e1645cadfb600afec600be740c603fc4bc46b1c0ad7bc26b655f5a9e0935d0a3c493f46963913943284538080ec8317edf8b2ea8ac513d970eb027dbd75241545528320b2de5c53c72a189809248018ddb0dbb4908cd0d194a3e294831073e4649870ff353ddaa80e43c42ec05311c0c71036d1ec6eb48642ced214a71455717653a1701fb6ecaaf77fc851d7c9b1e6d32382dd9bf4bb9546ae7eadc9ed194a8ae55b337f26e203d194b4de9fec6a058e56dc2b43c1400011c082838b694f2753fe8afce902c82600f4886a9af8064fba388a6193ac5120148cb687315268e88a624e42099bf90699ff9c4538d180d46a07991e27149cae433cde9bb27824ad598626ea53542ea4e808615389666020a1bfe3ab350adb9064c2ab835f924c51e9638db81f5c60a8c3b5737378e7e15a83e283dfe554967ab6b9673bdd333f15bfbdd1fa25fb3a0600d7e617e2474a6c5d226c08db6ea0aac3d9a741569c4d4f0dd013eb6bd176b372f97774740aa17c82f09ce43d4cec76f03325e9788ec473a7997eb1926d53318be8fc9f984fa386430bf1c4c041d833b63eebe8991c7e51b23409eac0c07ee250806fe083d2e469c371993d7e7496cf7c38f6c1f7431e1aeb9489db6b03304ac3cf6befde7f91fb665422f695c5e239f5d14b4db0d939010e1ed586aefd4429c8a04ff96d258f770756ef3a82da4c1906eec58aae456e14f4547eaf39a44a0e01e6d416c009e9b368c76e425020f33852e20b8f10cd93c3d8512ce8f7db3d7556122a066681ad72a4a0f953682af9b92c4c4d8122b30f2ad3c6c9941baebe265001356d6b3797f77f8f6ecfcaf8d13aa467801c52307ffefe4e8244c099b2ea67d8f4fd540fcaa325e11b777473fc56af759485e7a436e92f541850f9bf45351e22cb763bbbbcdbed4ba4485f464f8438ada8ae6c8178278c7cfc98011c6491d08b383975b913e11ae9e44edf2dbc2bc830c584900814291024eb72edefa2e5e20772446d8684e86496f0f12b99d7f5711e6b0fe130483186a3ab319a1ffa4b0cd973344fa7599f34217c667db4c3f4ace72dbc59b0203397570bb8acd102b743d55c9845af729475d548c2922c81956fc797863b26bf964cea27cc9840b41e67269e34a794a8099a1b7027b0d3c8bb3869b34693dfef3d0aa2657f0f394a3af8395fe06abf1bf438445d08a4af9a764575a07ccb448e46b940c5149ca8a01c326a2a04b21a67f4b3ec1fd828e8b0b62f73beaf43a6d2ddcc975c79d321bfe6e2d8a8f74e82e75f99cb20e2a78137cfd30a9eb33f662f520308128c17dbe97f394d74f989cb7f138c1d5c8674cbf20e955d1b3b1e51c75faada1429fb3df63a45a9f4008886c779fe72c55d34eab4637d0ff2e358c2d8e342705d8998209272f4ff14e4f8a98bccfec5fb9d5836c4c1de72f7a42e548a6dd8ca2d5204e8afade76ee877e8447f0d460c9bed234617e4436caceb968b9fbdeb4a0d58fdfbb4c212d8c34b64ed3895354e9c0a5985f5d0152316e89796d4d9485810cc8e19fd8276ac99ba60709d781424f82361610caf5ce7931333d5fdff156a77af1cea36b8fbd192b1b4567dbb8c1b885dc2152decb4f179bbf0113e77b3681df66385892dd8a7cec052e64d51ad89b10f5a9bbcf8fb7f3ce08500148b577f547a2f3b3b7e3cfd2538cbaed70443a45a19a34a9f5d432fb889db95686ad03094a89dfbf5846b696b76c02d9e86608f53acc2f4fe34c8cb36cc4fce129fa83f0b36aacb4e1517938a6a6f659736504631b512e81eb49fb127f18a27c30a409cb7975975c9a8d40570747c1d3cc9d759bc28b3e17511641cbe6bd424f8f1591afc0999435b531e66397eb4c2c643c48a3cac2a7bb1bcfe191190b0ae9170039e1741d02f7d9727a7235f0584639aae399cd98d8af525eefdb4c3ef46dd0127bd67ec3059f632d9a85e817bc84baa2dc5e246998299e5467d2fc4fb693ed85e199ec9b35b9e042a0c443d9846fc205cd3a937d2abf70c51f0c8a186191ed6b2ef3d48d8bbfcfc91325a74920629d2e78009f83b9f329e55882232ac8b32d778aca1b0cfddf80a353c49df3fd6cf0a4f975750dc3e9d4896045c23b8c63b47d89299c87c1ccd224007e35af79594109fb61b9a5d6ce6569e0edb20854e191c7db432986e1ce8d279aff394cccb764607a550bc8f535b31fe5d6c412ef40e430b2c08cee5cfd4d82983b558fdca5a7374220470ca0b14bdd5bdc79afa8eacb8c9d074db0722f76aab03c41aaea17c64f4e0569e431973fb96e1046f3c15779eff3ecb4f4f1449d78eb26a27bc67c82b8bbe0a4ad3c5663b8b38c5fd28cf2bd28de93486e9f3264bb45855a5b3d13a49034f3b6b22b860eb802f598b6c1236f5c733b6cab5ff7c8f794b805a66be6bd79ded0e242289dcafcb7c012a5e1d5650bbdc9415ab839e98ba57478c57120f648ee1ef92d115796c75b6894e5cfb396c6abbb87740f5b245832de8de2d6cecd1d325e8fd5dc6e4ba5457c472b727e34269fa89fb85bf6c15882b95474133e02bcf246db14bb8b0010f7200605ec9758aa7560c3805b7fe54046eaf61f36c80893188c2d2d68b719672f16d7d054db0630c2c06ae21cb629ee2ab463dbdd270284112aedc1cc9258fbedf73ddb40f64aefbd7bf318415cbd11c145f39b7da32afa71de6c743491054b6657e0248eaf2575bfa2c17b5b033819f77bebe34f66da8d19d2621e9748c95da16f694a1008e20283be93ef7f681cc7e1d84b28ca986fc1df4e6eae74c2c1d8b92ff34a0f1d92f2ddb44c8e3d1371c0117380c70ef66eb9b4ec31059995683b5998aa387563eb06a17d8ba03ef158ec1c6fb73516f045e1b2697f83155d4d0ebbe8637e3777f4b8b0af4329f43ebe8fd1a8a00f198357bcbfdf980d4da06bcf41b928c55fabeb525cc4a6df672d43824743e2932334597578010e2bdcb65a1d8f4ab6dd792a2ac52fc9ae4ec1891fa885d58672e38784da8b70af6a5d74385bc73260be3f5da55fc6b549b5e5e31df3faeca4ff8981e912dade6350fa943eae5b7c159a303b9806f7f6fbe0af7028a192d4daab3ea0a4a2ec8868298f20e17f1c7e568011df574008367528be96de3c2f59241867f2b30ad2b338a11b2a697db6fcd3b6680073159cb75d2134a9d9a110bd7ee0bb69427e0f43a78d96e728d2f4b93c4a25ace2d46afd9fa59cf81bd9c84f7bd4ed2cf5f63a2c879643738d382251817492394dae19663747f84256089cfc3df03772bf562ac06de2ded27121103c52b76e018bb3a2113f2bc73f89eaf339c5ca5d354a32ad56fa949b8eabcd58554252b8d577e09c5841881424a706e2cffd5a95ccd5be79184d62664642c20304540655ff5906a268d27be63704ba577c933eb1ac73c917160a75c4440a0245ee6fc3e003a0c88d04ca7e1d6657260d8ebd22de660b0790377c8aa1c912314d1bc304af3ca79de6e7d26aade957c070bde8576440d585fa8a88a06d21d9f21472fed51f28e2f6dcb7dee30a4cb12089e1797845660ef645ce399b5860c0ddacf0c61ba9aff24994ae3b990916acd25837ad959380449d6abc55a159d43a8349f4fa02a6dab512cd426dd5bd997f78cd8d6c47a61178430578044c65986feb01722d9a8ea0e484a663f16424d363ae1570fb9ec2f04e3a8ac47a1acbdfe6359023557804480cab4af306421332409af4910a2b240e07b2ed52b15966a7c55261ff9b63d8eb364bcfcd6f6c210621d5efb9c4078be62a76c065cd0f0dc0a09370f4a433b5c4d67ca254bbaec852f249241ac1ca2135acdddf2c1cd90bc5cfcccaa239fbde30351f64e882ac4b3b49415c6d14a0786e9ccb338ddf8d677096793acb34809aefde986ed7b1b2c627f64c5b9906e07aae1c5842df2aad2796cc9dfd6cdc5f589170ca79252f8ab58965a00777da0f2a8822d8b511dd76043df5e40550d00e317c9a6013d7ba701cb8d990489a22f1ac5a2b017fd32191cfa40974bd7eb9b0b7cc3b68a5f457845c267355bab882826d608752092b76d9431609dbdd926f003f1732ad272dc41d5fd54da042f9fa44c64a55928a83a5427721f8dce15b67acd5c010558fe243edcc8e508b84617c2e7949bb980ab6b53880124f35bab363ebcb8e63e7c539aaed1fb68888892c60cb054dfb1c3a48fd40d377d7056ba2c82c027f6e4af9e6ad026982b3c5bf248bfe8eef0b2bb56b731ab8b14874537802f7913952d0e4cf02a61f8daedefd83d5ae01368ab0468d0d65d73b8277ba14527f90739efd043f7251572687379ae6901fef8e5daf94b37cd0134ddea732db7462888c728822b56b924896337c818fe992654b700c1d317c0878408656ceb212c58afce7e37b0e5b5eaf8fb3b600d6a9bc9cfa175e54446cc82d06bdef91b9751963939c9122bb70d50ce5207110320947c38c1f62a58062151b448aa1aab6be40502fd61086a38790ead746ce7ea92a8b8b3f7de69949290d73a6375c6b923cb39e4853aa5936310b238df16ee6e02f990a4fbfff03f450fe3b14d8249cc7665d38cd9ec08b451c75943e69a9d790049c5cecba5229cc136cc069cf9219c05cfa3f7006d73f4e39a254827072a4e519a7446df4fa25a6652df49525dc3e923aec515d9562631d14c8e806cd0866bdafe55766dad43488ef6188b671dec192d97894639f48a31f985f1dbaa023c08a4da43e6b5d5f78a26c72e743b38f0269fbe6064004852bfa30a23791b317685b99a1bd047c49c44c5fb1f23d579aff4dfe09685b5f6cd23615fd9ee1dff0d7bc5a930687d3b18793a9950e6953e6c0fa1c844dd382f45910af17aaa0c688d2aaf8ea0968cf730cde97ec53ab235fff027c8b2874908d51af92acfc7848983bdc07773d964610c903d437135b41d0641d6cfdf03501020456f8fe8feea51f21bc035a2700e59cc9637421b2432537b0467c704f1473cb6097cb06cfdf123e6552fd8e81d4454ca6e76995c4573ca8ee7d01a10ab0f82dbec3b68064a100143e1d2004e03e13c6980a9a67c4c322084aa4084c2665009a0936b767bebc558654fdd592582ed32bb3a84130982dcdfb157d2fe23828365e2c561a9b277dc7e11a52b5ff5df43cc83f70f10a596cf8247a0972e927a6c9994ddb4d89c344eee07e4362ee494d79c8a41f027140e66ecb54f91e44fa90c79b05d024b361b517999fcdd40a556922ae0cec3da252c5c6144001ea794418ffd6b2c181bb3f0237033b0b991cc07fc9806eb4ed7b6a9d20135427656b2c0ba36fe78a71ec7d4de9f58e676224a8df1969d68c5e5841405e07b237c1983b466458510f6d983ea97aa3f3ad830d563e0d1fcb706bedeb9118a44126221bc6e116de60f4dc95572a42367ef0f371ac921c0bede0a9aa0b24c527c0b7c0819ee463548185a5d0aaa88ad996c7c2dbfe8a1a68a3259d96d10ca842a62097fb296bb8e0a44c1184339f5315d88031a78e0a36dc7d870459af0cbc2dcaf78bad59965e0e838ab02d3062a33f64d95f9e948893501d3ec6449b8be2bac84f9e5e4d8a32e6e8dad54e35fc2b14bb787501856feff198c094eccfa715c94a4f3a66a4626a673826c961119d1fa00942a563d33af005e037a572034b2c7028c5609277fc08a18676803de7f49a767e1fe90d7ff54b1981d1a0a9b7aea3fc2ddb662e08fe28bef4446ae2142525c2a99c2115a5c0442c3878e9222f1340a8bc94d194dd242e016cde4fa4514e88c5ee53e553fbcbd239a227ccd1bfb4aef50da8ade98f0c8de7c8c2c5530f00b87f8e19bfee69c5ec1d509e7da4b4d85fb93dabed0adbb4843f5966f3475f40479a68b3f92a6cd0fa0a491b7644b45756f84e70cb43ed58d1af43793dfc9cc0f2cb11e543e6b0aeb261b27cdb5174ca5f5a850e040eac6241bef1b88a0b4ecac82934628b9de57dd9063761e77a6999ba59d1bfdfc0e293182844d2cd4c1fd256adadffa55dd098042dfe60df18773dd5d64bb1ac3263cd695e54a379d8ea58fcca2cdd00ccf30420e61d372114fdd23205e36cfb22987eea101d27c8370163bd1cfbb538cd2854370b608ec24c184f96b8dfbf29be928d64445aa5880231d8da0b72f6877c2f4e8de03547b82eeac570c696f6667a00c97adc655e8f8e629766f3a3bf643bbf5dc980164abe676a25794e0cedba1392327677413848a8f97ff137d4232d63eae818170044a9756621ff813d1f053a0348f459ac44d716f4194e4855d844715cf60ec1954f7cad17a13a34a6b7269296e315b4b2171a7bbc0500c1bc9e8e78d6a8ef5e861cc9c96d273199da166ef1331b9fc68ea01f8e752d1b1039e6d44a1222cb75cbba9670065749e362fe4c6c5bc0fef64a9f9bd8c3ce0a3f8c4af9ebeef25a2faf1be1ccda8aeebd239a264034670fa94fbe0d954d4358f7f543b5e3a7caa65559b77f54a0a4ea0f066c7519090973a7d48b6ca9452991c8d784b01d09a04bc1366516d1dbffc5243551a35e74c4bfab05ddee0c299c088e394fe1fe0645c1f32495194023aa0bf2ab6a314a06987089d101ff1adfe83b71e0550cca7377b2b445f04c4a08e8f759f0bdffb093acff1768ee52c4b9171c231b8d50f351c3219d99bf3821973fc6798a799d5bd2f032c8ffcf47dfe66cff50620c3c20be49fbcd5b55c0a46a1de8cc42595972e5c84d9a6939db75697fac55e769e4b0bfae164419f02e161c28a1c60011bb661d3da421000bca3a22402953599fbe158b90098f6faf3b306f1155d452eac0409c4a810badc2351e4c5889af2a5405ac19708e8767ec13b9f513ffc8e76ea3e9d0f48a1b5595e9e46e608dd20747ab5ad3f879a636cb0cbf9737100ca01279c7bb3fd93d4651db2899ed8c60d8fc8128a5a196f577e5b5fc1dbdc925fe09695c0feb312bbbf2b092f37a9f1eb1cf5ae7404cb555797a1423e9fcae7ae159c273bb38a98ddba07aea3811d4305f2fe409058b653d2c0aad1a148d78d86571d0787ecc3bb00e91715218734cd81a9605f818613047d33754e0282f5aae44c1951666acf6d97342147d262853fde2604011d13c8a7c71489cde3c61c11344d8755cc5c74d5c2919bf7e985bfd5fb66c22de46ebccd7debd272ddf217b3819a6f50efff17fac81b1e702fdbc4ea913f6aeaece7b184993f215fe281c517ae3022a70006ffb80138d9724fa9b16a1ebcc3da46d9c0337e158e10a0f7e287bf5d6c3e8a19f257c15367800132ff6973ab6fa63a8ddc58d75c3a9ff3ee0a748f5d1de0f50c3475f1180916853aab0b813e9948f39db753dae9538a3ff77c2861e6f80424d6d01cf972517ca14ef0a9991b7610225609e31c72289732864d9d11f5cecc50d0d653f5e155247f7f034dc5c26c376a4e105f2f7a3d4b3425e2ff11e6029647477861cdd9a875f6ea0e086a9e8aeb8cc1dab77acfd4e6af0212755a70b10315c684a540f26a1024fb37356590ea7c8850fd79d424c0781a70206648ba323fcf170c330f6ea83f46a51da9c72ce485be2da1adeb467b2d131d5f66533d11e25716e478ff027e4bbec6f67ee4b6ae4e20eea27f8047b63568b9069989a9f0128bff0ede58664b5f4f90d48405087d2c9d1b52f8e14f09b444c2cdc17e964e170cc32e4e11bbf979457207a90b4d0ed28ff3ba4e8d2898f14129cc24ca0e941194650a6f949628e0ee9de6f40851af63ee660ea9c2b36f21dbb82bd65c6163b7d46dc8e53f25e39649bf8703270b2c8222c9cba8f072141cc5ff8e08b17381361c26633e8f58a27894a840d941329c3d878d93b27019387abe415df001fb8fe7e0328e28db86d46634e01d1f6c2502e666d484dd13e55c706dec3050b65cef580f2726077fe56aee19c2041e95abd81bd4915a76c5de98a1acf8361c1050fb78244f09da8ba945bc696833ff3cc5fe22f3410d7b51f9291ccd5322e6a9d8a83ac77df4229e9bcc2ea39c8c4176e3c0081dee88ca4eed8b79e8a6d01e89e6b78a2d2dfaa92ed786fdcfc785cbf75bcba90e25f14afd2565452c486fdab15b77a574dcd8f7c18ccd00bc036d85d08990987b3254cf88856ebc0deb7487884182ac42fe948b111845b428108a04630fd643a35fbbd328b64ea4d644506fe88ab8e14e69daf019a2a3193217f0cbf8b8778c518bed719b3e35a0c4c882db27a9d9575df7b73225b2e93f0be9e165402fba73cb7ace2334a5e6caf548c6b0770cb3dcf2adb5967ebb5c4f8e6bbe32af8ef048f4627af2361a1ae3906469b3e1edeaac520d77e0f3ae26eb050fb616c5549214ef693b0d83b6060a6bb086a145194ee3c72f2673c6974b5812c7fbc09244ba120ad11c7754185e506562e08b1a53a83b09a4669a909cd14e55ccc4187dbaed4c2574e4b155beb92f060f1311ea8a0f27813e2202553bc5db0d22fc0871ae418c5c943ceb97b6884306a6ee4393868dc4e13af799a191ca450587db86312b23cd375bda368a0bed0ccd3f76ed4dd67a60502f59b57040cc6e6e1d342cf0dc3c913530a1f448e698e02129e0fea687a86049ae84db5d5b6f50bb5315f30fffab9f34cc979a77512095615e669d8f293290fbe9a2a1e8c916a63483d9fa6a4a58da4461e4bae544715625e5812af2bf759f8a0b30a9ca59b8054ca0572bb38ef8ee4b6faad70893b2b9c62646a2aa697ebc45d74fe664560ea0cf662a1a36ae375c2ee1dfaed9565e9f95c9ffc7198188c3d1508c5f4fb5f873c46b7e47b865052d9817156ffda5dc7630fc6dbe97cceeb45944e1c95d39ee92391e5eec33da4658e7a9bc0339e79b3ccc6b5562a6840437b7d09181a104e879299a734429ca35944f4fe9240990dbc9fe2cbf0fff0590cd5e26b8b5951793ce1815416e2e0fcec6e00d9330344bb2359efc1c9c6014a9f54c1db21d2280277fc1b3435b601abb5e6324b223eccb956627faa7c0365988e8b1c87b32ea706aee1c578133b63c56d4ecdee29ebadb22a2ec291aef679e8d9fbb00782cbbba3ff53f7fc05cbc6df32312074c50bad60672e0482cd07657fe16737ab566081ef10a3bb4ac1920c48c563a6887817d3236391d5964b5a5515d645873cf1d4319f05e74de321f826e98f0ad94e833e6b790c37ed33ce8dc9fbf9dca35c6a816410d4e824d38971f012a267d47a322ed47d9657f697130124868a61f2f5da5b8816dbce661934ca6ffec08d4ac7351f4f2293084f773250a0fb267ec990d839b7ea2cc7610410dd4535fbf7386b059c2417bd8b9b509b6c601c6d00dbd7c34cf2c47edaf3b29cff3b2f26981e373d5498cb0110f0f7492b1354f7c86500a1f053d1230267c609a8914f98a37fd58f471fe907231da83b52f5f3c663a2c8951276793e0299c5299750d37fbb027d38c55c32f6758311c28bf40d6a3b26a3b8f249a8a41393d62553cc5dff3eeaae24a4cd040cef85a5db0bd67132428ad5291c0f2a6eaefd53994aee2ae4b9bb8301bf53fe9a707d29475aa0b76f008085b40782be3b5a83072b2dd129bd42c59d5a3b6a10459b100f2b3779a17ac0f9216f4ed23153ac7a6dcd3568502fdf890a392df35cd05b893b6988b5f12a8dba607257ef65643320ff0e8b2d23877c18778ee7a5fd94bca6ddbf780ec3d681f570f98cf49e204c31c1990204b71d454e91a6bddcd24ec888384dc36a1d0f316527d213a8e99be46772a9ee08b134054e92acace0a0f8b630427c19cfb6a52f0ed794c8e4d6f9c1203f25ff1482664b2940f3eb039dd8ca843c171929aa324c6d7fb72e7f92f626d60e4928ebad46ac2c1a0fdb53c18f38d787607a22c9af9043b0182df71c435ea87b5ac6e018c9f7a9b272fa5545e1697005b3af8a62eeb74c81194b39114d21237dbae15ea16d261b733e3a89da085d45e974dbab269a1915c837604b178fddbcd252b1a7c05e7984c2e3b5950626bd2b9a68360c13b95c26a1417005c220df5f70908887bed1efe1b2b31d18a97b6aa4f2a3696d1a3f2592619b8b5f671baee38927f15a5725df879d401d3b491d5b6209a96b0b6e67bc14f14536b350056d64dba3204e4f26b4eca8582fc8fc0ebecc3a9c207ce7fd09611fb2c831b4da9674bfab1203b9fbfffd37d05d3952beb76caa4b85b870fccf67bdc6e6fc03035dfd08880172cfdba78e148c25bfd2ee74daf50558409863bb5fcc15418d0ec418222215556d84c8be954b5e71fe81bb1a71f54a0c6e5095a37ba9c3f3b016bedb930d62ba29cd1f03caac781561cb0fde73cc089556e1e95528323f466ae7cf9f59fbf099610b1745b2f506ec4763d0d6c481222d51e67554159c8ba152b1b76a3ca1f37780d22a345a64cbef0e6caec0a58754cb68a559449b647461daa33198247428f17bab0941a972ff7b9d3dd47ed78b965746b34e5e19dd2eee01b33852b9d4d94cda7fa8882c958d8bef11593d02673dc39a31dfe4b92dc44a8dc1f9c55f52f7255e9e0caa07147360913e212a01ca391ca5a93c883f6abc3a99228f1d14a7a679d2c4d30dd854fb2e01bf97b5949c4a881a5ee74c4a8fe856b2ed332982509b7c5d2fa945b57540090ff467103be411f4167ac32f1f8c9704acf8b27a6981dcb12d55910c3369db097705f9e7d1668a09d33dbf07c0736523a348e4e745a3e34e5931282ed361720c1969a4cc12bfe35e98d0e8308dc795633520481a63e939836c5093e00efad3411d3887db32ba0ad5ed46a00d0362dae9d73ebd804dd2c1b1db40f2be45ec79bd104383dc8d17bff150b50bc8f0f85b068a22e6a0f5a1addf28f5adbc2f0e6cd9f8ca873c1574f3015045a812092eeccc1a408e7d38036fcdb83e8a70c85babdcdf8b000b2a00e6e95067dacd031b6eee252f532d206b15b7f8e1d1375374ca6625047d58beee2ba93eb7cc8980d8160f0de9a311db394f2943dbe655b939e99880f0a46b818d388442aaed6b565b622dab106b771b6f206b8995c317ee5abe78267e509728d9b16c65350a33236e2d484974aab625100ffea5a9e394808b22770bc5c82d7ccf77a76ceeccb477358e3c40b8a0fa499c6062714be5ec0b69a2977049654968ebc918a5476e614bcae1a3ff04c8328247c2d1fef93b25a2d32e2be0d708b403406349b76b35ba84b4ba8dce2df67fd156a1c2840626c7d695a2477950ac02af5857cb683d03f98b74a3108eeedad58f3a340b45f519747f30e85d58ebe4079fd9c846abed8fe53e09527d913cf1e9160913d6378adf2c360a516878f43e0d0bd64c6bd98365dfca367405eede4deba4f09cbd9c0c6e71846613800f6442830cb92041b4b20d1efa5ca1b8bcc75bc2ca2af78c70c68ec5b391a7c7774a5eed154077e594df2ea36eadf0d08e02bbf523d939fb3d3592661322d4c51e41892a1c855b82761d57bafd0fb707de6122ba10e577fbd1f244acb136a1e8a4e124cea83159ddb8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Dydは、パスワードを入力するように求められます</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">暴力场</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
    <category term="暴力" scheme="https://dyd-true.github.io/tags/%E6%9A%B4%E5%8A%9B/"/>
    
  </entry>
  
  <entry>
    <title>ABC261</title>
    <link href="https://dyd-true.github.io/2022/07/25/ABC261/"/>
    <id>https://dyd-true.github.io/2022/07/25/ABC261/</id>
    <published>2022-07-25T07:52:00.000Z</published>
    <updated>2022-08-01T07:28:41.816Z</updated>
    
    <content type="html"><![CDATA[<p> 手速……</p><span id="more"></span><p><a href="https://atcoder.jp/contests/abc261">link</a></p><h2 id="result"><a href="#result" class="headerlink" title="result"></a>result</h2><p>感觉自己每场都在掉分的极限徘徊，手速仍需提高</p><p><img src="https://s2.loli.net/2022/07/25/gqS9XcChYb37iUB.png" alt="res"></p><h2 id="before"><a href="#before" class="headerlink" title="before"></a>before</h2><p>随便打了几道 ABC 的题，找找手速，出了一次空间没开够的锅</p><h2 id="during"><a href="#during" class="headerlink" title="during"></a>during</h2><p> A 题第一眼还以为要打线段树，发现只有两个区间不仅随便区间并一下，注意求的是区间线段数而不是点数，要减一； B 就是个模拟，照着它说的判即可； C 望过去就是 <code>std::string</code> + <code>std::map</code> （由于本人是 <code>char</code> 选手对 <code>std::string</code> 不熟悉还怕打挂），一个点是 $(X)$ 里面 $X$ 是出现次数而不是上一次出现的 $pos$ ； D 一眼 dp ， $5000$ 显然要你 $n^2$ ，记 $d[i, j]$ 为“第 $i$ 次计数器显示 $j$ 的最大分数”，随便转移即可，注意开 <code>long long</code> </p><p>到此感觉自己手速中等（与以前的自己比有进步），估计已经被快的人甩了不少了，所以赶紧开 E </p><p>一看 E ，第一反应是处理前缀操作，把 $1 \sim i$ 的操作都压缩到一个东西里面，但发现不好搞，因为异或，与，或会互相影响，然后（<del>指换了两次思路</del>）发现每一位是可以处理的，即处理 $b[i][j][0/1]$ 表示“前 $i$ 操作后第 $j$ 位在原来是 $0/1$ 的情况下变成了什么”，然后就简单了，注意初始化， $b[0][j][1] = 1$ </p><p>贴个代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> n, c, op[N], a[N], b[N][<span class="number">50</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, op + i, a + i);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">30</span>; ++j) b[<span class="number">0</span>][j][<span class="number">0</span>] = <span class="number">0</span>, b[<span class="number">0</span>][j][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">30</span>; ++j)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span>; ++k)</span><br><span class="line">                <span class="keyword">if</span> (op[i] == <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((a[i] &gt;&gt; j) &amp; <span class="number">1</span>) b[i][j][k] = b[i - <span class="number">1</span>][j][k];</span><br><span class="line">                    <span class="keyword">else</span> b[i][j][k] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (op[i] == <span class="number">2</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((a[i] &gt;&gt; j) &amp; <span class="number">1</span>) b[i][j][k] = <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">else</span> b[i][j][k] = b[i - <span class="number">1</span>][j][k];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((a[i] &gt;&gt; j) &amp; <span class="number">1</span>) b[i][j][k] = b[i - <span class="number">1</span>][j][k] ^ <span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">else</span> b[i][j][k] = b[i - <span class="number">1</span>][j][k];</span><br><span class="line">                &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">30</span>; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> bit = b[i][j][(c &gt;&gt; j) &amp; <span class="number">1</span>];</span><br><span class="line">            t |= bit &lt;&lt; j;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, t);</span><br><span class="line">        c = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时感觉 E 卡的有点久，还有近 $1h$ 的样子，不敢看榜，觉得自己的排名肯定特别难看，决定先看 F， G， EX </p><p> F 读了一下感觉很麻烦，可能要推些性质 + 打个数据结构； G 是个字符串，看着长度只有 $50$ 估计是 dp 或者建图或者暴力之类的乱搞（总不可能是网络流把），主要是一个字符可以替换成多个字符不好搞； EX 刚读前两句“ We have a directed graph with ……”感觉图上问题没准可做，结果“ Takahashi and Aoki will play a game where they alternate turns moving the piece as follows ”，淦，博弈论吗？不可做（其实也可能不是，但我实在不想做博弈论），换题！</p><p>于是开始看 G ，约摸浪费了有 $5 \sim 10 min$ 没想到啥好做法，果断改看 F ，手玩一下样例猜了个结论：一个点对答案的贡献就是它右边数字比他小且颜色和他不同的点的个数</p><p>这个结论很好想：这个点一定会换到比它小的点右边，但题目给的有效样例其实只有一个，所以有点不稳，但还是这么做了</p><p>考虑“颜色和它不同”不好搞，如果去掉就是个二维偏序可以 BIT 乱搞，所以我们先不管“颜色和它不同”这个条件，然后再减多算的，可以排个序让颜色相同的在一起，那么就又是一个二维偏序了</p><p>然后交上去 WA ，一看 atcoder 的编译信息，艹，我用 <code>%d</code> 输出的 <code>long long</code> 然后 vscode 把这个 warning 给吃了！改了就过了</p><p>贴个代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> c[N], n;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line">std::array&lt;<span class="keyword">int</span>, 3&gt; a[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> d)</span></span>&#123; <span class="keyword">for</span> (; x &lt; N; x += x &amp; -x) c[x] += d; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ask</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; x; x ^= x &amp; -x) res += c[x];</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][<span class="number">1</span>]), a[i][<span class="number">0</span>] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n; i; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += <span class="built_in">ask</span>(a[i][<span class="number">2</span>] - <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">add</span>(a[i][<span class="number">2</span>], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    std::<span class="built_in">sort</span>(a + <span class="number">1</span>, a + <span class="number">1</span> + n, [&amp;](<span class="keyword">auto</span> x, <span class="keyword">auto</span> y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x[<span class="number">1</span>] != y[<span class="number">1</span>]) <span class="keyword">return</span> x[<span class="number">1</span>] &lt; y[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> x[<span class="number">0</span>] &lt; y[<span class="number">0</span>];</span><br><span class="line">    &#125;);</span><br><span class="line">    std::<span class="built_in">memset</span>(c, <span class="number">0</span>, <span class="keyword">sizeof</span> c);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n, j = n; i; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == n || a[i][<span class="number">1</span>] != a[i + <span class="number">1</span>][<span class="number">1</span>])</span><br><span class="line">            <span class="keyword">while</span> (j != i) <span class="built_in">add</span>(a[j][<span class="number">2</span>], <span class="number">-1</span>), --j;</span><br><span class="line">        ans -= <span class="built_in">ask</span>(a[i][<span class="number">2</span>] - <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(a[i][<span class="number">2</span>], <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后还近 $20 min$ 直接开摆</p><h2 id="after"><a href="#after" class="headerlink" title="after"></a>after</h2><h3 id="G"><a href="#G" class="headerlink" title="G"></a>G</h3><p>数据不大，考虑大力乱搞高维 dp ，发现 $S$ 只会变长，设 $d[l, r, c]$ 是“ $c$ 匹配上 $T[l, r]$ 的最小代价”，转移没法直接转移，但我们已经把问题化简为一个字符的变化了</p><p>设 $f[l, r, i, j]$ 是“让 $A_i$ 的前 $j$ 个字符匹配上 $T[l, r]$ 的最小代价”，那么：<br>$$<br>\begin{aligned}<br>&amp; f[l, r, i, j] = \min_{k = l}^{r - 1}(f[l, k, i, j - 1] + d[k + 1, r, A_{i, j}]) \\<br>&amp; d[l, r, c] = \min_{c == c_i}(f[l, r, i, \mid A_i \mid] + 1)<br>\end{aligned}<br>$$<br>求答案就是把 $s$ 也当作 $A_i$ 一样做（设为 $g$ ）</p><p>打了一下，发现问题是转移的顺序，看似好想可以先转移 $f$ 再转移 $d$ ，但如果 $f[l, r, i, 1]$ 又要用 $d$ ，可把 $d$ 放前面更是 sb ，瞟题解（生肉读来痛苦至极），我们把 $\mid A_i \mid = 1$ 单独拆出来做，那么我们分成两部分：</p><p>在枚举到 $l, r$ 的时候，我们先求出 $f[l, r, i, j](j &gt; 1)$ 然后考虑 $d[l, r, c]$ 和 $f[l, r, i, 1]$ ，我们再次考虑上面的 dp 方程，把它写成：<br>$$<br>d[l, r, c] = \min(M[l, r, c], d[l, r, d_{c, 1}] + 1, d[l, r, d_{c, 2}] + 1, …)<br>$$<br>上式中：<br>$$<br>M[i, j, c] = \min_{c == c_i \wedge \mid A_i \mid &gt; 1}(f[l, r, i, \mid A_i \mid] + 1)<br>$$<br>$d_{c}$ 是所有 $c_i == c \wedge \mid A_i \mid == 1$ 的 $A_i$ 的集合</p><p>发现这个转移可以最短路解决：</p><p>从虚拟节点 $V$ 向每个 $c$ 连一条权为 $M[l, r, c]$ 的边；然后从所有 $d_{c, i}$ 向 $c$ 连一条权为 $1$ 的边，然后 $d[l, r, c]$ 就是所有点到 $V$ 距离的最小值，着可以 dij</p><p>找到 $d[l, r, c]$ 以后自然也找到了 $f[l, r, i, 1]$ </p><p>复杂度 $O(\mid T \mid^3 K \max(\mid A_i\mid) + (K + 26) \log 26)$ ，反正可过，空间上 $f$ 可以滚动</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eb emplace_back</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">50</span> + <span class="number">5</span>, inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">char</span> s[N], t[N], c[N][<span class="number">5</span>], a[N][N];</span><br><span class="line"><span class="keyword">int</span> n, ls, lt, la[N];</span><br><span class="line">std::vector&lt;<span class="keyword">int</span>&gt; e[<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> d[N][N][<span class="number">26</span>], f[N][N][N], g[N][N];</span><br><span class="line">std::priority_queue&lt;std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmn</span><span class="params">(<span class="keyword">int</span> &amp;x, <span class="keyword">int</span> y)</span></span>&#123; <span class="keyword">return</span> x &gt; y ? x = y, <span class="literal">true</span> : <span class="literal">false</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %d&quot;</span>, s + <span class="number">1</span>, t + <span class="number">1</span>, &amp;n), ls = <span class="built_in">strlen</span>(s + <span class="number">1</span>), lt = <span class="built_in">strlen</span>(t + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s %s&quot;</span>, c[i] + <span class="number">1</span>, a[i] + <span class="number">1</span>), la[i] = <span class="built_in">strlen</span>(a[i] + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (la[i] == <span class="number">1</span>) e[a[i][<span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>].<span class="built_in">eb</span>(c[i][<span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= lt; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt;= lt; ++j)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">26</span>; ++k) d[i][j][k] = inf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = lt; l; --l)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> r = l; r &lt;= lt; ++r)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= la[i]; ++j) f[r][i][j] = inf;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> r = l; r &lt;= lt; ++r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) d[l][r][t[l] - <span class="string">&#x27;a&#x27;</span>] = <span class="number">0</span>, q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, t[l] - <span class="string">&#x27;a&#x27;</span>&#125;);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt;= la[i]; ++j)</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> k = l; k &lt; r; ++k) <span class="keyword">if</span> ((f[k][i][j - <span class="number">1</span>] &lt; inf) &amp;&amp; (d[k + <span class="number">1</span>][r][a[i][j] - <span class="string">&#x27;a&#x27;</span>] &lt; inf)) <span class="built_in">cmn</span>(f[r][i][j], f[k][i][j - <span class="number">1</span>] + d[k + <span class="number">1</span>][r][a[i][j] - <span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">cmn</span>(d[l][r][c[i][<span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>], f[r][i][la[i]] + <span class="number">1</span>)) q.<span class="built_in">push</span>(&#123;-d[l][r][c[i][<span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>], c[i][<span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">auto</span> p = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">if</span> (p.fi == -d[l][r][p.se])</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> y : e[p.se]) <span class="keyword">if</span> (<span class="built_in">cmn</span>(d[l][r][y], d[l][r][p.se] + <span class="number">1</span>)) q.<span class="built_in">push</span>(&#123;-d[l][r][y], y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) f[r][i][<span class="number">1</span>] = d[l][r][a[i][<span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> l = lt; l; --l)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> r = l; r &lt;= lt; ++r)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= ls; ++i) g[r][i] = inf;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> r = l; r &lt;= lt; ++r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (l != r) </span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= ls; ++i)</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> k = l; k &lt; r; ++k) <span class="keyword">if</span> ((g[k][i - <span class="number">1</span>] &lt; inf) &amp;&amp; (d[k + <span class="number">1</span>][r][s[i] - <span class="string">&#x27;a&#x27;</span>] &lt; inf)) <span class="built_in">cmn</span>(g[r][i], g[k][i - <span class="number">1</span>] + d[k + <span class="number">1</span>][r][s[i] - <span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line">            g[r][<span class="number">1</span>] = d[l][r][s[<span class="number">1</span>] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (g[lt][ls] == inf) <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, g[lt][ls]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>感觉 G 比 Ex 还难</p><h3 id="Ex"><a href="#Ex" class="headerlink" title="Ex"></a>Ex</h3><p>以为是博弈论（虽然 dp 也差不多了），套路设 $d[i， 0/1]$ 表示”到第 $i$ 个点，要最小/最大化，此时的答案“，关键问题是有环没法转移，但我们先把转移方程写出来：<br>$$<br>\begin{aligned}<br>d[u, 1] = \max(d[v, 0] + w) \\<br>d[u, 0] = \min(d[v, 1] + w)<br>\end{aligned}<br>$$<br>其中 $w$ 是边权，考虑到有环，我们可以不用递归，从结束状态向前推</p><p>初始化没有出边的点 $d[x, 1] = 0$ ，其它都赋值为 $-1$ ，转移考虑拿一个堆，每次取最小的出来转移，即取出 $(t, x, k)$ 然后令 $d[x, k] = t$ （取出来的一定是最小的）：</p><ul><li><p>若是 $d[x, 0]$ ，去跟新所有 $d[y, 1]$ 满足有边 $y \to x$ ，然后删除 $x$ ，如果出现出度为 $0$ 的点，加入堆中</p></li><li><p>若是 $d[x, 1]$ ，如果 $d[y, 0] == -1$ ，表示它还没跟新过，把 $d[x, 1] + w$ 加入堆</p></li></ul><p>最后答案就在 $d[st, 0]$ ，如果 $d[st, 0] == -1$ ，说明有走不出的环，时间 $O(m \log n)$ </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, h[N], idx, du[N];</span><br><span class="line">LL d[N][<span class="number">2</span>];</span><br><span class="line">std::priority_queue&lt;std::pair&lt;LL, <span class="keyword">int</span>&gt;&gt; q;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span> <span class="keyword">int</span> ver, w, ne; &#125; e[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span>&#123; e[idx] = &#123;y, z, h[x]&#125;, h[x] = idx++; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    std::<span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h), idx = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;n, &amp;m, &amp;st);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, u, v, w; i &lt;= m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        <span class="built_in">add</span>(v, u, w), ++du[u];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        <span class="keyword">if</span> (du[i]) d[i][<span class="number">0</span>] = d[i][<span class="number">1</span>] = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            d[i][<span class="number">1</span>] = <span class="number">0</span>, d[i][<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, i&#125;), q.<span class="built_in">push</span>(&#123;<span class="number">0</span>, -i&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">top</span>(); q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">bool</span> k = t.se &gt; <span class="number">0</span>;</span><br><span class="line">        t.fi = -t.fi;</span><br><span class="line">        <span class="keyword">if</span> (!k)</span><br><span class="line">        &#123;</span><br><span class="line">            t.se = -t.se;</span><br><span class="line">            <span class="keyword">if</span> (d[t.se][<span class="number">0</span>] != <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        d[t.se][k] = t.fi;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = h[t.se], y; ~i; i = e[i].ne)</span><br><span class="line">        &#123;</span><br><span class="line">            y = e[i].ver;</span><br><span class="line">            <span class="keyword">if</span> (!k)</span><br><span class="line">            &#123;</span><br><span class="line">                --du[y];</span><br><span class="line">                d[y][<span class="number">1</span>] = std::<span class="built_in">max</span>(d[y][<span class="number">1</span>], t.fi + e[i].w);</span><br><span class="line">                <span class="keyword">if</span> (!du[y]) q.<span class="built_in">push</span>(&#123;-d[y][<span class="number">1</span>], y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (d[y][<span class="number">0</span>] != <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(&#123;-(t.fi + e[i].w), -y&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (d[st][<span class="number">0</span>] == <span class="number">-1</span>) <span class="built_in">puts</span>(<span class="string">&quot;INFINITY&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, d[st][<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 手速……&lt;/p&gt;</summary>
    
    
    
    <category term="test" scheme="https://dyd-true.github.io/categories/test/"/>
    
    
    <category term="test" scheme="https://dyd-true.github.io/tags/test/"/>
    
    <category term="模拟" scheme="https://dyd-true.github.io/tags/%E6%A8%A1%E6%8B%9F/"/>
    
    <category term="STL" scheme="https://dyd-true.github.io/tags/STL/"/>
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="BIT" scheme="https://dyd-true.github.io/tags/BIT/"/>
    
  </entry>
  
  <entry>
    <title>luoguP5824 十二重计数法</title>
    <link href="https://dyd-true.github.io/2022/07/24/luoguP5824-%E5%8D%81%E4%BA%8C%E9%87%8D%E8%AE%A1%E6%95%B0%E6%B3%95/"/>
    <id>https://dyd-true.github.io/2022/07/24/luoguP5824-%E5%8D%81%E4%BA%8C%E9%87%8D%E8%AE%A1%E6%95%B0%E6%B3%95/</id>
    <published>2022-07-24T02:32:22.000Z</published>
    <updated>2022-07-25T07:42:50.992Z</updated>
    
    <content type="html"><![CDATA[<p> 组合数学大杂烩</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P5824">十二重计数法</a></p><p>尝试提高自己没救的数学水平</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>分讨</p><h3 id="I"><a href="#I" class="headerlink" title="I"></a>I</h3><p>就是每个球有 $m$ 种选择，所以 $m^n$ </p><h3 id="II"><a href="#II" class="headerlink" title="II"></a>II</h3><p>考虑选 $n$ 个盒子来装，由于球和盒子带标号，要乘一个 $n!$ （没装球的盒子显然不排列），所以 $\binom{m}{n}n!$ </p><h3 id="III"><a href="#III" class="headerlink" title="III"></a>III</h3><p>想不出组合意义了，搞 EGF 太麻烦，考虑容斥，枚举多少个盒子一定是空的，那么就是 $\sum_{i = 0}^{m} (-1)^{i} \binom{m}{i} (m - i)^n$ （我容斥太拉了想半天）</p><h3 id="IV"><a href="#IV" class="headerlink" title="IV"></a>IV</h3><p>想了半天想不出，瞟一眼题解：第二类斯特林数 · 行（<del>粗口</del>），斯特林数完全超纲好吧，贺一个斯特林数，答案是 $\sum_{i = 0}^m {n \brace i}$ </p><h3 id="V"><a href="#V" class="headerlink" title="V"></a>V</h3><p>就是把球放进去，答案是 $[n \le m]$ </p><h3 id="VI"><a href="#VI" class="headerlink" title="VI"></a>VI</h3><p>就是斯特林数 · 行（啊啊啊又超纲，虽然超到一个地方去了），答案就是 ${n \brace m}$ </p><h3 id="VII"><a href="#VII" class="headerlink" title="VII"></a>VII</h3><p>球一样了，直接插板法， $\binom{n + m - 1}{m - 1}$ </p><h3 id="VIII"><a href="#VIII" class="headerlink" title="VIII"></a>VIII</h3><p>选 $n$ 个盒子来装，就是 $\binom{m}{n}$ </p><h3 id="IX"><a href="#IX" class="headerlink" title="IX"></a>IX</h3><p>由于球相同，先给每个盒子放一个球就转化为了 VII </p><h3 id="X"><a href="#X" class="headerlink" title="X"></a>X</h3><p>没法了，搞 GF ，先考虑递推，设 $f(n, m)$ 是“ $n$ 个球 $m$ 个盒的方案数”，那么 $f(n, m) = f(n, m - 1) + f(n - m, m)$ 即：要么直接加一个空盒，要么所有盒子球个数一起加一</p><p>构造一个 OGF $F_i(x) = \sum_{j = 0} f(j, i) x^i$ ，考虑化简，即带入递推式：<br>$$<br>\begin{aligned}<br>&amp; F_i(x) = F_{i - 1}(x) + x^i F_i(x) \\<br>&amp; F_i(x) = \frac{F_{i - 1}(x)}{1 - x^i} \\<br>&amp; F_i(x) = \prod_{j = 1}^i \frac{1}{1 - x^j}<br>\end{aligned}<br>$$<br>这玩意到封闭不封闭的，看到连乘考虑 $\ln$ ：<br>$$<br>\begin{aligned}<br>&amp; F_i(x) = \prod_{j = 0}^i \frac{1}{1 - x^j} \\<br>&amp; \ln(F_i(x)) = \sum_{j = 1}^i -\ln(1 - x^j)<br>\end{aligned}<br>$$<br>现在我们要快速求 $\ln(1 - x^k)$ ，考虑求导：<br>$$<br>\begin{aligned}<br>&amp; \ln(1 - x^k)’ \\<br>= &amp; \frac{1}{1 - x^k} * (-kx^{k - 1}) \\<br>= &amp; (-k x^{k - 1}) \sum_{i = 0} x^{ik} \\<br>= &amp; \sum_{i = 0} -k x^{ik + k - 1} \\<br>= &amp; \sum_{i = 1} -k x^{ik - 1}<br>\end{aligned}<br>$$<br>现在积分回去得：<br>$$<br>\ln(1 - x^k) = \sum_{i = 1} -\frac{1}{i} x^{ik}<br>$$<br>发现 $\ln$ 前面其实也有个负号，可以消：<br>$$<br>\begin{aligned}<br>\ln(F_i(x)) = &amp; \sum_{j = 1}^i -\ln(1 - x^j) \\<br>= &amp; \sum_{j = 1}^i \sum_{k = 1} \frac{1}{k} x^{kj}<br>\end{aligned}<br>$$</p><p>我们要求的是 $[x^n] F_m(x)$ ，在模 $x^{n + 1}$ 意义下完成多项式构造和多项式 $\exp$ 即可，总时间 $O(n \log n)$ </p><h3 id="XI"><a href="#XI" class="headerlink" title="XI"></a>XI</h3><p>还是 $[n \le m]$ </p><h3 id="XII"><a href="#XII" class="headerlink" title="XII"></a>XII</h3><p>先给每个盒子分配一个球就是 X 了</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> si size()</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rs(x) resize(x)</span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">using</span> poly = std::vector&lt;<span class="keyword">int</span>&gt;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> P = <span class="number">998244353</span>, N = <span class="number">2e5</span> + <span class="number">100</span>, G = <span class="number">3</span>, L = <span class="number">2e5</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> fac[N &lt;&lt; <span class="number">1</span>], ifac[N &lt;&lt; <span class="number">1</span>], iv[<span class="number">1</span> &lt;&lt; <span class="number">20</span> | <span class="number">100</span>], rev[<span class="number">1</span> &lt;&lt; <span class="number">20</span> | <span class="number">100</span>];</span><br><span class="line">poly string, fm;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rdy</span><span class="params">(<span class="keyword">int</span> &amp;bit, <span class="keyword">int</span> &amp;tot, <span class="keyword">int</span> len)</span></span>&#123; <span class="keyword">for</span> (bit = <span class="number">0</span>, tot = <span class="number">1</span>; tot &lt; len + <span class="number">1</span>; tot &lt;&lt;= <span class="number">1</span>, ++bit); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_r</span><span class="params">(<span class="keyword">int</span> bit, <span class="keyword">int</span> tot)</span></span>&#123; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) rev[i] = (rev[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (bit - <span class="number">1</span>)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> tot, <span class="keyword">int</span> op)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> gn[<span class="number">1</span> &lt;&lt; <span class="number">20</span> | <span class="number">100</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) <span class="keyword">if</span> (i &lt; rev[i]) std::<span class="built_in">swap</span>(x[i], x[rev[i]]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; tot; mid &lt;&lt;= <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> g0 = <span class="built_in">qpow</span>(G, (P - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">-1</span>) g0 = <span class="built_in">qpow</span>(g0);</span><br><span class="line">        gn[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; mid; ++i) gn[i] = <span class="built_in">LL</span>(g0) * gn[i - <span class="number">1</span>] % P;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; i += (mid &lt;&lt; <span class="number">1</span>))</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> *x1 = x + i, *x2 = x + i + mid, *ed = x2, *g = gn; x1 != ed; ++x1, ++x2, ++g)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> p = *x1, q = <span class="built_in">LL</span>(*x2) * *g % P;</span><br><span class="line">                <span class="built_in">adj</span>(*x1 = p + q - P), <span class="built_in">adj</span>(*x2 = p - q);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (op == <span class="number">1</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="built_in">qpow</span>(tot);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(x[i]) * t % P;</span><br><span class="line">&#125;</span><br><span class="line">poly <span class="keyword">operator</span> * (poly x, poly y)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.<span class="built_in">empty</span>() || y.<span class="built_in">empty</span>()) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    <span class="keyword">int</span> n = x.si, m = y.si, tot, bit;</span><br><span class="line">    <span class="built_in">rdy</span>(bit, tot, n + m), <span class="built_in">get_r</span>(bit, tot);</span><br><span class="line">    x.<span class="built_in">rs</span>(tot), y.<span class="built_in">rs</span>(tot);</span><br><span class="line">    <span class="keyword">if</span> (x != y) <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">1</span>), <span class="built_in">ntt</span>(y.<span class="built_in">data</span>(), tot, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">1</span>), y = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(x[i]) * y[i] % P;</span><br><span class="line">    <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> x.<span class="built_in">rs</span>(n + m - <span class="number">1</span>), x;</span><br><span class="line">&#125;</span><br><span class="line">poly <span class="keyword">operator</span> - (poly x, poly y)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.si &lt; y.si) x.<span class="built_in">rs</span>(y.si);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = y.si - <span class="number">1</span>; ~i; --i) <span class="built_in">adj</span>(x[i] -= y[i]);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">inv</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = x.si;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> &#123;<span class="built_in">qpow</span>(x[<span class="number">0</span>])&#125;;</span><br><span class="line">    poly y = <span class="built_in">inv</span>(<span class="built_in">poly</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">begin</span>() + ((n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>))), z = y * y * x, <span class="built_in">res</span>(n);</span><br><span class="line">    y.<span class="built_in">rs</span>(n), z.<span class="built_in">rs</span>(n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">adj</span>(res[i] = <span class="number">2</span> * y[i] - z[i]);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">dif</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">poly <span class="title">res</span><span class="params">(x.si - <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x.si - <span class="number">1</span>; i; --i) res[i - <span class="number">1</span>] = <span class="built_in">LL</span>(i) * x[i] % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">inte</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">poly <span class="title">res</span><span class="params">(x.si + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = x.si - <span class="number">1</span>; ~i; --i) res[i + <span class="number">1</span>] = <span class="built_in">LL</span>(iv[i + <span class="number">1</span>]) * x[i] % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">ln</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">poly <span class="title">res</span><span class="params">(inv(x) * dif(x))</span></span>;</span><br><span class="line">    res.<span class="built_in">rs</span>(x.si), res = <span class="built_in">inte</span>(res);</span><br><span class="line">    <span class="keyword">return</span> res.<span class="built_in">rs</span>(x.si), res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">poly <span class="title">exp</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = x.si;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> &#123;<span class="number">1</span>&#125;;</span><br><span class="line">    poly y = <span class="built_in">exp</span>(<span class="built_in">poly</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">begin</span>() + ((n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>)));</span><br><span class="line">    y.<span class="built_in">rs</span>(n);</span><br><span class="line">    poly z = <span class="built_in">ln</span>(y);</span><br><span class="line">    x = x - z, ++x[<span class="number">0</span>], x = x * y;</span><br><span class="line">    <span class="keyword">return</span> x.<span class="built_in">rs</span>(n), x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prev</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mx = std::<span class="built_in">max</span>(n, m);</span><br><span class="line">    fac[<span class="number">0</span>] = fac[<span class="number">1</span>] = ifac[<span class="number">0</span>] = ifac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= (mx &lt;&lt; <span class="number">1</span>); ++i) fac[i] = <span class="built_in">LL</span>(i) * fac[i - <span class="number">1</span>] % P;</span><br><span class="line">    ifac[mx &lt;&lt; <span class="number">1</span>] = <span class="built_in">qpow</span>(fac[mx &lt;&lt; <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = (mx &lt;&lt; <span class="number">1</span>) - <span class="number">1</span>; i &gt; <span class="number">1</span>; --i) ifac[i] = <span class="built_in">LL</span>(i + <span class="number">1</span>) * ifac[i + <span class="number">1</span>] % P;</span><br><span class="line">    iv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= mx; ++i) iv[i] = <span class="built_in">LL</span>(P - P / i) * iv[P % i] % P;</span><br><span class="line">    <span class="function">poly <span class="title">f</span><span class="params">(m + <span class="number">1</span>)</span>, <span class="title">g</span><span class="params">(m + <span class="number">1</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        g[i] = (i &amp; <span class="number">1</span>) ? P - ifac[i] : ifac[i];</span><br><span class="line">        f[i] = <span class="built_in">qpow</span>(i, n) * <span class="built_in">LL</span>(ifac[i]) % P;</span><br><span class="line">    &#125;</span><br><span class="line">    string = f * g;</span><br><span class="line">    f.<span class="built_in">rs</span>(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) f[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; i * j &lt;= n; ++j) <span class="built_in">adj</span>(f[i * j] += iv[j] - P);</span><br><span class="line">    fm = <span class="built_in">exp</span>(f);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">LL</span>(fac[x]) * ifac[y] % P * ifac[x - y] % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc1</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> <span class="built_in">qpow</span>(m, n); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc2</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">LL</span>(fac[n]) * <span class="built_in">C</span>(m, n) % P; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc3</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="built_in">LL</span>(<span class="built_in">qpow</span>(m - i, n)) * <span class="built_in">C</span>(m, i) % P;</span><br><span class="line">        <span class="keyword">if</span> (i &amp; <span class="number">1</span>) <span class="built_in">adj</span>(res -= t);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">adj</span>(res += t - P);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc4</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i) <span class="built_in">adj</span>(res += string[i] - P);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc5</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> n &gt; m ? <span class="number">0</span> : <span class="number">1</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc6</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> string[m]; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc7</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> <span class="built_in">C</span>(n + m - <span class="number">1</span>, m - <span class="number">1</span>); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc8</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> <span class="built_in">C</span>(m, n); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc9</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> n &lt; m ? <span class="number">0</span> : <span class="built_in">calc7</span>(n - m, m); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc10</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> fm[n]; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc11</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> n &gt; m ? <span class="number">0</span> : <span class="number">1</span>; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc12</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span></span>&#123; <span class="keyword">return</span> n &lt; m ? <span class="number">0</span> : <span class="built_in">calc10</span>(n - m, m); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">prev</span>(n, m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc1</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc2</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc3</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc4</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc5</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc6</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc7</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc8</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc9</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc10</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc11</span>(n, m));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">calc12</span>(n, m));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 组合数学大杂烩&lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="dp" scheme="https://dyd-true.github.io/tags/dp/"/>
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="数论,数学" scheme="https://dyd-true.github.io/tags/%E6%95%B0%E8%AE%BA-%E6%95%B0%E5%AD%A6/"/>
    
    <category term="生成函数" scheme="https://dyd-true.github.io/tags/%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0/"/>
    
    <category term="多项式" scheme="https://dyd-true.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
    <category term="组合计数" scheme="https://dyd-true.github.io/tags/%E7%BB%84%E5%90%88%E8%AE%A1%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>luoguP5748 集合划分计数</title>
    <link href="https://dyd-true.github.io/2022/07/23/luoguP5748-%E9%9B%86%E5%90%88%E5%88%92%E5%88%86%E8%AE%A1%E6%95%B0/"/>
    <id>https://dyd-true.github.io/2022/07/23/luoguP5748-%E9%9B%86%E5%90%88%E5%88%92%E5%88%86%E8%AE%A1%E6%95%B0/</id>
    <published>2022-07-23T06:52:45.000Z</published>
    <updated>2022-07-23T08:49:36.196Z</updated>
    
    <content type="html"><![CDATA[<p> 生成函数，细节</p><span id="more"></span><p><a href="https://www.luogu.com.cn/problem/P5748">集合划分计数</a></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>就是求第 $n$ 项贝尔数，设其 EGF 为 $G(x)$ ， $n$ 个数构成一个非空集合的方案的 EGF 为 $F(x)$ ，那么显然有 $G = \exp(F)$ ，需要注意的一点是， $f_0 = 0, f_n = 1 (n \ne 0)$ ，因为 $0$ 个数显然无法构成非空集合，所以 $F(x) = \sum_{i = 1}^{\infty} \frac{x^i}{i!} = e^x - 1$ ，那么 $G(x) = e^{e^{x} - 1}$ ， 多项式 exp 即可</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> LL = <span class="keyword">long</span> <span class="keyword">long</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1</span> &lt;&lt; <span class="number">18</span> | <span class="number">100</span>, P = <span class="number">998244353</span>, G = <span class="number">3</span>, L = <span class="number">1e5</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">using</span> poly = std::vector&lt;<span class="keyword">int</span>&gt;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">adj</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span>&#123; x += (x &gt;&gt; <span class="number">31</span>) &amp; P; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y = P - <span class="number">2</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (; y; y &gt;&gt;= <span class="number">1</span>, x = <span class="built_in">LL</span>(x) * x % P) <span class="keyword">if</span> (y &amp; <span class="number">1</span>) res = <span class="built_in">LL</span>(res) * x % P;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> Poly</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> r[N], iv[N];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">rdy</span><span class="params">(<span class="keyword">int</span> &amp;bit, <span class="keyword">int</span> &amp;tot, <span class="keyword">int</span> len)</span></span>&#123; <span class="keyword">for</span> (bit = <span class="number">0</span>, tot =<span class="number">1</span>; tot &lt; len + <span class="number">1</span>; tot &lt;&lt;= <span class="number">1</span>, ++bit); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">get_r</span><span class="params">(<span class="keyword">int</span> bit, <span class="keyword">int</span> tot)</span></span>&#123; <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) r[i] = (r[i &gt;&gt; <span class="number">1</span>] &gt;&gt; <span class="number">1</span>) | ((i &amp; <span class="number">1</span>) &lt;&lt; (bit - <span class="number">1</span>)); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span> *x, <span class="keyword">int</span> tot, <span class="keyword">int</span> op)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">int</span> gn[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; tot; ++i) <span class="keyword">if</span> (i &lt; r[i]) std::<span class="built_in">swap</span>(x[i], x[r[i]]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; tot; mid &lt;&lt;= <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> g0 = <span class="built_in">qpow</span>(G, (P - <span class="number">1</span>) / (mid &lt;&lt; <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">if</span> (op == <span class="number">-1</span>) g0 = <span class="built_in">qpow</span>(g0);</span><br><span class="line">            gn[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; mid; ++i) gn[i] = <span class="built_in">LL</span>(gn[i - <span class="number">1</span>]) * g0 % P;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; i += (mid &lt;&lt; <span class="number">1</span>))</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> *x1 = x + i, *x2 = x + i + mid, *ed = x2, *g = gn; x1 != ed; ++x1, ++x2, ++g)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">int</span> p = *x1, q = <span class="built_in">LL</span>(*x2) * *g % P;</span><br><span class="line">                    <span class="built_in">adj</span>(*x1 = p + q - P), <span class="built_in">adj</span>(*x2 = p - q);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="number">1</span>) <span class="keyword">return</span> ;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="built_in">qpow</span>(tot);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(x[i]) * t % P;</span><br><span class="line">    &#125;</span><br><span class="line">    poly <span class="keyword">operator</span> * (poly x, poly y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.<span class="built_in">empty</span>() || y.<span class="built_in">empty</span>()) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">        <span class="keyword">int</span> n = x.<span class="built_in">size</span>(), m = y.<span class="built_in">size</span>(), bit, tot;</span><br><span class="line">        <span class="built_in">rdy</span>(bit, tot, n + m), <span class="built_in">get_r</span>(bit, tot);</span><br><span class="line">        x.<span class="built_in">resize</span>(tot), y.<span class="built_in">resize</span>(tot);</span><br><span class="line">        <span class="keyword">if</span> (x != y) <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">1</span>), <span class="built_in">ntt</span>(y.<span class="built_in">data</span>(), tot, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">1</span>), y = x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; ++i) x[i] = <span class="built_in">LL</span>(x[i]) * y[i] % P;</span><br><span class="line">        <span class="built_in">ntt</span>(x.<span class="built_in">data</span>(), tot, <span class="number">-1</span>), x.<span class="built_in">resize</span>(n + m - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    poly <span class="keyword">operator</span> - (poly x, poly y)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.<span class="built_in">size</span>() &lt; y.<span class="built_in">size</span>()) x.<span class="built_in">resize</span>(y.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = y.<span class="built_in">size</span>() - <span class="number">1</span>; ~i; --i) <span class="built_in">adj</span>(x[i] -= y[i]);</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">poly <span class="title">inv</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = x.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> &#123;<span class="built_in">qpow</span>(x[<span class="number">0</span>])&#125;;</span><br><span class="line">        <span class="keyword">int</span> bit, tot;</span><br><span class="line">        <span class="built_in">rdy</span>(bit, tot, n &lt;&lt; <span class="number">1</span>);</span><br><span class="line">        poly y = <span class="built_in">inv</span>(<span class="built_in">poly</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">begin</span>() + ((n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>))), z = y * y * x, <span class="built_in">res</span>(n);</span><br><span class="line">        y.<span class="built_in">resize</span>(n), z.<span class="built_in">resize</span>(n);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">adj</span>(res[i] = <span class="number">2ll</span> * y[i] - z[i]);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">poly <span class="title">dif</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">poly <span class="title">res</span><span class="params">(x.size() - <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = x.<span class="built_in">size</span>() - <span class="number">1</span>; i; --i) res[i - <span class="number">1</span>] = <span class="built_in">LL</span>(i) * x[i] % P;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">poly <span class="title">inte</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">poly <span class="title">res</span><span class="params">(x.size() + <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="keyword">if</span> (!iv[<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            iv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; ++i) iv[i] = <span class="built_in">LL</span>(P - P / i) * iv[P % i] % P;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = x.<span class="built_in">size</span>(); i; --i) res[i] = <span class="built_in">LL</span>(x[i - <span class="number">1</span>]) * iv[i] % P;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">poly <span class="title">ln</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="function">poly <span class="title">res</span><span class="params">(dif(x) * inv(x))</span></span>;</span><br><span class="line">        res.<span class="built_in">resize</span>(x.<span class="built_in">size</span>()), res = <span class="built_in">inte</span>(res);</span><br><span class="line">        <span class="keyword">return</span> res.<span class="built_in">resize</span>(x.<span class="built_in">size</span>()), res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">poly <span class="title">exp</span><span class="params">(poly x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x.<span class="built_in">size</span>() == <span class="number">1</span>) <span class="keyword">return</span> &#123;<span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> n = x.<span class="built_in">size</span>();</span><br><span class="line">        poly y = <span class="built_in">exp</span>(<span class="built_in">poly</span>(x.<span class="built_in">begin</span>(), x.<span class="built_in">begin</span>() + ((n + <span class="number">1</span>) &gt;&gt; <span class="number">1</span>)));</span><br><span class="line">        y.<span class="built_in">resize</span>(n);</span><br><span class="line">        poly z = <span class="built_in">ln</span>(y);</span><br><span class="line">        x = x - z, ++x[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">return</span> x = x * y, x.<span class="built_in">resize</span>(n), x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> fac[N], ifac[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>] = ifac[<span class="number">0</span>] = fac[<span class="number">1</span>] = ifac[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; L; ++i) fac[i] = <span class="built_in">LL</span>(i) * fac[i - <span class="number">1</span>] % P;</span><br><span class="line">    ifac[L - <span class="number">1</span>] = <span class="built_in">qpow</span>(fac[L - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = L - <span class="number">2</span>; i &gt; <span class="number">1</span>; --i) ifac[i] = <span class="built_in">LL</span>(i + <span class="number">1</span>) * ifac[i + <span class="number">1</span>] % P;</span><br><span class="line">    <span class="function">poly <span class="title">f</span><span class="params">(L)</span></span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; L; ++i) f[i] = ifac[i];</span><br><span class="line">    poly g = Poly::<span class="built_in">exp</span>(f);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; L; ++i) g[i] = <span class="built_in">LL</span>(g[i]) * fac[i] % P;</span><br><span class="line">    <span class="keyword">int</span> T, n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T); T--; )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, g[n]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt; 生成函数，细节&lt;/p&gt;</summary>
    
    
    
    <category term="练习" scheme="https://dyd-true.github.io/categories/%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="练习" scheme="https://dyd-true.github.io/tags/%E7%BB%83%E4%B9%A0/"/>
    
    <category term="生成函数" scheme="https://dyd-true.github.io/tags/%E7%94%9F%E6%88%90%E5%87%BD%E6%95%B0/"/>
    
    <category term="多项式" scheme="https://dyd-true.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
  </entry>
  
</feed>
