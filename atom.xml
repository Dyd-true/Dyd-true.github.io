<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RuSun&#39;s Blog</title>
  
  <subtitle>Good luck noip2021</subtitle>
  <link href="https://rusunoi.github.io/atom.xml" rel="self"/>
  
  <link href="https://rusunoi.github.io/"/>
  <updated>2021-11-17T12:25:02.560Z</updated>
  <id>https://rusunoi.github.io/</id>
  
  <author>
    <name>RuSun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>P3980 [NOI2008] 志愿者招募</title>
    <link href="https://rusunoi.github.io/2021/11/17/P3980/"/>
    <id>https://rusunoi.github.io/2021/11/17/P3980/</id>
    <published>2021-11-17T12:15:07.000Z</published>
    <updated>2021-11-17T12:25:02.560Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3980">P3980 [NOI2008] 志愿者招募</a></p><span id="more"></span><p>建图超级妙，考场一定想不出来。</p><p>现在假设有 $inf$ 的志愿者，但是有些是不工作的。对于任意一天需要 <code>x</code> 个志愿者，那么有 $inf - x$ 的志愿者是不工作的，他们到下一天并不需要代价，为了满足费用流最大流的性质（即到最后一天志愿者的数量不变，一直为 $inf$ ），那么我们一定要补足 $inf$ 的流量，这些补足的流量就是当前工作的志愿者。考虑如何维护志愿者的工作状态，在它工作的时段，计算一次代价，再工作完成后回到不工作的志愿者中。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line">incf[st] = inf;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i] &amp;&amp; d[t] + f[i] &lt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * incf[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, a; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, i + <span class="number">1</span>, inf - a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i + <span class="number">1</span>, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(n, ed, inf, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, n, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a - <span class="number">1</span>, b, inf, c);</span><br><span class="line"><span class="built_in">add</span>(b, a - <span class="number">1</span>, <span class="number">0</span>, -c);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3980&quot;&gt;P3980 [NOI2008] 志愿者招募&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P4012 深海机器人问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4012/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4012/</id>
    <published>2021-11-17T11:59:22.000Z</published>
    <updated>2021-11-17T12:00:22.560Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4012">P4012 深海机器人问题</a></p><span id="more"></span><p>按照题意建图即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">260</span>, M = <span class="number">2e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">d[i] = -inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line">incf[st] = inf;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i] &amp;&amp; d[t] + f[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * incf[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x * (m + <span class="number">1</span>) + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ns, nt;</span><br><span class="line">cin &gt;&gt; ns &gt;&gt; nt &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="built_in">num</span>(n, m) + <span class="number">1</span>;</span><br><span class="line">ed = st + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(t, h, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, -a);</span><br><span class="line"><span class="built_in">add</span>(t, h, inf, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>, a; j &lt;= m; j++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(t, h, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, -a);</span><br><span class="line"><span class="built_in">add</span>(t, h, inf, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= ns; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(b, c);</span><br><span class="line"><span class="built_in">add</span>(st, t, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= nt; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(b, c);</span><br><span class="line"><span class="built_in">add</span>(t, ed, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4012&quot;&gt;P4012 深海机器人问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P2294 [HNOI2005]狡猾的商人</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2294/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2294/</id>
    <published>2021-11-17T11:53:13.000Z</published>
    <updated>2021-11-17T11:57:15.280Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2294">P2294 [HNOI2005]狡猾的商人</a></p><span id="more"></span><p>直接差分约束即可，找负环判断是否有解。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">3e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, d[N], cnt[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">vis[i] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">d[i] = -INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">cnt[i] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + wt[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + wt[i];</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[edg[i]] &gt; n + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line">st = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a - <span class="number">1</span>, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a - <span class="number">1</span>, -c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">spfa</span>())</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;true&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;false&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2294&quot;&gt;P2294 [HNOI2005]狡猾的商人&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="差分约束" scheme="https://rusunoi.github.io/tags/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/"/>
    
  </entry>
  
  <entry>
    <title>P3275 [SCOI2011]糖果</title>
    <link href="https://rusunoi.github.io/2021/11/17/P3275/"/>
    <id>https://rusunoi.github.io/2021/11/17/P3275/</id>
    <published>2021-11-17T11:43:02.000Z</published>
    <updated>2021-11-18T06:32:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3275">P3275 [SCOI2011]糖果</a></p><span id="more"></span><p>正解是 <code>tarjan</code> ，这里做的是差分约束，复杂度差一些，需要玄学卡过。</p><p>正解：先做操作 $1$ 、$3$ 、$5$ ，缩点，建新图，一个强连通分量上的点值一定是一样的。再做操作 $2$ 、$4$ ，如果是自环，直接无解。再做拓扑排序，如果还有环，则无解。拓扑排序后，统计答案即可。</p><p>差分约束做法：直接做，将 <code>spfa</code> 中的 <code>queue</code> 改为 <code>stack</code> 玄学卡过。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, d[N], cnt[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">d[i] = -INF;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + wt[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + wt[i];</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[t] &gt; n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">2</span>)</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">3</span>)</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">4</span>)</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">5</span>)</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-1&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">tot += d[i];</span><br><span class="line">cout &lt;&lt; tot;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3275&quot;&gt;P3275 [SCOI2011]糖果&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="tarjan" scheme="https://rusunoi.github.io/tags/tarjan/"/>
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="差分约束" scheme="https://rusunoi.github.io/tags/%E5%B7%AE%E5%88%86%E7%BA%A6%E6%9D%9F/"/>
    
    <category term="拓扑排序" scheme="https://rusunoi.github.io/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>P1251 餐巾计划问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P1251/"/>
    <id>https://rusunoi.github.io/2021/11/17/P1251/</id>
    <published>2021-11-17T10:45:15.000Z</published>
    <updated>2021-11-17T11:40:33.820Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1251">P1251 餐巾计划问题</a></p><span id="more"></span><p>题目比较繁琐，也不好想，这里直接给出建图方法。</p><p>拆点，拆为起点和终点，起点的餐巾是旧餐巾，终点的餐巾是新餐巾。对于每一天，从源点连向其起点，流量为所需要的餐巾数，表示每天要处理的旧餐巾数；从终点连向汇点，流量为所需要的餐巾数，表示使用的新餐巾的数量（即每天，从源点获得了旧餐巾，将新餐巾带走）。从源点连向其终点，流量为 $inf$ ，代价为新买餐巾的代价。如果还有下一天，则该天的新餐巾可以转化为下一天的旧餐巾，连边；如果还有快洗完成的一天，就可以将该天的新餐巾转化为快洗完成的那一天的旧餐巾，同时有相应的代价。慢洗同理。</p><p>有一点，很多题解忽略了，就是费用流中的流量问题：如何保证最小费用是最大流？可以发现，最大流的情况即所有连向汇点的流量跑满，意义为每一天都有满足条件的新餐巾转化为旧餐巾。这一题的拆点和其他题不一样，一个点的内部是没有边的，即一天的旧餐巾是不能转化为一天的新餐巾。所以一天的新餐巾的来源：洗的和购买的，而当洗的不够时，为了保证最大流，会从源点获得洗的，从而保证了答案的正确性。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF LLONG_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e3</span> + <span class="number">10</span>, M = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, p, fastt, fastf, slowt, slowf, pre[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r[N], d[N], incf[N], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        incf[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = INF;</span><br><span class="line">    incf[st] = INF;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[edg[i]] = d[t] + f[i];</span><br><span class="line">                pre[edg[i]] = i;</span><br><span class="line">                incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> t = incf[ed];</span><br><span class="line">        res += t * d[ed];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            wt[pre[i]] -= t;</span><br><span class="line">            wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">long</span> <span class="keyword">long</span> c, <span class="keyword">long</span> <span class="keyword">long</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; r[i];</span><br><span class="line">    cin &gt;&gt; p &gt;&gt; fastt &gt;&gt; fastf &gt;&gt; slowt &gt;&gt; slowf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, r[i], <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i + n, ed, r[i], <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(ed, i + n, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(st, i + n, INF, p);</span><br><span class="line">        <span class="built_in">add</span>(i + n, st, <span class="number">0</span>, -p);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, i + <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">add</span>(i + <span class="number">1</span>, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i + fastt &lt;= n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, i + n + fastt, INF, fastf);</span><br><span class="line">            <span class="built_in">add</span>(i + n + fastt, i, <span class="number">0</span>, -fastf);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i + slowt &lt;= n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, i + n + slowt, INF, slowf);</span><br><span class="line">            <span class="built_in">add</span>(i + n + slowt, i, <span class="number">0</span>, -slowf);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1251&quot;&gt;P1251 餐巾计划问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="拆点" scheme="https://rusunoi.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P2045 方格取数加强版</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2045/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2045/</id>
    <published>2021-11-17T09:01:20.000Z</published>
    <updated>2021-11-17T11:05:44.850Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2045">P2045 方格取数加强版</a></p><span id="more"></span><p>拆点，每个格子中流量为 $1$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e3</span> + <span class="number">10</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, k, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">d[i] = -INF;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">incf[st] = INF;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t] ; ~i; i  = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &gt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * t;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">1</span> || y &gt; n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * n + y - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">st = n * n * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">ed = n * n * <span class="number">2</span> + <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">add</span>(st, <span class="built_in">num</span>(<span class="number">1</span>, <span class="number">1</span>) &lt;&lt; <span class="number">1</span>, k, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(<span class="built_in">num</span>(<span class="number">1</span>, <span class="number">1</span>) &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -a);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (~h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line"><span class="keyword">if</span> (~h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(<span class="built_in">num</span>(n, n) &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, k, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, <span class="built_in">num</span>(n, n) &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2045&quot;&gt;P2045 方格取数加强版&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="拆点" scheme="https://rusunoi.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P4013 数字梯形问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4013/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4013/</id>
    <published>2021-11-17T08:22:55.000Z</published>
    <updated>2021-11-17T11:01:15.850Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4013">P4013 数字梯形问题</a></p><span id="more"></span><p>权值在点上，所以一定要拆点的。</p><p>子任务 $1$ ：路径不相交。即每个点只能走一次，即点中的流量为 $1$ ，边上的流量无所谓，因为出发点最多只有 $1$ 流量。</p><p>子任务 $2$ ：仅在点上交。即每条边只能走一次，即点中的流量为 $inf$ ，边上的流量为 $1$ 。</p><p>子任务 $3$ ：允许相交，流量为 $inf$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">4e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">-1</span>, cost[<span class="number">40</span>][<span class="number">40</span>], id[<span class="number">40</span>][<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-0x3f</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line"><span class="built_in">memset</span>(incf, <span class="number">0</span>, <span class="keyword">sizeof</span> incf);</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">incf[st] = INF;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &gt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = ++tot;</span><br><span class="line">ed = ++tot;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i  = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; cost[i][j];</span><br><span class="line">id[i][j] = ++tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = id[i][j];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">1</span>, cost[i][j]);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -cost[i][j]);</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> h1 = id[i + <span class="number">1</span>][j],</span><br><span class="line">h2 = id[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h1 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h1 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h2 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h2 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = id[i][j];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, INF, cost[i][j]);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -cost[i][j]);</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> h1 = id[i + <span class="number">1</span>][j],</span><br><span class="line">h2 = id[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h1 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h1 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h2 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h2 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = id[i][j];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, INF, cost[i][j]);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -cost[i][j]);</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> h1 = id[i + <span class="number">1</span>][j],</span><br><span class="line">h2 = id[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h1 &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h1 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h2 &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h2 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4013&quot;&gt;P4013 数字梯形问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="拆点" scheme="https://rusunoi.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P4014 分配问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4014/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4014/</id>
    <published>2021-11-17T08:16:18.000Z</published>
    <updated>2021-11-17T11:01:05.140Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4014">P4014 分配问题</a></p><span id="more"></span><p>裸的带权匹配，分别求最大值和最小值（最长路、最短路），为了简便，我们求最大值的时候将边权变为它的相反数，求最小值的相反数即答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        incf[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = INF;</span><br><span class="line">    incf[st] = INF;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[edg[i]] = d[t] + f[i];</span><br><span class="line">                pre[edg[i]] = i;</span><br><span class="line">                incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = incf[ed];</span><br><span class="line">        res += t * d[ed];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            wt[pre[i]] -= t;</span><br><span class="line">            wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n + <span class="number">1</span>; j &lt; ed; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, j, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] += wt[i ^ <span class="number">1</span>];</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">f[i] = -f[i];</span><br><span class="line">f[i ^ <span class="number">1</span>] = -f[i ^ <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; -<span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4014&quot;&gt;P4014 分配问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P4016 负载平衡问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4016/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4016/</id>
    <published>2021-11-17T08:12:54.000Z</published>
    <updated>2021-11-17T11:00:43.360Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4016">P4016 负载平衡问题</a></p><span id="more"></span><p>题目自带流量平衡，按题意直接建图即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">610</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, avg, s[N], d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">incf[st] = INF;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; s[i];</span><br><span class="line">avg += s[i];</span><br><span class="line"><span class="built_in">add</span>(i, i &lt; n ? i + <span class="number">1</span> : <span class="number">1</span>, INF, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i &lt; n ? i + <span class="number">1</span> : <span class="number">1</span>, i, <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, i &gt; <span class="number">1</span> ? i - <span class="number">1</span> : n, INF, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i &gt; <span class="number">1</span> ? i - <span class="number">1</span> : n, i, <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">avg /= n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (s[i] &gt; avg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, s[i] - avg, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] &lt; avg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, avg - s[i], <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4016&quot;&gt;P4016 负载平衡问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P4015 运输问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4015/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4015/</id>
    <published>2021-11-17T08:02:46.000Z</published>
    <updated>2021-11-17T11:00:53.220Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4015">P4015 运输问题</a></p><span id="more"></span><p>自带流量平衡，几乎是裸的费用流。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">150</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = INF;</span><br><span class="line">incf[st] = INF;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = m + n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i + m, ed, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i + m, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, j + m, INF, a);</span><br><span class="line"><span class="built_in">add</span>(j + m, i, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] += wt[i ^ <span class="number">1</span>];</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">f[i] = -f[i];</span><br><span class="line">f[i ^ <span class="number">1</span>] = -f[i ^ <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; -<span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4015&quot;&gt;P4015 运输问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P4313 文理分科</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4313/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4313/</id>
    <published>2021-11-17T07:53:58.000Z</published>
    <updated>2021-11-17T10:59:30.790Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4313">P4313 文理分科</a></p><span id="more"></span><p>经典的建图模型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e4</span> + <span class="number">10</span>, M = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, tot, sum, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">5</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line">tot = ed;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = (i, j);</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="built_in">add</span>(tot, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, tot, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = (i, j);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="built_in">add</span>(h, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; sum - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4313&quot;&gt;P4313 文理分科&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>STEAD - Steady Cow Assignment</title>
    <link href="https://rusunoi.github.io/2021/11/17/SP741/"/>
    <id>https://rusunoi.github.io/2021/11/17/SP741/</id>
    <published>2021-11-17T07:50:51.000Z</published>
    <updated>2021-11-17T11:08:32.090Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/STEAD/">SPOJ: STEAD - Steady Cow Assignment</a></p><p><a href="https://www.luogu.com.cn/problem/SP741">LuoGu: SP741 STEAD - Steady Cow Assignment</a></p><span id="more"></span><p>左转P2857</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1030</span>, M = <span class="number">46050</span>;</span><br><span class="line"><span class="keyword">int</span> n, B, st, ed, barn[N], d[N], cur[N], k[<span class="number">1010</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r = l + x - <span class="number">1</span>; r &lt;= B; l++, r++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i ^ <span class="number">1</span>] == st)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] = barn[edg[i ^ <span class="number">1</span>]];</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num = k[edg[i ^ <span class="number">1</span>]][edg[i] - n];</span><br><span class="line"><span class="keyword">if</span> (num &lt; l || num &gt; r)</span><br><span class="line">wt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">dinic</span>() == n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; B;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + B + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= B; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">k[i][a] = j;</span><br><span class="line"><span class="built_in">add</span>(i, a + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(a + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>, a; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; barn[i];</span><br><span class="line"><span class="built_in">add</span>(i, ed, barn[i]);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = B, mid;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; r;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.spoj.com/problems/STEAD/&quot;&gt;SPOJ: STEAD - Steady Cow Assignment&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/SP741&quot;&gt;LuoGu: SP741 STEAD - Steady Cow Assignment&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="二分图的最大匹配" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE%E7%9A%84%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/"/>
    
    <category term="二分" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>SP1693 COCONUTS - Coconuts</title>
    <link href="https://rusunoi.github.io/2021/11/17/SP1693/"/>
    <id>https://rusunoi.github.io/2021/11/17/SP1693/</id>
    <published>2021-11-17T07:43:16.000Z</published>
    <updated>2021-11-17T10:57:21.340Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/COCONUTS/">SPOJ: COCONUTS - Coconuts</a></p><p><a href="https://www.luogu.com.cn/problem/SP1693">LuoGu: SP1693 COCONUTS - Coconuts</a></p><span id="more"></span><p>左转善意的投票/冠军调查</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.spoj.com/problems/COCONUTS/&quot;&gt;SPOJ: COCONUTS - Coconuts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/SP1693&quot;&gt;LuoGu: SP1693 COCONUTS - Coconuts&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>SP4063 MPIGS - Sell Pigs</title>
    <link href="https://rusunoi.github.io/2021/11/17/SP4063/"/>
    <id>https://rusunoi.github.io/2021/11/17/SP4063/</id>
    <published>2021-11-17T07:40:23.000Z</published>
    <updated>2021-11-17T10:56:18.310Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/MPIGS/">SPOJ: MPIGS - Sell Pigs</a></p><p><a href="https://www.luogu.com.cn/problem/SP4063">LuoGu: SP4063 MPIGS - Sell Pigs</a></p><span id="more"></span><p>左转银行家。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">2.002e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, st, ed, k[<span class="number">1010</span>], d[N], cur[N], last[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">cin &gt;&gt; k[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, id; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">while</span> (a--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="keyword">if</span> (!last[id])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, k[id]);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(last[id], i, INF);</span><br><span class="line"><span class="built_in">add</span>(i, last[id], <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">last[id] = i;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(i, ed, b);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.spoj.com/problems/MPIGS/&quot;&gt;SPOJ: MPIGS - Sell Pigs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/SP4063&quot;&gt;LuoGu: SP4063 MPIGS - Sell Pigs&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最大流" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P4638 [SHOI2011]银行家</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4638/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4638/</id>
    <published>2021-11-17T07:37:54.000Z</published>
    <updated>2021-11-17T10:59:03.060Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4638">P4638 [SHOI2011]银行家</a></p><span id="more"></span><p>以下是当时写的题解。</p><p>题目中， 金币从保险柜里面流出， 到达每个人都手中， 求可以取出的最大值。 这不禁让我们联想到了网络最大流， 保险柜正是虚拟源点， 可以流出流量， 而金币正是流量。 这道题目特殊的一点是每一个人取出金币之后， 可以随意调整打开的保险柜的数量。 那么可能因为这次调整多出来的流量是因为两人用了同一个保险柜， 即可能存在的金币的流向如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">客户 1 打开了保险柜 1， 2</span><br><span class="line"></span><br><span class="line">保险柜 1 -&gt; 客户 1</span><br><span class="line"></span><br><span class="line">保险柜 2 -&gt; 客户 1</span><br><span class="line"></span><br><span class="line">此时， 保险柜 1 和 2 以及客户 1 之间可以随便乱搞</span><br><span class="line"></span><br><span class="line">保险柜 1 -&gt; 保险柜 2 （被 “ 你 ” 拿走）</span><br><span class="line"></span><br><span class="line">客户 2 打开了保险柜 2</span><br><span class="line"></span><br><span class="line">此时， 保险柜 2 和客户 2 之间可以随便乱搞</span><br><span class="line"></span><br><span class="line">保险柜 2 -&gt; 客户 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不难发现， 保险柜 1 和 2 与客户 1 和 2 之间金币可以按顺序随意流动， 所以上述过程可以等价于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">客户 1 打开了保险柜 1， 2</span><br><span class="line"></span><br><span class="line">客户 1 十分贪婪， 卷走所有的保险柜 1 和 2 的金币</span><br><span class="line"></span><br><span class="line">客户 2 一来， 看见自己的保险柜 2 被卷走了， 十分生气， 把客户 1 打了一顿， 拿走了他想要的金币</span><br></pre></td></tr></table></figure><p>于是我们可以这样建图：</p><ul><li>建立虚拟源点和汇点；</li></ul><ul><li><p>对于每一个人能开的保险柜， 如果它没有被打开过， 则从虚拟源点到当前的人连一条流量为保险柜金币数量的边， 表示这个人可以从这个保险柜中卷走所有的金币；</p></li><li><p>对于每一个人能开的保险柜， 如果它已经被打开过了， 则从上一次可以开这个保险柜的人到当前的人连一条流量为无限大的边， 表示当前的人可以无限从上一个人索取金币；</p></li><li><p>对于每个人， 向汇点连一条流量为其想要的金币的数量。</p></li></ul><p>可以发现， 对于一个保险柜， 所有可以打开它的人构成了一条链， 可以按顺序随意传播金币。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">610</span>, M = <span class="number">4e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, st, ed, k[<span class="number">2510</span>], d[N], cur[N], last[<span class="number">2510</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">cin &gt;&gt; k[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, id; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">while</span> (a--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="keyword">if</span> (!last[id])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, k[id]);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(last[id], i, INF);</span><br><span class="line"><span class="built_in">add</span>(i, last[id], <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">last[id] = i;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(i, ed, b);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4638&quot;&gt;P4638 [SHOI2011]银行家&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最大流" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P2944 [USACO09MAR]Earthquake Damage 2 G</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2944/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2944/</id>
    <published>2021-11-17T07:20:42.000Z</published>
    <updated>2021-11-17T11:02:46.790Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2944">P2944 [USACO09MAR]Earthquake Damage 2 G</a></p><span id="more"></span><p>割点问题，拆点即可。打来电话的农场没有被摧毁，不能割；其他的可以割。所有无法到达源点的点连向汇点，不能割，直接最小割即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">6e3</span> + <span class="number">10</span>, M = <span class="number">2e5</span> +<span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> avai[N];</span><br><span class="line"><span class="keyword">int</span> n, m, k, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">st = <span class="number">1</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a + n, b, INF);</span><br><span class="line"><span class="built_in">add</span>(b, a + n, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b + n, a, INF);</span><br><span class="line"><span class="built_in">add</span>(a, b + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= k; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">avai[a] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">add</span>(a + n, ed, INF);</span><br><span class="line"><span class="built_in">add</span>(ed, a + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!avai[i] &amp;&amp; i != st)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, INF);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2944&quot;&gt;P2944 [USACO09MAR]Earthquake Damage 2 G&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="拆点" scheme="https://rusunoi.github.io/tags/%E6%8B%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>P2763 试题库问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2763/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2763/</id>
    <published>2021-11-17T07:16:37.000Z</published>
    <updated>2021-11-17T11:03:54.960Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2763">P2763 试题库问题</a></p><span id="more"></span><p>按照按照题意建图即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N =<span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> k, n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; k &gt;&gt; n;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n + k + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        m += a;</span><br><span class="line">        <span class="built_in">add</span>(i + n, ed, a);</span><br><span class="line">        <span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= a; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; b;</span><br><span class="line">            <span class="built_in">add</span>(i, b + n, <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">add</span>(b + n, i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">dinic</span>() &lt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;No Solution!&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i - n &lt;&lt; <span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line">            <span class="keyword">if</span> (edg[j] != ed &amp;&amp; wt[j])</span><br><span class="line">                cout &lt;&lt; edg[j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2763&quot;&gt;P2763 试题库问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最大流" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P1646 [国家集训队]happiness]</title>
    <link href="https://rusunoi.github.io/2021/11/17/P1646/"/>
    <id>https://rusunoi.github.io/2021/11/17/P1646/</id>
    <published>2021-11-17T07:13:29.000Z</published>
    <updated>2021-11-17T11:06:07.740Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1646">P1646 [国家集训队]happiness</a></p><span id="more"></span><p>经典的建图模型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span> + <span class="number">10</span>, M = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, ans, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line">tot = ed;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, t, INF);</span><br><span class="line"><span class="built_in">add</span>(t, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, tot, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, t, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, t, INF);</span><br><span class="line"><span class="built_in">add</span>(t, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, tot, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, t, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1646&quot;&gt;P1646 [国家集训队]happiness&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>P6268 [SHOI2002]舞会</title>
    <link href="https://rusunoi.github.io/2021/11/17/P6268/"/>
    <id>https://rusunoi.github.io/2021/11/17/P6268/</id>
    <published>2021-11-17T07:11:26.000Z</published>
    <updated>2021-11-17T11:14:38.370Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6268">P6268 [SHOI2002]舞会</a></p><span id="more"></span><p>跳过舞的男生女生中只能选择一个，即至少割掉一个，直接最小割即可。</p><p>因为不确定男女，所以需要先染色。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">8e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, color[N], d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">color[x] = c;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!color[edg[i]])</span><br><span class="line"><span class="built_in">dfs</span>(edg[i], <span class="number">3</span> - c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a + <span class="number">1</span>, b + <span class="number">1</span>, INF);</span><br><span class="line"><span class="built_in">add</span>(b + <span class="number">1</span>, a + <span class="number">1</span>, INF);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!color[i])</span><br><span class="line"><span class="built_in">dfs</span>(i, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i++)</span><br><span class="line"><span class="keyword">if</span> (color[edg[i]] == <span class="number">1</span>)</span><br><span class="line">wt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (color[i] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P6268&quot;&gt;P6268 [SHOI2002]舞会&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="二分图" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>P5030 长脖子鹿放置</title>
    <link href="https://rusunoi.github.io/2021/11/17/P5030/"/>
    <id>https://rusunoi.github.io/2021/11/17/P5030/</id>
    <published>2021-11-17T07:02:47.000Z</published>
    <updated>2021-11-17T10:58:48.800Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5030">P5030 长脖子鹿放置</a></p><span id="more"></span><p>按照套路，先二分图染色，自己手玩，不难发现，一个格点与其所能到达的另一个格点的横（或纵）坐标的奇偶性相反，那么我们可以按行（或列）的奇偶性将这些格点分成两个集合。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span> + <span class="number">10</span>, M = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">8</span>] = &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">-3</span>, <span class="number">-3</span> &#125;,</span><br><span class="line">dy[<span class="number">8</span>] = &#123; <span class="number">3</span>, <span class="number">-3</span>, <span class="number">3</span>, <span class="number">-3</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, k, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">tot = n * m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = tot + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= k; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(a, b);</span><br><span class="line"><span class="keyword">if</span> (vis[t])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">vis[t] = <span class="literal">true</span>;</span><br><span class="line">tot--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (vis[t])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (i &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny) || vis[h])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P5030&quot;&gt;P5030 长脖子鹿放置&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="二分图" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>P2812 校园网络[USACO]Network of Schools加强版</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2812/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2812/</id>
    <published>2021-11-17T06:55:22.000Z</published>
    <updated>2021-11-17T11:03:26.560Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2812">P2812 校园网络[USACO]Network of Schools加强版</a></p><span id="more"></span><p>这是加强版，左转弱化版。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2812&quot;&gt;P2812 校园网络[USACO]Network of Schools加强版&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="tarjan" scheme="https://rusunoi.github.io/tags/tarjan/"/>
    
  </entry>
  
  <entry>
    <title>P2746 [USACO5.3]校园网Network of Schools</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2746/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2746/</id>
    <published>2021-11-17T06:48:07.000Z</published>
    <updated>2021-11-17T11:04:32.680Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2746">P2746 [USACO5.3]校园网Network of Schools</a></p><span id="more"></span><p>字任务 $A$：显然，答案为缩点后入度为 $0$ 的点。</p><p>字任务 $B$ ：至少添加多少边，使得所有点在同一强连通分量。不难发现，所有的点在同一强连通分量时，每个点都可以被到达，也都可以到达其他点，所以入度大于 $0$ ，出度大于 $0$ ，而增加一条边，即选择两个点，其中一个增加入度，其中一个增加出度，所以添加的边数即为入度为 $0$ 的点数和出度为 $0$ 的点数的最大值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">5e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, din[N], dout[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">int</span> cnt, timestamp, id[N], dfn[N], low[N];</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++timestamp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[edg[i]])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] == low[x])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">id[y] = cnt;</span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; a, a)</span><br><span class="line"><span class="built_in">add</span>(i, a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i])</span><br><span class="line"><span class="built_in">tarjan</span>(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line"><span class="keyword">if</span> (id[i] != id[edg[j]])</span><br><span class="line">&#123;</span><br><span class="line">dout[id[i]]++;</span><br><span class="line">din[id[edg[j]]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!din[i])</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span> (!dout[i])</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (cnt == <span class="number">1</span>)</span><br><span class="line">cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(x, y);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2746&quot;&gt;P2746 [USACO5.3]校园网Network of Schools&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="tarjan" scheme="https://rusunoi.github.io/tags/tarjan/"/>
    
  </entry>
  
  <entry>
    <title>SP2885 WORDRING - Word Rings</title>
    <link href="https://rusunoi.github.io/2021/11/17/SP2885/"/>
    <id>https://rusunoi.github.io/2021/11/17/SP2885/</id>
    <published>2021-11-17T05:50:57.000Z</published>
    <updated>2021-11-17T10:57:07.850Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/WORDRING/">SPOJ: WORDRING - Word Rings</a></p><p><a href="https://www.luogu.com.cn/problem/SP2885">LuoGu: SP2885 WORDRING - Word Rings</a></p><span id="more"></span><p>平均值，依然考虑分数规划。设当前二分平均值为 $x$ ，环中有 $k$ 个字符串，长度为 $w _ i$ ，则 $x$ 合法的条件为：<br>$$<br>\begin{aligned}<br>&amp; \frac {\sum _ {i = 1} ^ k w _ i} k \ge x \\<br>\Longrightarrow &amp; \sum _ {i = 1} ^ k w _ i \ge x k \\<br>\Longrightarrow &amp;  \sum _ {i = 1} ^ k w _ i \ge \sum _ {i = 1} ^ k x \\<br>\Longrightarrow &amp;  \sum _ {i = 1} ^ k w _ i - x \ge 0<br>\end{aligned}<br>$$<br>找正环即可。注意到 $n$ 的范围，如果暴力两两判断建边，时空复杂度是不可接受的。一个字符串的有效信息只有前两个字符和后两个字符，将这两组两个字符作为点，一个字符即开头两点到结尾两点的边。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">677</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N], need[N];</span><br><span class="line"><span class="keyword">double</span> d[N];</span><br><span class="line"><span class="keyword">int</span> n, cnt[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">d[i] = cnt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line"><span class="keyword">if</span> (need[i])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">vis[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + wt[i] - x &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + wt[i] - x;</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (++times &gt; <span class="number">1e4</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[edg[i]] &gt;= n * <span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">char</span> x, <span class="keyword">char</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = x - <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">b = y - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> a * <span class="number">26</span> + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> lth;</span><br><span class="line">string str;</span><br><span class="line"><span class="keyword">double</span> l, r, mid;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; n, n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line">lth = str.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span> (lth &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(str[<span class="number">0</span>], str[<span class="number">1</span>]),</span><br><span class="line">h = <span class="built_in">num</span>(str[lth - <span class="number">2</span>], str[lth - <span class="number">1</span>]);</span><br><span class="line">need[t] = need[h] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, lth);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">check</span>(<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No solution.&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">l = <span class="number">0</span>, r = N;</span><br><span class="line"><span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">l = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.spoj.com/problems/WORDRING/&quot;&gt;SPOJ: WORDRING - Word Rings&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/SP2885&quot;&gt;LuoGu: SP2885 WORDRING - Word Rings&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="二分" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
    <category term="分数规划" scheme="https://rusunoi.github.io/tags/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>P2868 [USACO07DEC]Sightseeing Cows G</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2868/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2868/</id>
    <published>2021-11-17T04:38:06.000Z</published>
    <updated>2021-11-17T11:03:05.360Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2868">P2868 [USACO07DEC]Sightseeing Cows G</a></p><span id="more"></span><p>每个边都有边权，每个点都有点权，题意即找到一个环，使得经过的点权和与边权和的比值最大，对于一个环，点数和边数一样，我们将所有的点权放在到达该点的边上，记点权为 $f _ i$ ，边权为 $w _ i$ ，经过了 $k$ 条边，则要使得 $\frac {\sum _ {i = 1} ^ k f _ i} {\sum _ {i = 1} ^ k w _ i}$  最大，考虑分数规划。</p><p>设当前二分平均值为 $x$ ，则 $x$ 合法的条件为：<br>$$<br>\begin{aligned}<br>&amp; \frac {\sum _ {i = 1} ^ k f _ i} {\sum _ {i = 1} ^ k w _ i}  \ge x\\<br>\Longrightarrow &amp; \sum _ {i = 1} ^ k f _ i \ge x \sum _ {i = 1} ^ k w _ i\\<br>\Longrightarrow &amp; \sum _ {i = 1} ^ k f _ i - x w _ i \ge 0\\<br>\end{aligned}<br>$$<br>即需要找到一个正环，所有点都可以作为起点，所以都放进队列里做 <code>spfa</code> 最长路即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">5e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">double</span> d[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, cnt[N], f[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">d[i] = cnt[i] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">vis[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[t]  - mid * wt[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[t] - mid * wt[i];</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[edg[i]] &gt;= n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; f[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> l = <span class="number">0</span>, r = N, mid;</span><br><span class="line"><span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">l = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, l);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2868&quot;&gt;P2868 [USACO07DEC]Sightseeing Cows G&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="二分" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
    <category term="分数规划" scheme="https://rusunoi.github.io/tags/%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>丧心病狂的网络流系列</title>
    <link href="https://rusunoi.github.io/2021/11/17/%E4%B8%A7%E5%BF%83%E7%97%85%E7%8B%82%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E7%B3%BB%E5%88%97/"/>
    <id>https://rusunoi.github.io/2021/11/17/%E4%B8%A7%E5%BF%83%E7%97%85%E7%8B%82%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E7%B3%BB%E5%88%97/</id>
    <published>2021-11-17T03:48:08.000Z</published>
    <updated>2021-11-17T08:47:52.780Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h2><p>网络流是一个很强大的算法，很多决策类问题都可以转化为网络流，获得不错的效果。</p><p>本系列收录一些正解并非网络流，但完全可以用网络流做的题目。</p><p>以下代码中模板省略。</p><span id="more"></span><h2 id="T1-P2996-USACO10NOV-Visiting-Cows-G-P1352-没有上司的舞会"><a href="#T1-P2996-USACO10NOV-Visiting-Cows-G-P1352-没有上司的舞会" class="headerlink" title="T1 P2996 [USACO10NOV]Visiting Cows G / P1352 没有上司的舞会"></a>T1 <a href="https://www.luogu.com.cn/problem/P2996">P2996 [USACO10NOV]Visiting Cows G</a> / <a href="https://www.luogu.com.cn/problem/P1352">P1352 没有上司的舞会</a></h2><p>这是经典的二选一的最小割模型。由于这张图是一棵树，所以一定能被染色为一个二分图。</p><p>由于题意要我们求最大数量，没有权值，所以将左部点向源点连一条流量为 $1$ 的边，右部点向汇点连一条流量为 $1$ 的边，中间，如果两个端点间有一条边，则在网络中连一条流量为 $inf$ 的边，表示不可割，最小割的意思是最少放弃的点的数量，用总点数减去最小割即为答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">color</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c[x] = k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line">        <span class="keyword">if</span> (!c[edg[i]])</span><br><span class="line">            <span class="built_in">color</span>(edg[i], <span class="number">3</span> - k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> net;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (tree::c[i] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = tree::hd[i]; ~j; j = tree::nxt[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, tree::edg[j], inf);</span><br><span class="line"><span class="built_in">add</span>(tree::edg[j], i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n - <span class="built_in">dinic</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效率不错。</p><h2 id="T2-P1650-田忌赛马"><a href="#T2-P1650-田忌赛马" class="headerlink" title="T2 P1650 田忌赛马"></a>T2 <a href="https://www.luogu.com.cn/problem/P1650">P1650 田忌赛马</a></h2><p>正解是贪心、动态规划，但由题面显然可知这可以用二分图的匹配做，匹配带权值，用费用流解决。</p><h3 id="Code-1-暴力"><a href="#Code-1-暴力" class="headerlink" title="Code#1 暴力"></a>Code#1 暴力</h3><p>直接两两连边。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">st = <span class="number">0</span>, ed = n &lt;&lt; <span class="number">2</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;A[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;B[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (A[i] != B[j])</span><br><span class="line">v = (A[i] &gt; B[j] ? <span class="number">1</span> : <span class="number">-1</span>) * <span class="number">200</span>;</span><br><span class="line"><span class="built_in">add</span>(i, j + n, <span class="number">1</span>, v);</span><br><span class="line"><span class="built_in">add</span>(j + n, i, <span class="number">0</span>, -v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">ek</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，边数将很大（$O(n ^ 2)$），效率很慢，同时空间比较卡，只能得 <code>40</code> 分，考虑优化。</p><h3 id="Code-2-合并流量"><a href="#Code-2-合并流量" class="headerlink" title="Code#2 合并流量"></a>Code#2 合并流量</h3><p>题目有限制，每一匹马的速度只有 <code>0-100</code> ，所以考虑离散化，将效果相同的点合并。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">A[a]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">B[a]++;</span><br><span class="line">&#125;</span><br><span class="line">st = <span class="number">0</span>, ed = A.<span class="built_in">size</span>() + B.<span class="built_in">size</span>() + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; i : A)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, ++l, i.second, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(l, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; i : B)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(++r + A.<span class="built_in">size</span>(), ed, i.second, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, r + A.<span class="built_in">size</span>(), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; i : A)</span><br><span class="line">&#123;</span><br><span class="line">++l;</span><br><span class="line">r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; j : B)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (i.first != j.first)</span><br><span class="line">v = (i.first &gt; j.first ? <span class="number">1</span> : <span class="number">-1</span>) * <span class="number">200</span>;</span><br><span class="line"><span class="built_in">add</span>(l, ++r + A.<span class="built_in">size</span>(), inf, v);</span><br><span class="line"><span class="built_in">add</span>(r + A.<span class="built_in">size</span>(), l, <span class="number">0</span>, -v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">ek</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>已经完全能通过此题了，并且和正解效率差距极小。</p><p>但是这是在马的速度极其特殊的情况下做的，我们考虑如何拓展。</p><h3 id="Code-3-线段树优化"><a href="#Code-3-线段树优化" class="headerlink" title="Code #3 线段树优化"></a>Code #3 线段树优化</h3><p>将两方马排序，当一方的马确定后，另一方的马一定可分为两个区间，一个区间的马都大于该马，另一区间的马都小于该马，或者还有一个刚好等于该马。一个点向区间的点连边，考虑线段树优化，边的数量的复杂度可降为 $O(n log{n})$ 。</p><p><em>待完成</em></p><h2 id="T3-P1004-NOIP2000-提高组-方格取数"><a href="#T3-P1004-NOIP2000-提高组-方格取数" class="headerlink" title="T3 P1004 [NOIP2000 提高组] 方格取数"></a>T3 <a href="https://www.luogu.com.cn/problem/P1004">P1004 [NOIP2000 提高组] 方格取数</a></h2><p><em>待完成</em></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概论&quot;&gt;&lt;a href=&quot;#概论&quot; class=&quot;headerlink&quot; title=&quot;概论&quot;&gt;&lt;/a&gt;概论&lt;/h2&gt;&lt;p&gt;网络流是一个很强大的算法，很多决策类问题都可以转化为网络流，获得不错的效果。&lt;/p&gt;
&lt;p&gt;本系列收录一些正解并非网络流，但完全可以用网络流做的题目。&lt;/p&gt;
&lt;p&gt;以下代码中模板省略。&lt;/p&gt;</summary>
    
    
    
    
    <category term="最大流" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
    <category term="待处理" scheme="https://rusunoi.github.io/tags/%E5%BE%85%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>CSP-S 2021</title>
    <link href="https://rusunoi.github.io/2021/11/17/CSP-S-2021/"/>
    <id>https://rusunoi.github.io/2021/11/17/CSP-S-2021/</id>
    <published>2021-11-17T01:05:02.000Z</published>
    <updated>2021-11-17T01:14:40.750Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CSP-S2021爆炸记"><a href="#CSP-S2021爆炸记" class="headerlink" title="CSP-S2021爆炸记"></a>CSP-S2021爆炸记</h1><span id="more"></span><p>蒟蒻第一次参加CSP-S，不必说，自然是炸了，机房还有 $A$ 了第一二题的巨佬 @mydcwfy，便更让蒟蒻瑟瑟发抖。</p><p>此刻，夜色已深，机房里的取得好成绩的巨佬们正在玩 <a href="generals.io">generals</a>，只留下蒟蒻一个人在默默地写下这篇记录蒟蒻在 $CSP-S2021$ 赛场上自闭的游记。</p><h2 id="Day-inf"><a href="#Day-inf" class="headerlink" title="$Day -inf$"></a>$Day -inf$</h2><p>蒟蒻在弱省弱校，自然并没有很好的教育资源，教练将视频发给大家，大家便开始卷。蒟蒻自然没法赶上巨佬，在学习进度上一直落后于巨佬们。最后一周晚上停课，从星期三下午开始全天停课，连着之前国庆节 $7$ 天，一直在考试，蒟蒻一次比一次考得差，在考试的前两天，一次考试中只得了 $35$ 分，直接自闭了，但是巨佬们依然稳定在两百多分，下一届是从小学开始学的，参加提高组的初三同学都过了初赛，而蒟蒻昨年连初赛都没过，我觉得我要被单调队列了。</p><h2 id="Day-0"><a href="#Day-0" class="headerlink" title="$Day 0$"></a>$Day 0$</h2><p>上午还在考试，考到中午食堂都没饭了，便去学校对面的商场里吃烤肉自助餐，导致今天上午肚子很痛，还好考试的时候没有发作。</p><p>下午去现场试机，三道图论题，一道很多巨佬都想出来的题，蒟蒻没有想到，只打了暴力。还好试机没有成绩，不然蒟蒻又要考前自闭了。</p><p>吃完饭到九点钟，在机房里听了一场 $Beyond$ 的演唱会。</p><p>晚上和托管的同学玩大富翁，玩了两局，都是第一个破产的，心情跌落到了谷底。他们聊天聊到了两点钟，蒟蒻没有睡好。</p><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day 1$"></a>$Day 1$</h2><p>早上边听歌边复习，感觉什么都没复习到，尝试把扫描线打出来，$WA$ 了，只有二十分，心想就摆烂了。</p><p>下午早早地到了考场，学校的门前放了宣传海报，所有人等着两点钟进考试，便只能看这个。机子和键盘还是蛮熟悉的，所以没有太紧张或好奇。</p><p>拿到题了之后，便开始看。虚拟机里面如所料的没有完整的 $vscode$ $c++$ 拓展，所以没法用，连基本的补全功能都没有，所以虚拟机的唯一用处便成了编译。</p><p>看到第一题，首先想到的是贪心 + 动态规划，但是想不出来怎么做，便先放一放，<code>n &lt;= 5000</code> 只有 $40$ 分，这个暴力分实在是给的太少了，磨磨蹭蹭终于横下心来放弃了想正解，就去看第二题了。</p><p>结果第二题更毒瘤，事实上，如果由符号 <code>*</code> 的题目，我们是之前练习过的，动态规划／记忆化搜索是完全线性时间可以做的，但是有了 <code>*</code> 之后，合法规则立刻变得十分复杂，最暴力的做法 $ 3 ^ n$ 的复杂度，只有 <code>15</code> 分，便再放一放，去看第三题。</p><p>第三题，感觉应该是有一些规律可以寻，因为一共只有 <code>n</code> 种数，每种数出现两次，当一个数的位置确定了，另一个一定是可以确定的，我的思路大概到此结束了，于是先把这个题放一放，去看第四题。</p><p>至此大概用了半小时。</p><p>我耐心地读完了第四题（后来才知道一些巨佬根本没有看这个题），想到的大概是类似于 <a href="https://www.luogu.com.cn/problem/P2598">P2598</a> 的模型，要计算所有黑点和白点交界的边的权值和的最小值，可以想象到，这些边一定将黑色和白色分割成若干部分，但其中一些权值是可以避免的，如果只分成为两部分，那么一些边可以节省，依然是合法的（即将一些颜色令为相同），那么我们就想到了将黑色和白色两种点切开，中间的边就是答案。便自然而然的想到了最小割（正在写的此刻完全不知道正解是什么，巨佬们不要嘲笑蒟蒻），将黑点和超级源点连边，白点和超级汇点连边，中间就是矩阵中的边，跑最小割（最大流）即可。大概在考试前几天，在完成随机绿题 $100$ 道，里面一道树形 $DP$ 的题我用了最小割，就恰巧复习道了网络流，于是我在考场两分钟就打出了正确的 $Dinic$ ，最开始用的 $vector$ 存边，因为有多组数据， $vector$ 可以方便地 $pop_back$ 但后面打网络流的时候想起了双向边编号 <code>^1</code> 的性质，<code>vector.pop_back</code> 就没法用了，所有最后的解决方案是存两张图。几个稍大的样例都可以过了，最后一个在 $Windows$ 下我自己数了要跑五六秒，心里有点悬（忘记可以开 $O2$），于是就在虚拟机又跑，想起开 $O2$ ，使用系统里的 <code>time</code> 命令，得到时间大概 <code>2.7</code> 秒左右，觉得可以接受了，就走了。</p><p>离考试开始过了一个半小时了。</p><p>回头看第三题，不想再想正解，就打了搜索。有一个优化，当一个数的位置确定了，与它相同的那个数的位置也可以确定了，如果搜索到结果不合法，直接结束，可以过“大样例”，觉得 <code>40pts</code> 可以水到。做了近一个小时。</p><p>第二题就直接放了，再看第一题，我猛然发现暴力的复杂度是 $n^3$ ，连 <code>40pts</code> 都拿不到了，枚举两种各分配多少个，枚举每个飞机，枚举所有可用的（那个东西叫什么记不到了），最后的枚举可以用堆优化，选择上个结束时间最小的，复杂度是 $n ^ 2 \log n$ 。半个小时打完就走了。</p><p>第二题太毒瘤了，即使是指数级的暴力我都不知道怎么判读一个串是否合法，就索性直接打表样例，如果不是样例输出 $3 ^ {num(?)} $ ，即随便填的方案。</p><h2 id="估分"><a href="#估分" class="headerlink" title="估分"></a>估分</h2><p>$ 20 - 40 + 0 + 20 - 40 + 80 - 100 = 120- 180$，这是在第四题是正确的情况下，虽然所有样例过了，但我依然觉得很悬。</p><p>各个网站的成绩</p><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th><th>D</th><th>Total</th></tr></thead><tbody><tr><td>LuoGu</td><td>40</td><td>0</td><td>40</td><td>100</td><td>180</td></tr><tr><td>INF</td><td>50</td><td>5</td><td>52</td><td>60</td><td>167</td></tr><tr><td>Hydro</td><td>60</td><td>0</td><td>40</td><td>100</td><td>200</td></tr><tr><td>YouDao</td><td>40</td><td>0</td><td>50</td><td>75</td><td>165</td></tr><tr><td>JiSuanKe</td><td>40</td><td>5</td><td>40</td><td>100</td><td>185</td></tr><tr><td><strong>Min</strong></td><td><strong>40</strong></td><td><strong>0</strong></td><td><strong>40</strong></td><td><strong>60</strong></td><td><strong>140</strong></td></tr><tr><td><strong>Ave</strong></td><td><strong>46</strong></td><td><strong>2</strong></td><td><strong>44.4</strong></td><td><strong>87</strong></td><td><strong>179.4</strong></td></tr></tbody></table><p>实际成绩：45 + 0 + 44 + 60 = 149</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;CSP-S2021爆炸记&quot;&gt;&lt;a href=&quot;#CSP-S2021爆炸记&quot; class=&quot;headerlink&quot; title=&quot;CSP-S2021爆炸记&quot;&gt;&lt;/a&gt;CSP-S2021爆炸记&lt;/h1&gt;</summary>
    
    
    
    
    <category term="游记" scheme="https://rusunoi.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>P2774 方格取数问题</title>
    <link href="https://rusunoi.github.io/2021/11/17/P2774/"/>
    <id>https://rusunoi.github.io/2021/11/17/P2774/</id>
    <published>2021-11-17T00:44:01.000Z</published>
    <updated>2021-11-17T11:03:36.390Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2774">P2774 方格取数问题</a></p><span id="more"></span><p>左转王者之剑。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">1e8</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2774&quot;&gt;P2774 方格取数问题&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="二分图" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>P4474 王者之剑</title>
    <link href="https://rusunoi.github.io/2021/11/17/P4474/"/>
    <id>https://rusunoi.github.io/2021/11/17/P4474/</id>
    <published>2021-11-17T00:27:01.000Z</published>
    <updated>2021-11-17T10:59:12.530Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4474">P4474 王者之剑</a></p><span id="more"></span><p>不难发现，如果取列一个位置的宝石，那么它周围四连通的位置的宝石都是不能取的，于是转化为最大点独立集问题。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">1e8</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P4474&quot;&gt;P4474 王者之剑&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
    <category term="二分图" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>P7368 [USACO05NOV]Asteroids G</title>
    <link href="https://rusunoi.github.io/2021/11/17/P7368/"/>
    <id>https://rusunoi.github.io/2021/11/17/P7368/</id>
    <published>2021-11-17T00:22:15.000Z</published>
    <updated>2021-11-17T10:57:56.160Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P7368">P7368 [USACO05NOV]Asteroids G</a></p><span id="more"></span><p>对于一个小行星，要么在行上消除它，要么在列上消除它，即一条边上至少取一个点，即最小点覆盖集。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">6e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, k, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i + n, ed, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="built_in">add</span>(a, b + n, INF);</span><br><span class="line">        <span class="built_in">add</span>(b + n, a, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P7368&quot;&gt;P7368 [USACO05NOV]Asteroids G&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>P3410 拍照</title>
    <link href="https://rusunoi.github.io/2021/11/17/P3410/"/>
    <id>https://rusunoi.github.io/2021/11/17/P3410/</id>
    <published>2021-11-17T00:19:08.000Z</published>
    <updated>2021-11-17T11:02:06.270Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3410">P3410 拍照</a></p><span id="more"></span><p>最大权闭合子图。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]] &amp;&amp; wt[i])</span><br><span class="line"><span class="built_in">dfs</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">tot += a;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!b)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">add</span>(i, b + m, INF);</span><br><span class="line"><span class="built_in">add</span>(b + m, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m + <span class="number">1</span>, a; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3410&quot;&gt;P3410 拍照&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
</feed>
