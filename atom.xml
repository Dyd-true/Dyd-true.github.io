<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RuSun&#39;s Blog</title>
  
  <subtitle>Good luck noip2021</subtitle>
  <link href="https://rusunoi.github.io/atom.xml" rel="self"/>
  
  <link href="https://rusunoi.github.io/"/>
  <updated>2021-11-22T03:09:14.000Z</updated>
  <id>https://rusunoi.github.io/</id>
  
  <author>
    <name>RuSun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NOIP 2021</title>
    <link href="https://rusunoi.github.io/2021/11/22/NOIP-2021/"/>
    <id>https://rusunoi.github.io/2021/11/22/NOIP-2021/</id>
    <published>2021-11-22T03:08:44.000Z</published>
    <updated>2021-11-22T03:09:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NOIP-2021-悲伤的故事"><a href="#NOIP-2021-悲伤的故事" class="headerlink" title="NOIP 2021 悲伤的故事"></a>NOIP 2021 悲伤的故事</h2><span id="more"></span><p>考后两天，情绪稍微还算稳定，来写这篇游记。我着实感觉前景太难了，看不到希望。@jklover 巨佬高考 $681$ $+$ $Ag$ 都不能读 $PEK$ 的计算机专业，真的不知道学 $OI$ 有什么前途，即使拿了银牌，又不能如何，况且我这样的蒟蒻对于银牌想都不敢想。最近的消息，一位初一在我们学校后来去其他学校的巨佬考上了新领军要去读 $THU$ 了；机房巨佬 @mydcwfy <code>noip</code> <code>300+</code> 了；蒟蒻我第一题都写挂了——我们都有光明的前途。</p><h3 id="Day-inf"><a href="#Day-inf" class="headerlink" title="$Day -inf$"></a>$Day -inf$</h3><p>每天的模拟赛早已把我击垮了，每天都在 $rank \quad n$ 和 $rank \quad n - 1$ 徘徊，一道题都不想改，毒瘤题，完全想不到。每天浑浑噩噩，尽量去做一些轻松的事情。大概在这段停课时间，我和两位机房巨佬建立了机房内网博客、 <code>smb</code> 共享系统和 <code>code server</code> ，全心全意为机房冲省队的巨佬 @mydcwfy 提供技术支持。在最后几天，用 <code>hexo</code> 建立了<a href="rusunoi.github.io">自己的博客</a>，然后就把之前所有写过的蓝题 $+$ 的题全部写在博客上面。大概我就是个废物，一点都不能再向前走一步了，$OI$ 太难了，以后直接去做运维，去当一个工人。</p><h3 id="Day-0"><a href="#Day-0" class="headerlink" title="$Day 0$"></a>$Day 0$</h3><p>考试前一天，因为在我们学校考试，早上被征用去考场安装软件和配置虚拟机，做机械的工作。做完后回到机房，继续写博客，听歌，有些人在玩 <code>generals</code> ，本来是想玩的，但是上次 <code>CSP</code> 前玩，被他们虐爆，考试也被虐，玩游戏也被虐，特别难受，就再也不想玩了。愈是考试的之前，我似乎愈是颓，因为真的被模拟赛击垮了。现在对于一等奖、省队、牌，根本不想了，唯一的希冀仿佛便是在高二停课前能还留在竞赛班，做自己愿意做的事情。我问自己学 $OI$ 的目的是什么，一年前可能答案是想去 $THU$ 或 $PEK$ ，但现在只有一个答案，仅仅是我热爱 $OI$ ，除此之外就真的没有了。最后高中毕业随便去一个不坏的大学的计算机专业混一混就算走上社会了。</p><h3 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day 1$"></a>$Day 1$</h3><p>带了很多吃的，也不紧张，开考前就在慢慢吃。第一题乍一看以为是一个数位 <code>DP</code> ，吓了一跳，因为我是完全不懂诶，但是把题读完发现就是一个筛，我怕埃氏筛要挂，就自己乱搞出了线性筛，但是要排序，所以复杂度还是 $O(n \log n)$ 的，不知道是否是正确的，反正大样例是过了，考场上一直害怕这道题哪里写挂了，前前后后的看，耽误了不少时间，即使这样，最后依然没有发现一个错误，就是 <code>1e7</code> 时答案为 <code>1e7 + 1</code> ，直接少 <code>30</code> 分，后来和同学交谈才知道，人都炸了。</p><p>第二题感觉暴力拿不到分，直接走了。</p><p>第三题，先推了方差的式子，然后就不知道怎么做了，乱写了一个贪心，每一次改变一个使答案降低最大的一个值，最后还是补了一个暴力，把 $n = 4$ 的分拿好。</p><p>写最后一题的时候还剩一个小时，就赶快写，好像中途什么时候就不准上厕所？？？离谱，但是在大多数人都要求上厕所的情况下，蒟蒻还是有幸上了厕所，回来之后轻松地打完了最后一题。考场的代码超级丑，我自己都看不下去的丑。</p><p>考试一结束，身边的巨佬就开始什么 <code>第一题是签到题</code> <code>第三题模拟退火</code> 之类的，感觉第一题大众分是 <code>100</code> ，我的后几题都不怎么拿得到分，就基本自闭了。</p><h3 id="Day-3"><a href="#Day-3" class="headerlink" title="$Day 3$"></a>$Day 3$</h3><p>也就是现在，我正坐在机房，很令人伤心的是，高二的巨佬们已经不在机房了，大概是要看 <code>noip</code> 成绩来决定后路吧，明年的这个时候就是我们了，可我依然看不到前途。</p><p>去洛谷跑了分，$100+0+28+24 = 152$ ，第三题的数据还是太水了。</p><p>小图灵的分数是 <code>160</code> ，上面估计的分数线是 <code>171</code> ，那么就要看 <code>ccf</code> 的一、三题数据水不水了，反正我是不想了。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;NOIP-2021-悲伤的故事&quot;&gt;&lt;a href=&quot;#NOIP-2021-悲伤的故事&quot; class=&quot;headerlink&quot; title=&quot;NOIP 2021 悲伤的故事&quot;&gt;&lt;/a&gt;NOIP 2021 悲伤的故事&lt;/h2&gt;</summary>
    
    
    
    
    <category term="游记" scheme="https://rusunoi.github.io/tags/%E6%B8%B8%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>P3380 【模板】二逼平衡树（树套树）</title>
    <link href="https://rusunoi.github.io/2021/11/22/P3380/"/>
    <id>https://rusunoi.github.io/2021/11/22/P3380/</id>
    <published>2021-11-22T02:08:39.000Z</published>
    <updated>2021-11-22T02:11:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3380">P3380 【模板】二逼平衡树（树套树）</a></p><span id="more"></span><p>线段树套平衡树的板子，每一个线段树区间都建一棵平衡树。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, idx, w[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BST</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">2</span>], v, p, sz;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v = a;</span><br><span class="line">p = b;</span><br><span class="line">sz = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;tr[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SEG</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r, rt;</span><br><span class="line">&#125;seg[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y;</span><br><span class="line">tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span> <span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">rt = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span> <span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">p = u;</span><br><span class="line">u = tr[u].s[v &gt; tr[u].v];</span><br><span class="line">&#125;</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[v &gt; tr[p].v] = u;</span><br><span class="line">tr[u].<span class="built_in">init</span>(v, p);</span><br><span class="line"><span class="built_in">splay</span>(rt, u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_k</span> <span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &lt; v)</span><br><span class="line">&#123;</span><br><span class="line">res += tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span> <span class="params">(<span class="keyword">int</span> &amp;rt, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v == x)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &lt; x)</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(rt, u, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> l = tr[u].s[<span class="number">0</span>], r = tr[u].s[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (tr[l].s[<span class="number">1</span>])</span><br><span class="line">l = tr[l].s[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (tr[r].s[<span class="number">0</span>])</span><br><span class="line">r = tr[r].s[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">splay</span>(rt, l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(rt, r, l);</span><br><span class="line">tr[r].s[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">pushup</span>(r);</span><br><span class="line"><span class="built_in">pushup</span>(l);</span><br><span class="line"><span class="built_in">insert</span>(rt, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">seg[x].l = l;</span><br><span class="line">seg[x].r = r;</span><br><span class="line"><span class="built_in">insert</span>(seg[x].rt, -inf);</span><br><span class="line"><span class="built_in">insert</span>(seg[x].rt, inf);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l; i &lt;= r; i++)</span><br><span class="line"><span class="built_in">insert</span>(seg[x].rt, w[i]);</span><br><span class="line"><span class="keyword">if</span> (l == r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(x &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_rank</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (seg[x].l &gt;= l &amp;&amp; seg[x].r &lt;= r)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">get_k</span>(seg[x].rt, k) - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> mid = seg[x].l + seg[x].r &gt;&gt; <span class="number">1</span>, res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid)</span><br><span class="line">res += <span class="built_in">get_rank</span>(x &lt;&lt; <span class="number">1</span>, l, r, k);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid)</span><br><span class="line">res += <span class="built_in">get_rank</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, k);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> p, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">update</span>(seg[x].rt, w[p], k);</span><br><span class="line"><span class="keyword">if</span> (seg[x].l == seg[x].r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> mid = seg[x].l + seg[x].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (p &lt;= mid)</span><br><span class="line"><span class="built_in">modify</span>(x &lt;&lt; <span class="number">1</span>, p, k);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">modify</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, p, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_pre</span> <span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res = -inf;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &lt; v)</span><br><span class="line">&#123;</span><br><span class="line">res = <span class="built_in">max</span>(res, tr[u].v);</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_nxt</span> <span class="params">(<span class="keyword">int</span> rt, <span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res = inf;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &gt; v)</span><br><span class="line">&#123;</span><br><span class="line">res = <span class="built_in">min</span>(res, tr[u].v);</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pre</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (seg[x].l &gt;= l &amp;&amp; seg[x].r &lt;= r)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">get_pre</span>(seg[x].rt, k);</span><br><span class="line"><span class="keyword">int</span> mid = seg[x].l + seg[x].r &gt;&gt; <span class="number">1</span>, res = -inf;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid)</span><br><span class="line">res = <span class="built_in">max</span>(res, <span class="built_in">pre</span>(x &lt;&lt; <span class="number">1</span>, l, r, k));</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid)</span><br><span class="line">res = <span class="built_in">max</span>(res, <span class="built_in">pre</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, k));</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nxt</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (seg[x].l &gt;= l &amp;&amp; seg[x].r &lt;= r)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">get_nxt</span>(seg[x].rt, k);</span><br><span class="line"><span class="keyword">int</span> mid = seg[x].l + seg[x].r &gt;&gt; <span class="number">1</span>, res = inf;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid)</span><br><span class="line">res = <span class="built_in">min</span>(res, <span class="built_in">nxt</span>(x &lt;&lt; <span class="number">1</span>, l, r, k));</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid)</span><br><span class="line">res = <span class="built_in">min</span>(res, <span class="built_in">nxt</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, k));</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; w[i];</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> op, a, b, c;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">cout &lt;&lt; <span class="built_in">get_rank</span>(<span class="number">1</span>, a, b, c) + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = inf;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> mid  = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">get_rank</span>(<span class="number">1</span>, a, b, mid) + <span class="number">1</span> &lt;= c)</span><br><span class="line">l = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r = mid - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; r &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">modify</span>(<span class="number">1</span>, a, b);</span><br><span class="line">w[a] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">cout &lt;&lt; <span class="built_in">pre</span>(<span class="number">1</span>, a, b, c) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">5</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">cout &lt;&lt; <span class="built_in">nxt</span>(<span class="number">1</span>, a, b, c) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3380&quot;&gt;P3380 【模板】二逼平衡树（树套树）&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
    <category term="线段树" scheme="https://rusunoi.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
    <category term="树套树" scheme="https://rusunoi.github.io/tags/%E6%A0%91%E5%A5%97%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2042 [NOI2005] 维护数列</title>
    <link href="https://rusunoi.github.io/2021/11/22/P2042/"/>
    <id>https://rusunoi.github.io/2021/11/22/P2042/</id>
    <published>2021-11-22T02:04:36.000Z</published>
    <updated>2021-11-22T02:06:02.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2042">P2042 [NOI2005] 维护数列</a></p><span id="more"></span><p>毒瘤题，按照题意慢慢写就是了。这里需要空间回收，用一个队列维护可用空间。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX / 2</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">2</span>], p, v;</span><br><span class="line"><span class="keyword">int</span> rev, same;</span><br><span class="line"><span class="keyword">int</span> sz, sum, ms, ls, rs;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">s[<span class="number">0</span>] = s[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">sum = v = ms = ls = rs = a;</span><br><span class="line">p = b;</span><br><span class="line">rev = same = <span class="number">0</span>;</span><br><span class="line">sz = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; tr[N];</span><br><span class="line"><span class="keyword">int</span> rt, w[N];</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node &amp;u = tr[x], &amp;l = tr[u.s[<span class="number">0</span>]], &amp;r = tr[u.s[<span class="number">1</span>]];</span><br><span class="line">u.sz = l.sz + r.sz + <span class="number">1</span>;</span><br><span class="line">u.sum = l.sum + r.sum + u.v;</span><br><span class="line">u.ls = <span class="built_in">max</span>(l.ls, l.sum + u.v + r.ls);</span><br><span class="line">u.rs = <span class="built_in">max</span>(r.rs, r.sum + u.v + l.rs);</span><br><span class="line">u.ms = <span class="built_in">max</span>(<span class="built_in">max</span>(l.ms, r.ms), l.rs + u.v + r.ls);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Node &amp;u = tr[x], &amp;l = tr[u.s[<span class="number">0</span>]], &amp;r = tr[u.s[<span class="number">1</span>]];</span><br><span class="line"><span class="keyword">if</span> (u.same)</span><br><span class="line">&#123;</span><br><span class="line">u.same = u.rev = <span class="number">0</span>;</span><br><span class="line">l.same = r.same = <span class="number">1</span>;</span><br><span class="line">l.v = r.v = u.v;</span><br><span class="line">l.sum = l.v * l.sz;</span><br><span class="line">r.sum = r.v * r.sz;</span><br><span class="line"><span class="keyword">if</span> (u.v &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">l.ms = l.ls = l.rs = l.sum;</span><br><span class="line">r.ms = r.ls = r.rs = r.sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">l.ms = l.v;</span><br><span class="line">r.ms = r.v;</span><br><span class="line">l.ls = l.rs = r.ls = r.rs = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (u.rev)</span><br><span class="line">&#123;</span><br><span class="line">u.rev = <span class="number">0</span>;</span><br><span class="line">l.rev ^= <span class="number">1</span>;</span><br><span class="line">r.rev ^= <span class="number">1</span>;</span><br><span class="line"><span class="built_in">swap</span>(l.ls, l.rs);</span><br><span class="line"><span class="built_in">swap</span>(r.ls, r.rs);</span><br><span class="line"><span class="built_in">swap</span>(l.s[<span class="number">0</span>], l.s[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">swap</span>(r.s[<span class="number">0</span>], r.s[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y;</span><br><span class="line">tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">rt = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_k</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz &gt;= k)</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span> == k)</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">k -= tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">build</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">tr[t].<span class="built_in">init</span>(w[mid], p);</span><br><span class="line"><span class="keyword">if</span> (l &lt; mid)</span><br><span class="line">tr[t].s[<span class="number">0</span>] = <span class="built_in">build</span>(l, mid - <span class="number">1</span>, t);</span><br><span class="line"><span class="keyword">if</span> (mid &lt; r)</span><br><span class="line">tr[t].s[<span class="number">1</span>] = <span class="built_in">build</span>(mid + <span class="number">1</span>, r, t);</span><br><span class="line"><span class="built_in">pushup</span>(t);</span><br><span class="line"><span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].s[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">dfs</span>(tr[x].s[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span> (tr[x].s[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">dfs</span>(tr[x].s[<span class="number">1</span>]);</span><br><span class="line">q.<span class="built_in">push</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">tr[<span class="number">0</span>].ms = -inf;</span><br><span class="line">w[<span class="number">0</span>] = w[n + <span class="number">1</span>] = -inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; w[i];</span><br><span class="line">rt = <span class="built_in">build</span>(<span class="number">0</span>, n + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">char</span> op[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">&quot;INSERT&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos, tot;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; tot;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; tot; i++)</span><br><span class="line">cin &gt;&gt; w[i];</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">get_k</span>(pos + <span class="number">1</span>), r = <span class="built_in">get_k</span>(pos + <span class="number">2</span>);</span><br><span class="line"><span class="built_in">splay</span>(l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(r, l);</span><br><span class="line">tr[r].s[<span class="number">0</span>] = <span class="built_in">build</span>(<span class="number">0</span>, tot - <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(r);</span><br><span class="line"><span class="built_in">pushup</span>(l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">&quot;DELETE&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos, tot;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; tot;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">get_k</span>(pos), r = <span class="built_in">get_k</span>(pos + tot + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">splay</span>(l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(r, l);</span><br><span class="line"><span class="built_in">dfs</span>(tr[r].s[<span class="number">0</span>]);</span><br><span class="line">tr[r].s[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">pushup</span>(r);</span><br><span class="line"><span class="built_in">pushup</span>(l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">&quot;MAKE-SAME&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos, tot, c;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; tot &gt;&gt; c;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">get_k</span>(pos), r = <span class="built_in">get_k</span>(pos + tot + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">splay</span>(l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(r, l);</span><br><span class="line">Node &amp;son = tr[tr[r].s[<span class="number">0</span>]];</span><br><span class="line">son.same = <span class="number">1</span>;</span><br><span class="line">son.v = c;</span><br><span class="line">son.sum = c * son.sz;</span><br><span class="line"><span class="keyword">if</span> (c &gt; <span class="number">0</span>)</span><br><span class="line">son.ms = son.ls = son.rs = son.sum;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">son.ms = c;</span><br><span class="line">son.ls = son.rs = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushup</span>(r);</span><br><span class="line"><span class="built_in">pushup</span>(l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">&quot;REVERSE&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos, tot;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; tot;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">get_k</span>(pos), r = <span class="built_in">get_k</span>(pos + tot + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">splay</span>(l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(r, l);</span><br><span class="line">Node &amp;son = tr[tr[r].s[<span class="number">0</span>]];</span><br><span class="line">son.rev ^= <span class="number">1</span>;</span><br><span class="line"><span class="built_in">swap</span>(son.ls, son.rs);</span><br><span class="line"><span class="built_in">swap</span>(son.s[<span class="number">0</span>], son.s[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">pushup</span>(r);</span><br><span class="line"><span class="built_in">pushup</span>(l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(op, <span class="string">&quot;GET-SUM&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pos, tot;</span><br><span class="line">cin &gt;&gt; pos &gt;&gt; tot;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">get_k</span>(pos), r = <span class="built_in">get_k</span>(pos + tot + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">splay</span>(l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(r, l);</span><br><span class="line">cout &lt;&lt; tr[tr[r].s[<span class="number">0</span>]].sum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; tr[rt].ms &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2042&quot;&gt;P2042 [NOI2005] 维护数列&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2894 [USACO08FEB]Hotel G</title>
    <link href="https://rusunoi.github.io/2021/11/22/P2894/"/>
    <id>https://rusunoi.github.io/2021/11/22/P2894/</id>
    <published>2021-11-22T01:58:53.000Z</published>
    <updated>2021-11-22T01:59:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2894">P2894 [USACO08FEB]Hotel G</a></p><span id="more"></span><p>类似最大子段和的维护，只是所有权值都为 $1$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> l, r, ls, rs, s, mark;</span><br><span class="line">&#125;tr[N &lt;&lt; <span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].s = <span class="built_in">max</span>(<span class="built_in">max</span>(tr[x &lt;&lt; <span class="number">1</span>].s, tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].s), tr[x &lt;&lt; <span class="number">1</span>].rs + tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].ls);</span><br><span class="line"><span class="keyword">if</span> (tr[x &lt;&lt; <span class="number">1</span>].s == tr[x &lt;&lt; <span class="number">1</span>].r - tr[x &lt;&lt; <span class="number">1</span>].l + <span class="number">1</span>)</span><br><span class="line">tr[x].ls = tr[x &lt;&lt; <span class="number">1</span>].s + tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].ls;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tr[x].ls = tr[x &lt;&lt; <span class="number">1</span>].ls;</span><br><span class="line"><span class="keyword">if</span> (tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].s == tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].r - tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].l + <span class="number">1</span>)</span><br><span class="line">tr[x].rs = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].s + tr[x &lt;&lt; <span class="number">1</span>].rs;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tr[x].rs = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].rs;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].l == tr[x].r)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (tr[x].mark == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">tr[x &lt;&lt; <span class="number">1</span>].ls = tr[x &lt;&lt; <span class="number">1</span>].rs = tr[x &lt;&lt; <span class="number">1</span>].s = <span class="number">0</span>;</span><br><span class="line">tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].ls = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].rs = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].s = <span class="number">0</span>;</span><br><span class="line">tr[x &lt;&lt; <span class="number">1</span>].mark = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].mark = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[x].mark == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">tr[x &lt;&lt; <span class="number">1</span>].ls = tr[x &lt;&lt; <span class="number">1</span>].rs = tr[x &lt;&lt; <span class="number">1</span>].s = tr[x &lt;&lt; <span class="number">1</span>].r - tr[x &lt;&lt; <span class="number">1</span>].l + <span class="number">1</span>;</span><br><span class="line">tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].ls = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].rs = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].s = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].r - tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].l + <span class="number">1</span>;</span><br><span class="line">tr[x &lt;&lt; <span class="number">1</span>].mark = tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].mark = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">tr[x].mark = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].l = l;</span><br><span class="line">tr[x].r = r;</span><br><span class="line"><span class="keyword">if</span> (l == r)</span><br><span class="line">&#123;</span><br><span class="line">tr[x].ls = tr[x].rs = tr[x].s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">build</span>(x &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line"><span class="built_in">build</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(x);</span><br><span class="line"><span class="keyword">if</span> (tr[x].l == tr[x].r)</span><br><span class="line"><span class="keyword">return</span> tr[x].l;</span><br><span class="line"><span class="keyword">int</span> mid = tr[x].l + tr[x].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (tr[x &lt;&lt; <span class="number">1</span>].s &gt;= k)</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">query</span>(x &lt;&lt; <span class="number">1</span>, k);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[x &lt;&lt; <span class="number">1</span>].rs + tr[x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>].ls &gt;= k)</span><br><span class="line"><span class="keyword">return</span> tr[x &lt;&lt; <span class="number">1</span>].r - tr[x &lt;&lt; <span class="number">1</span>].rs + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">query</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].l &gt;= l &amp;&amp; tr[x].r &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">1</span>)</span><br><span class="line">tr[x].ls = tr[x].rs = tr[x].s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tr[x].ls = tr[x].rs = tr[x].s = tr[x].r - tr[x].l + <span class="number">1</span>;</span><br><span class="line">tr[x].mark = k;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">pushdown</span>(x);</span><br><span class="line"><span class="keyword">int</span> mid = tr[x].l + tr[x].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &lt;= mid)</span><br><span class="line"><span class="built_in">modify</span>(x &lt;&lt; <span class="number">1</span>, l, r, k);</span><br><span class="line"><span class="keyword">if</span> (r &gt; mid)</span><br><span class="line"><span class="built_in">modify</span>(x &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, l, r, k);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> op, a, b;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (tr[<span class="number">1</span>].s &lt; a)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">0</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">query</span>(<span class="number">1</span>, a);</span><br><span class="line">cout &lt;&lt; t &lt;&lt; endl;</span><br><span class="line"><span class="built_in">modify</span>(<span class="number">1</span>, t, t + a - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">modify</span>(<span class="number">1</span>, a, a + b - <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2894&quot;&gt;P2894 [USACO08FEB]Hotel G&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="线段树" scheme="https://rusunoi.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P3033 [USACO11NOV]Cow Steeplechase G</title>
    <link href="https://rusunoi.github.io/2021/11/22/P3033/"/>
    <id>https://rusunoi.github.io/2021/11/22/P3033/</id>
    <published>2021-11-22T01:55:11.000Z</published>
    <updated>2021-11-22T01:57:28.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3033">P3033 [USACO11NOV]Cow Steeplechase G</a></p><span id="more"></span><p>横的线段只与横的线段相交，竖的线段只与竖的线段相交，所以可以看做一个二分图。相交的线段只能选一个，最小割即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">260</span>, M = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">bool</span> dir;</span><br><span class="line"><span class="keyword">int</span> x1, y1, x2, y2;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line"><span class="keyword">if</span> (x1 &gt; x2)</span><br><span class="line"><span class="built_in">swap</span>(x1, x2);</span><br><span class="line"><span class="keyword">if</span> (y1 &gt; y2)</span><br><span class="line"><span class="built_in">swap</span>(y1, y2);</span><br><span class="line"><span class="keyword">if</span> (x1 == x2)</span><br><span class="line">dir = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">dir = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;points[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i &amp;&amp; res &lt;= limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">points[i].<span class="built_in">input</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (points[i].dir)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (!points[j].dir &amp;&amp; points[i].x1 &gt;= points[j].x1 &amp;&amp; points[i].x1 &lt;= points[j].x2 &amp;&amp; points[j].y1 &gt;= points[i].y1 &amp;&amp; points[j].y1 &lt;= points[i].y2)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, j, inf);</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!points[i].dir)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3033&quot;&gt;P3033 [USACO11NOV]Cow Steeplechase G&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最小割" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%B0%8F%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>P2234 [HNOI2002]营业额统计</title>
    <link href="https://rusunoi.github.io/2021/11/22/P2234/"/>
    <id>https://rusunoi.github.io/2021/11/22/P2234/</id>
    <published>2021-11-22T01:52:37.000Z</published>
    <updated>2021-11-22T01:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2234">P2234 [HNOI2002]营业额统计</a></p><span id="more"></span><p>查询前驱后继即可，甚至可以 <code>STL</code> 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span> + <span class="number">10</span>, inf = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">int</span> n, rt, idx;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> v, p, sz, s[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v = a;</span><br><span class="line">p = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;tr[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y;</span><br><span class="line">tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">rt = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span> <span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">p = u;</span><br><span class="line">u = tr[u].s[v &gt; tr[u].v];</span><br><span class="line">&#125;</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[v &gt; tr[p].v] = u;</span><br><span class="line">tr[u].<span class="built_in">init</span>(v, p);</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_pre</span> <span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line"><span class="keyword">if</span> (tr[u].v == v)</span><br><span class="line"><span class="keyword">return</span> v;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[u].v &gt;= v)</span><br><span class="line">&#123;</span><br><span class="line">res = tr[u].v;</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_nxt</span> <span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line"><span class="keyword">if</span> (tr[u].v == v)</span><br><span class="line"><span class="keyword">return</span> v;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[u].v &lt; v)</span><br><span class="line">&#123;</span><br><span class="line">res = tr[u].v;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">insert</span>(inf);</span><br><span class="line"><span class="built_in">insert</span>(-inf);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">res += a;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">res += <span class="built_in">min</span>(<span class="built_in">abs</span>(<span class="built_in">get_pre</span>(a) - a), <span class="built_in">abs</span>(<span class="built_in">get_nxt</span>(a) - a));</span><br><span class="line"><span class="built_in">insert</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2234&quot;&gt;P2234 [HNOI2002]营业额统计&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P3224 [HNOI2012]永无乡</title>
    <link href="https://rusunoi.github.io/2021/11/22/P3224/"/>
    <id>https://rusunoi.github.io/2021/11/22/P3224/</id>
    <published>2021-11-22T01:43:33.000Z</published>
    <updated>2021-11-22T01:45:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3224">P3224 [HNOI2012]永无乡</a></p><span id="more"></span><p>连通性可以用并查集维护，对于每一个连通块，维护一棵平衡树，合并时暴力递归插入即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, idx, p[N], rt[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> p, v, id, sz, s[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v = a;</span><br><span class="line">id = b;</span><br><span class="line">p = c;</span><br><span class="line">sz = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;tr[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fa</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x == p[x] ? x : p[x] = <span class="built_in">fa</span>(p[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y;</span><br><span class="line">tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">rt[b] = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> id, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt[b], p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">p = u;</span><br><span class="line">u = tr[u].s[v &gt; tr[u].v];</span><br><span class="line">&#125;</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[v &gt; tr[p].v] = u;</span><br><span class="line">tr[u].<span class="built_in">init</span>(v, id, p);</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_k</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt[b];</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz &gt;= k)</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span> == k)</span><br><span class="line"><span class="keyword">return</span> tr[u].id;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">k -= tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].s[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">dfs</span>(tr[x].s[<span class="number">0</span>], b);</span><br><span class="line"><span class="keyword">if</span> (tr[x].s[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">dfs</span>(tr[x].s[<span class="number">1</span>], b);</span><br><span class="line"><span class="built_in">insert</span>(tr[x].v, tr[x].id, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">p[i] = rt[i] = i;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tr[i].<span class="built_in">init</span>(a, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">idx = n;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">a = <span class="built_in">fa</span>(a);</span><br><span class="line">b = <span class="built_in">fa</span>(b);</span><br><span class="line"><span class="keyword">if</span> (a != b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[rt[a]].sz &gt; tr[rt[b]].sz)</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"><span class="built_in">dfs</span>(rt[a], b);</span><br><span class="line">p[a] = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> op[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">a = <span class="built_in">fa</span>(a);</span><br><span class="line">b = <span class="built_in">fa</span>(b);</span><br><span class="line"><span class="keyword">if</span> (a != b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[rt[a]].sz &gt; tr[rt[b]].sz)</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line"><span class="built_in">dfs</span>(rt[a], b);</span><br><span class="line">p[a] = b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a = <span class="built_in">fa</span>(a);</span><br><span class="line"><span class="keyword">if</span> (tr[rt[a]].sz &lt; b)</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">get_k</span>(b, a) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3224&quot;&gt;P3224 [HNOI2012]永无乡&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
    <category term="并查集" scheme="https://rusunoi.github.io/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>P1486 [NOI2004] 郁闷的出纳员</title>
    <link href="https://rusunoi.github.io/2021/11/22/P1486/"/>
    <id>https://rusunoi.github.io/2021/11/22/P1486/</id>
    <published>2021-11-22T01:38:41.000Z</published>
    <updated>2021-11-22T01:40:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1486">P1486 [NOI2004] 郁闷的出纳员</a></p><span id="more"></span><p>平衡树维护，对于操作 <code>I</code> ，新建一个节点；对于操作 <code>F</code> ，查询第 $k$ 大数。都是平衡树的基本操作。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, rt, idx, delta;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">2</span>], p, v, sz;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v = a;</span><br><span class="line">p = b;</span><br><span class="line">sz = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;tr[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y;</span><br><span class="line">tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">rt = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">p = u;</span><br><span class="line">u = tr[u].s[v &gt; tr[u].v];</span><br><span class="line">&#125;</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[v &gt; tr[p].v] = u;</span><br><span class="line">tr[u].<span class="built_in">init</span>(v, p);</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &gt;= v)</span><br><span class="line">&#123;</span><br><span class="line">res = u;</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_k</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz &gt;= k)</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span> == k)</span><br><span class="line"><span class="keyword">return</span> tr[u].v;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">k -= tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">int</span> L = <span class="built_in">insert</span>(-inf), R = <span class="built_in">insert</span>(inf);</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> op[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line">cin &gt;&gt; op &gt;&gt; k;</span><br><span class="line"><span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;I&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k &gt;= m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">insert</span>(k - delta);</span><br><span class="line">tot++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">delta += k;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;S&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">delta -= k;</span><br><span class="line">R = <span class="built_in">get</span>(m - delta);</span><br><span class="line"><span class="built_in">splay</span>(R, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(L, R);</span><br><span class="line">tr[L].s[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">pushup</span>(L);</span><br><span class="line"><span class="built_in">pushup</span>(R);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[rt].sz - <span class="number">2</span> &lt; k)</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">get_k</span>(tr[rt].sz - k);</span><br><span class="line"><span class="keyword">if</span> (~t)</span><br><span class="line">cout &lt;&lt; t + delta &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="number">-1</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - (tr[rt].sz - <span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1486&quot;&gt;P1486 [NOI2004] 郁闷的出纳员&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2568 GCD</title>
    <link href="https://rusunoi.github.io/2021/11/22/P2568/"/>
    <id>https://rusunoi.github.io/2021/11/22/P2568/</id>
    <published>2021-11-22T01:07:55.000Z</published>
    <updated>2021-11-22T01:38:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2568">P2568 GCD</a></p><span id="more"></span><p>对于每一个素数 $p$ ，对答案的贡献为：<br>$$<br>\begin{aligned}<br>&amp;\sum _ {i = 1} ^ n \sum _ {j = 1} ^ n [gcd(i, j) = p]\\<br>=&amp; \sum _ {i = 1} ^ n \sum _ {j = 1} ^ n \sum _ {d | gcd(\left \lfloor \frac i p\right \rfloor, \left \lfloor \frac j p\right \rfloor)} \mu (d)\\<br>=&amp; \sum _ {i = 1} ^ \left \lfloor \frac n p\right \rfloor \sum _ {j = 1} ^ \left \lfloor \frac n p\right \rfloor \sum _ {d | i \wedge  d | j} \mu (d)\\<br>=&amp; \sum _ {d = 1} ^ \left \lfloor \frac n p\right \rfloor \mu (d) \sum _ {i = 1} ^ \left \lfloor \frac n p\right \rfloor [d |i] \sum _ {i = 1} ^ \left \lfloor \frac n p\right \rfloor [d |j]\\<br>=&amp; \sum _ {d = 1} ^ \left \lfloor \frac n p\right \rfloor \mu (d) \left \lfloor \frac n {pd} \right \rfloor ^ 2\\<br>\end{aligned}<br>$$<br>筛出所有质数，同时筛出 $\mu$ 并预处理前缀和，询问时可以数论分块。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> cnt, primes[N], mu[N];</span><br><span class="line">LL s[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[i])</span><br><span class="line">&#123;</span><br><span class="line">primes[++cnt] = i;</span><br><span class="line">mu[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * primes[j] &lt; N; j++)</span><br><span class="line">&#123;</span><br><span class="line">vis[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">mu[primes[j] * i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">mu[primes[j] * i] = -mu[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">s[i] = s[i - <span class="number">1</span>] + mu[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">LL res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; primes[i] &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= n / primes[i]; l = r + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = n / (n / l);</span><br><span class="line">res += (s[r] - s[l - <span class="number">1</span>]) * (LL)(n / primes[i] / l) * (LL)(n / primes[i] / l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld&quot;</span>, res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2568&quot;&gt;P2568 GCD&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="数学" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="数论分块" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97/"/>
    
    <category term="莫反和积性函数" scheme="https://rusunoi.github.io/tags/%E8%8E%AB%E5%8F%8D%E5%92%8C%E7%A7%AF%E6%80%A7%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>高斯消元模板</title>
    <link href="https://rusunoi.github.io/2021/11/19/Gaussian-Elimination-Template/"/>
    <id>https://rusunoi.github.io/2021/11/19/Gaussian-Elimination-Template/</id>
    <published>2021-11-19T13:51:41.000Z</published>
    <updated>2021-11-19T13:58:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>用于求多元一次方程组的解。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-4</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> A[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Gauss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> c = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (; c &lt; n; c++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = r;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[i][c]) &gt; <span class="built_in">fabs</span>(A[t][c]))</span><br><span class="line">t = i;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[t][c]) &lt; eps)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = c; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">swap</span>(A[t][i], A[r][i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &gt;= c; i--)</span><br><span class="line">A[r][i] /= A[r][c];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[i][c]) &gt; eps)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n; j &gt;= c; j--)</span><br><span class="line">A[i][j] -= A[r][j] * A[i][c];</span><br><span class="line">r++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (r &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = r; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(A[i][n]) &gt; eps)</span><br><span class="line"><span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; ++j)</span><br><span class="line">A[i][n] -= A[i][j] * A[j][n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">cin &gt;&gt; A[i][j];</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">Gauss</span>();</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, A[i][n]);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No Solution&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;用于求多元一次方程组的解。&lt;/p&gt;</summary>
    
    
    
    
    <category term="模板" scheme="https://rusunoi.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="数学" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="高斯消元" scheme="https://rusunoi.github.io/tags/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>P2158 [SDOI2008] 仪仗队</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2158/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2158/</id>
    <published>2021-11-19T12:36:36.000Z</published>
    <updated>2021-11-22T01:06:08.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2158">P2158 [SDOI2008] 仪仗队</a></p><span id="more"></span><p>好像可以直接推导用 $\varphi$ 做的，当时好像也是这么做的，现在直接莫反。</p><p>除去 $(1, 0)$ 和 $(0, 1)$ 两点，剩下的点数中，如果横纵坐标不互质，那么一定有一个坐标把它挡住，故答案为：<br>$$<br>\begin{aligned}<br>&amp;\sum _ {i = 1} ^ {n - 1} \sum _ {j = 1} ^ {n - 1}[gcd(i, j) = 1]\\<br>=&amp; \sum _ {i = 1} ^ {n - 1} \sum _ {j = 1} ^ {n - 1} \sum _ {d | gcd(i, j)} \mu (d)\\<br>=&amp; \sum _ {i = 1} ^ {n - 1} \sum _ {j = 1} ^ {n - 1} \sum _ {d | i \wedge  d | j} \mu (d)\\<br>=&amp; \sum _ {d = 1} ^ {n - 1} \mu (d) \sum _ {i = 1} ^ {n - 1} [d |i] \sum _ {i = 1} ^ {n - 1} [d |j]\\<br>=&amp; \sum _ {d = 1} ^ {n - 1} \mu (d) \left \lfloor \frac {n - 1}  d\right \rfloor ^ 2\\<br>\end{aligned}<br>$$<br>再 $+2$ 即可。</p><p>注意特判 $n = 1$ ，答案为 $0$ 。</p><p>可以数论分块。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> cnt, primes[N], mu[N], smu[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">mu[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[i])</span><br><span class="line">&#123;</span><br><span class="line">primes[++cnt] = i;</span><br><span class="line">mu[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * primes[j] &lt; N; j++)</span><br><span class="line">&#123;</span><br><span class="line">vis[i * primes[j]] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">mu[i * primes[j]] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">mu[i * primes[j]] = -mu[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">smu[i] = smu[i - <span class="number">1</span>] + mu[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">n--;</span><br><span class="line"><span class="keyword">if</span> (!n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r; l &lt;= n; l = r + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = n / (n / l);</span><br><span class="line">res += (smu[r] - smu[l - <span class="number">1</span>]) * (n / l) * (n / l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2158&quot;&gt;P2158 [SDOI2008] 仪仗队&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="数学" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E5%AD%A6/"/>
    
    <category term="莫反与积性函数" scheme="https://rusunoi.github.io/tags/%E8%8E%AB%E5%8F%8D%E4%B8%8E%E7%A7%AF%E6%80%A7%E5%87%BD%E6%95%B0/"/>
    
    <category term="数论分块" scheme="https://rusunoi.github.io/tags/%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>P3324 [SDOI2015]星际战争</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3324/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3324/</id>
    <published>2021-11-19T11:55:43.000Z</published>
    <updated>2021-11-19T12:12:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3324">P3324 [SDOI2015]星际战争</a></p><span id="more"></span><p>不知道为什么不能实数上的费用流，但是确实很奇怪。</p><p>求最小值，考虑二分。对于每一个激光武器，其攻击力此时等于其攻击力乘上时间，做最大流，看是否可以跑慢流量。</p><p>好像有点卡精度。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cfloat&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf DBL_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-5</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> path[N][N];</span><br><span class="line"><span class="keyword">int</span> d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, A[N], B[M];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">double</span> tot, wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">exploit</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">double</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">abs</span>(t) &lt; eps)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">double</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span> <span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, A[i]);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (path[i][j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(j, i + n, inf);</span><br><span class="line"><span class="built_in">add</span>(i + n, j, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i + n, ed, x * B[i]);</span><br><span class="line"><span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">abs</span>(<span class="built_in">dinic</span>() - tot) &lt; eps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; A[i];</span><br><span class="line">tot += A[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">cin &gt;&gt; B[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">cin &gt;&gt; path[i][j];</span><br><span class="line"><span class="keyword">double</span> l = <span class="number">0</span>, r = <span class="number">1e6</span>, mid;</span><br><span class="line"><span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3324&quot;&gt;P3324 [SDOI2015]星际战争&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最大流" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E5%A4%A7%E6%B5%81/"/>
    
    <category term="二分" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>P3967 [TJOI2014]匹配</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3967/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3967/</id>
    <published>2021-11-19T11:42:37.000Z</published>
    <updated>2021-11-19T11:46:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3967">P3967 [TJOI2014]匹配</a></p><span id="more"></span><p>先做带权匹配，对于每一条匹配的边，如果删除了后答案减小，则一定是匹配边。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N], intersection[M];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, ans, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = -inf;</span><br><span class="line">incf[st] = inf;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &gt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> cost = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">cost += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cost;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n + <span class="number">1</span>; j &lt; ed; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, j, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; (ans = <span class="built_in">ek</span>()) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n &lt;&lt; <span class="number">1</span>; i &lt; n * <span class="number">2</span> + n * n * <span class="number">2</span>; i += <span class="number">2</span>)</span><br><span class="line">intersection[i] = wt[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n &lt;&lt; <span class="number">1</span>; i &lt; n * <span class="number">2</span> + n * n * <span class="number">2</span>; i += <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> (!intersection[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= idx; j += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[j] += wt[j ^ <span class="number">1</span>];</span><br><span class="line">wt[j ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t = wt[i];</span><br><span class="line">wt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">ek</span>() &lt; ans)</span><br><span class="line">cout &lt;&lt; edg[i ^ <span class="number">1</span>] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; edg[i] - n &lt;&lt; endl;</span><br><span class="line">wt[i] = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3967&quot;&gt;P3967 [TJOI2014]匹配&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="费用流" scheme="https://rusunoi.github.io/tags/%E8%B4%B9%E7%94%A8%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>P1935 [国家集训队]圈地计划</title>
    <link href="https://rusunoi.github.io/2021/11/19/P1935/"/>
    <id>https://rusunoi.github.io/2021/11/19/P1935/</id>
    <published>2021-11-19T11:35:07.000Z</published>
    <updated>2021-11-19T11:36:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1935">P1935 [国家集训队]圈地计划</a></p><span id="more"></span><p>经典的建图模型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, ans, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">tot = ed = n * m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> p = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, p, a);</span><br><span class="line"><span class="built_in">add</span>(p, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(p, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, p, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> p = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(p, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, p, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, p, a);</span><br><span class="line"><span class="built_in">add</span>(p, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> p = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k], ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> q = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">ans += a &lt;&lt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, p, inf);</span><br><span class="line"><span class="built_in">add</span>(p, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, q, inf);</span><br><span class="line"><span class="built_in">add</span>(q, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(p, tot, inf);</span><br><span class="line"><span class="built_in">add</span>(tot, p, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(q, tot, inf);</span><br><span class="line"><span class="built_in">add</span>(tot, q, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line">cout &lt;&lt; ans - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1935&quot;&gt;P1935 [国家集训队]圈地计划&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>P3391 【模板】文艺平衡树</title>
    <link href="https://rusunoi.github.io/2021/11/19/P3391/"/>
    <id>https://rusunoi.github.io/2021/11/19/P3391/</id>
    <published>2021-11-19T11:32:19.000Z</published>
    <updated>2021-11-19T11:34:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3391">P3391 【模板】文艺平衡树</a></p><span id="more"></span><p>带区间操作的平衡树。</p><p>对于一个区间翻转，所有子树全部翻转即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, root, idx;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">2</span>], p, v;</span><br><span class="line"><span class="keyword">int</span> sz, flag;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">v = a, p = b;</span><br><span class="line">sz = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;tr[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[x].flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(tr[x].s[<span class="number">0</span>], tr[x].s[<span class="number">1</span>]);</span><br><span class="line">tr[tr[x].s[<span class="number">0</span>]].flag ^= <span class="number">1</span>;</span><br><span class="line">tr[tr[x].s[<span class="number">1</span>]].flag ^= <span class="number">1</span>;</span><br><span class="line">tr[x].flag = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y, tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">root = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = root, p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">p = u, u = tr[u].s[v &gt; tr[u].v];</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[v &gt; tr[p].v] = u;</span><br><span class="line">tr[u].<span class="built_in">init</span>(v, p);</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_k</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = root;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz &gt;= k)</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span> &gt;= k)</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">k -= tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(<span class="keyword">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">pushdown</span>(u);</span><br><span class="line"><span class="keyword">if</span> (tr[u].s[<span class="number">0</span>]) </span><br><span class="line"><span class="built_in">output</span>(tr[u].s[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &gt;= <span class="number">1</span> &amp;&amp; tr[u].v &lt;= n)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, tr[u].v);</span><br><span class="line"><span class="keyword">if</span> (tr[u].s[<span class="number">1</span>])</span><br><span class="line"><span class="built_in">output</span>(tr[u].s[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line"><span class="built_in">insert</span>(i);</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">a = <span class="built_in">get_k</span>(a), b = <span class="built_in">get_k</span>(b + <span class="number">2</span>);</span><br><span class="line"><span class="built_in">splay</span>(a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(b, a);</span><br><span class="line">tr[tr[b].s[<span class="number">0</span>]].flag ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">output</span>(root);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P3391&quot;&gt;P3391 【模板】文艺平衡树&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2073 送花</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2073/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2073/</id>
    <published>2021-11-19T11:26:59.000Z</published>
    <updated>2021-11-19T11:28:14.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2073">P2073 送花</a></p><span id="more"></span><p>这里 <code>STL</code> 乱搞。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line">map &lt;LL, LL&gt; mp;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (mp.<span class="built_in">count</span>(b))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">mp.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(b, a));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span> &amp;&amp; !mp.<span class="built_in">empty</span>())</span><br><span class="line">mp.<span class="built_in">erase</span>(--mp.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span> &amp;&amp; !mp.<span class="built_in">empty</span>())</span><br><span class="line">mp.<span class="built_in">erase</span>(mp.<span class="built_in">begin</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (map&lt;LL, LL&gt;:: iterator it = mp.<span class="built_in">begin</span>(); it != mp.<span class="built_in">end</span>(); it++)</span><br><span class="line">res1 += (*it).second,</span><br><span class="line">res2 += (*it).first;</span><br><span class="line">cout &lt;&lt; res1 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; res2;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2073&quot;&gt;P2073 送花&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>KMP &amp; Trie &amp; AC自动机 模板</title>
    <link href="https://rusunoi.github.io/2021/11/19/KMP-Trie-AC-Automata-Template/"/>
    <id>https://rusunoi.github.io/2021/11/19/KMP-Trie-AC-Automata-Template/</id>
    <published>2021-11-19T11:23:08.000Z</published>
    <updated>2021-11-19T13:58:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>用于字符串问题。</p><span id="more"></span><h2 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">nxt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &amp;&amp; s[i] != s[j])</span><br><span class="line">        j = nxt[j];</span><br><span class="line">    <span class="keyword">if</span> (s[i] == s[j])</span><br><span class="line">        j++;</span><br><span class="line">    nxt[i + <span class="number">1</span>] = j;<span class="comment">//此时i与j - 1是匹配的，当i + 1不能匹配时可以尝试j</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; t.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &amp;&amp; t[i] != s[j])</span><br><span class="line">        j = nxt[j];</span><br><span class="line">    <span class="keyword">if</span> (t[i] == s[j])</span><br><span class="line">        j++;</span><br><span class="line">    <span class="keyword">if</span> (j == s.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i - s.<span class="built_in">size</span>() + <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">        j = nxt[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例：$abcabdababcabc$ 中匹配 $abcabc$</p><p>性质：一段前缀区间里的前缀等于后缀。</p><p>大多数 $KMP$ 模板的字符需要从 $1$ 开始，这里提供一种直接从 $0$ 开始的模板。</p><p>但是注意，这里的 $nxt$ 数组是从 $1$ 开始的。</p><h2 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">trie</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> nxt[N][<span class="number">26</span>], cnt;</span><br><span class="line"><span class="keyword">bool</span> exist[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c = s[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!nxt[p][c])</span><br><span class="line">nxt[p][c] = ++cnt;</span><br><span class="line">p = nxt[p][c];</span><br><span class="line">&#125;</span><br><span class="line">exist[p] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">find</span><span class="params">(<span class="keyword">char</span> *s, <span class="keyword">int</span> l)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c = s[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!nxt[p][c])</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">p = nxt[p][c];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> exist[p];</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="AC自动机"><a href="#AC自动机" class="headerlink" title="AC自动机"></a>AC自动机</h2><p>$AC自动机 = KMP + Trie$ </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (tr[<span class="number">0</span>][i])</span><br><span class="line">q.<span class="built_in">push</span>(tr[<span class="number">0</span>][i]);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> p = tr[t][i];</span><br><span class="line"><span class="keyword">if</span> (!p)</span><br><span class="line">tr[t][i] = tr[nxt[t]][i];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">nxt[p] = tr[nxt[t]][i];</span><br><span class="line">q.<span class="built_in">push</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(string str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!tr[p][t])</span><br><span class="line">tr[p][t] = ++idx;</span><br><span class="line">p = tr[p][t];</span><br><span class="line">&#125;</span><br><span class="line">cnt[p]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(string str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; str.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">j = tr[j][str[i] - <span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">int</span> p = j;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; cnt[p])</span><br><span class="line">&#123;</span><br><span class="line">res += cnt[p];</span><br><span class="line">cnt[p] = <span class="number">0</span>;</span><br><span class="line">p = nxt[p];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;用于字符串问题。&lt;/p&gt;</summary>
    
    
    
    
    <category term="模板" scheme="https://rusunoi.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="KMP" scheme="https://rusunoi.github.io/tags/KMP/"/>
    
    <category term="Trie" scheme="https://rusunoi.github.io/tags/Trie/"/>
    
    <category term="AC自动机" scheme="https://rusunoi.github.io/tags/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>平衡树模板</title>
    <link href="https://rusunoi.github.io/2021/11/19/Balanced-Tree-Template/"/>
    <id>https://rusunoi.github.io/2021/11/19/Balanced-Tree-Template/</id>
    <published>2021-11-19T11:17:39.000Z</published>
    <updated>2021-11-19T13:57:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>用于维护排名、第 $k$ 大数等。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, inf = <span class="number">1e7</span> + <span class="number">1</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> p, sz, s[<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> v, cnt;</span><br><span class="line">&#125; tr[N];</span><br><span class="line"><span class="keyword">int</span> m, rt, idx;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tr[x].sz = tr[tr[x].s[<span class="number">0</span>]].sz + tr[tr[x].s[<span class="number">1</span>]].sz + tr[x].cnt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rotate</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">int</span> k = tr[y].s[<span class="number">1</span>] == x;</span><br><span class="line">tr[z].s[tr[z].s[<span class="number">1</span>] == y] = x;</span><br><span class="line">tr[x].p = z;</span><br><span class="line">tr[y].s[k] = tr[x].s[k ^ <span class="number">1</span>];</span><br><span class="line">tr[tr[x].s[k ^ <span class="number">1</span>]].p = y;</span><br><span class="line">tr[x].s[k ^ <span class="number">1</span>] = y;</span><br><span class="line">tr[y].p = x;</span><br><span class="line"><span class="built_in">pushup</span>(y);</span><br><span class="line"><span class="built_in">pushup</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">splay</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (tr[x].p != k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = tr[x].p, z = tr[y].p;</span><br><span class="line"><span class="keyword">if</span> (z != k)</span><br><span class="line"><span class="keyword">if</span> ((tr[y].s[<span class="number">1</span>] == x) ^ (tr[z].s[<span class="number">1</span>] == y))</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">rotate</span>(y);</span><br><span class="line"><span class="built_in">rotate</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!k)</span><br><span class="line">rt = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, p;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v == x)</span><br><span class="line">&#123;</span><br><span class="line">tr[u].cnt++;</span><br><span class="line">tr[u].sz++;</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">p = u;</span><br><span class="line">u = tr[u].s[x &gt; tr[u].v];</span><br><span class="line">&#125;</span><br><span class="line">u = ++idx;</span><br><span class="line"><span class="keyword">if</span> (p)</span><br><span class="line">tr[p].s[x &gt; tr[p].v] = u;</span><br><span class="line">tr[u].v = x;</span><br><span class="line">tr[u].sz = <span class="number">1</span>;</span><br><span class="line">tr[u].p = p;</span><br><span class="line">tr[u].cnt = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">rt = ++idx;</span><br><span class="line">tr[rt].p = <span class="number">0</span>;</span><br><span class="line">tr[rt].sz = <span class="number">1</span>;</span><br><span class="line">tr[rt].cnt = <span class="number">1</span>;</span><br><span class="line">tr[rt].v = inf;</span><br><span class="line"><span class="built_in">insert</span>(-inf);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pre</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res, v = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">v = u;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &lt; x)</span><br><span class="line">&#123;</span><br><span class="line">res = u;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(v, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">nxt</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt, res, v = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line">v = u;</span><br><span class="line"><span class="keyword">if</span> (tr[u].v &gt; x)</span><br><span class="line">&#123;</span><br><span class="line">res = u;</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(v, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="built_in">pre</span>(x), r = <span class="built_in">nxt</span>(x);</span><br><span class="line"><span class="built_in">splay</span>(l, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">splay</span>(r, l);</span><br><span class="line">tr[tr[r].s[<span class="number">0</span>]].cnt--;</span><br><span class="line">tr[tr[r].s[<span class="number">0</span>]].sz--;</span><br><span class="line"><span class="keyword">if</span> (!tr[tr[r].s[<span class="number">0</span>]].cnt)</span><br><span class="line">&#123;</span><br><span class="line">tr[tr[r].s[<span class="number">0</span>]].p = <span class="number">0</span>;</span><br><span class="line">tr[r].s[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">splay</span>(r, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> u = rt;</span><br><span class="line"><span class="keyword">while</span> (u)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tr[tr[u].s[<span class="number">0</span>]].sz &gt;= x)</span><br><span class="line">u = tr[u].s[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x &lt;= tr[tr[u].s[<span class="number">0</span>]].sz + tr[u].cnt &amp;&amp; x &gt;= tr[tr[u].s[<span class="number">0</span>]].sz + <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">splay</span>(u, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">x -= tr[tr[u].s[<span class="number">0</span>]].sz + tr[u].cnt;</span><br><span class="line">u = tr[u].s[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> op, x; m; m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;op, &amp;x);</span><br><span class="line"><span class="keyword">if</span> (op == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">insert</span>(x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>)</span><br><span class="line"><span class="built_in">remove</span>(x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">splay</span>(<span class="built_in">pre</span>(x), <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[tr[rt].s[<span class="number">0</span>]].sz + tr[rt].cnt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">4</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[<span class="built_in">num</span>(x + <span class="number">1</span>)].v);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">5</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[<span class="built_in">pre</span>(x)].v);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">6</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, tr[<span class="built_in">nxt</span>(x)].v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;用于维护排名、第 $k$ 大数等。&lt;/p&gt;</summary>
    
    
    
    
    <category term="模板" scheme="https://rusunoi.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
    <category term="平衡树" scheme="https://rusunoi.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>P2939 [USACO09FEB]Revamping Trails G</title>
    <link href="https://rusunoi.github.io/2021/11/19/P2939/"/>
    <id>https://rusunoi.github.io/2021/11/19/P2939/</id>
    <published>2021-11-19T11:12:18.000Z</published>
    <updated>2021-11-19T11:13:30.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2939">P2939 [USACO09FEB]Revamping Trails G</a></p><span id="more"></span><p>左转飞行路线。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P2939&quot;&gt;P2939 [USACO09FEB]Revamping Trails G&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="分层图最短路" scheme="https://rusunoi.github.io/tags/%E5%88%86%E5%B1%82%E5%9B%BE%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
  </entry>
  
  <entry>
    <title>P1948 [USACO08JAN]Telephone Lines S</title>
    <link href="https://rusunoi.github.io/2021/11/19/P1948/"/>
    <id>https://rusunoi.github.io/2021/11/19/P1948/</id>
    <published>2021-11-19T10:18:10.000Z</published>
    <updated>2021-11-19T11:08:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1948">P1948 [USACO08JAN]Telephone Lines S</a></p><span id="more"></span><p>概括题意：将图上的 $k$ 条边的边权改为 $0$ 后，求图中所有路径边权最大值的最小值。</p><p>考虑二分答案，对于当前的二分值 $x$ ，除了 $k$ 个边权允许使用免费，不允许边权再大于 $x$ ，判断是否存在一条路径从起点到终点。那么，我们需要知道从起点到终点最少使用多少次免费，边权大于 $x$ 的必须使用免费，将边权改为 $1$ ；否则，边权改为 $0$ 。做最短路即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, k, dis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], lth[M];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">vis[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (dis[t] + wt[i] &lt; dis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">dis[edg[i]] = dis[t] + wt[i];</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i++)</span><br><span class="line">wt[i] = lth[i] &gt; x;</span><br><span class="line"><span class="built_in">spfa</span>();</span><br><span class="line"><span class="keyword">return</span> dis[n] &lt;= k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">lth[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>, mid;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">r = <span class="built_in">max</span>(r, c);</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i++)</span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">spfa</span>();</span><br><span class="line"><span class="keyword">if</span> (dis[n] == INF)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.luogu.com.cn/problem/P1948&quot;&gt;P1948 [USACO08JAN]Telephone Lines S&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="最短路" scheme="https://rusunoi.github.io/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF/"/>
    
    <category term="二分" scheme="https://rusunoi.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
</feed>
