<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>P4513 小白逛公园</title>
      <link href="/2021/11/19/P4513/"/>
      <url>/2021/11/19/P4513/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4513">P4513 小白逛公园</a></p><span id="more"></span><p>线段树做最大子段和，考虑如何从两个区间合并子段和。</p><p>最大子段和可能从下面的情况转移得到：</p><ul><li>左区间的最大子段和；</li><li>右区间的最大子段和；</li><li>左区间最右边开始的最大子段和加上右区间最左边开始的最大子段和。</li></ul><p>考虑区间最左边开始的最大子段和如何维护，</p><p> <code>tmx</code> 表示当前区间最大子段和子段和，<code>lmx</code> 表示从当前区间最左边开始的最大子段和，<code>rmx</code> 同理，同时维护区间和 <code>sum</code> 。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 线段树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2999 [USACO10NOV]Chocolate Milk S</title>
      <link href="/2021/11/19/P2999/"/>
      <url>/2021/11/19/P2999/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2999">P2999 [USACO10NOV]Chocolate Milk S</a></p><span id="more"></span><p>按照题意拓扑排序即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, cnt, din[N], dout[N], flow[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b);</span><br><span class="line">din[b]++;</span><br><span class="line">dout[a]++;</span><br><span class="line">&#125;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!din[i])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line">flow[i] = <span class="number">1</span>;</span><br><span class="line">vis[i] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (dout[t] &gt; <span class="number">1</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">flow[edg[i]] += flow[t];</span><br><span class="line">din[edg[i]]--;</span><br><span class="line"><span class="keyword">if</span> (!din[edg[i]])</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (flow[i] == cnt &amp;&amp; !vis[i])</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 拓扑排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1379 八数码难题</title>
      <link href="/2021/11/19/P1379/"/>
      <url>/2021/11/19/P1379/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1379">P1379 八数码难题</a></p><span id="more"></span><p>直接搜索即可，<code>map</code> 判重。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair &lt;string, <span class="keyword">int</span>&gt; PSI;</span><br><span class="line"><span class="keyword">const</span> string ed = <span class="string">&quot;123804765&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line">queue &lt;PSI&gt; q;</span><br><span class="line">unordered_set &lt;string&gt; vis;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt;= <span class="number">0</span> &amp;&amp; x &lt; <span class="number">3</span> &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; y &lt; <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">PSI t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (t.first == ed)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; t.second;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">t.second++;</span><br><span class="line"><span class="keyword">int</span> x, y;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; t.first.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="keyword">if</span> (t.first[i] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = i / <span class="number">3</span>;</span><br><span class="line">y = i % <span class="number">3</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = x + dx[i],</span><br><span class="line">ny = y + dy[i];</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">swap</span>(t.first[x * <span class="number">3</span> + y], t.first[nx * <span class="number">3</span> + ny]);</span><br><span class="line"><span class="keyword">if</span> (!vis.<span class="built_in">count</span>(t.first))</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(t);</span><br><span class="line">vis.<span class="built_in">insert</span>(t.first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">swap</span>(t.first[x * <span class="number">3</span> + y], t.first[nx * <span class="number">3</span> + ny]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string t;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(t, <span class="number">0</span>));</span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 暴力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1407 [国家集训队]稳定婚姻</title>
      <link href="/2021/11/19/P1407/"/>
      <url>/2021/11/19/P1407/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1407">P1407 [国家集训队]稳定婚姻</a></p><span id="more"></span><p>应该二分图匹配可以过的，匈牙利中，对于一对夫妻，只用做一次增广即可，但是 <code>dinic</code> 需要将整个图做一次，所以过不了。</p><p>正解是 <code>tarjan</code> ，如图，<code>h &amp; w</code> 表示是夫妻关系，<code>lovers</code> 表示使情人关系，如果如图形成了一个环，那么每个人都可以选择一个就近的情人。</p><img src="/2021/11/19/P1407/1.png" class="" title="P1407-1"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">8e3</span> + <span class="number">10</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line">map &lt;string, <span class="keyword">int</span>&gt; name;</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">int</span> cnt, stmp, id[N], dfn[N], low[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[edg[i]])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] == low[x])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">id[y] = cnt;</span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">name[a] = i &lt;&lt; <span class="number">1</span>;</span><br><span class="line">name[b] = i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span>, i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(name[b], name[a]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i])</span><br><span class="line"><span class="built_in">tarjan</span>(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (id[i &lt;&lt; <span class="number">1</span>] == id[i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Unsafe&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Safe&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tarjan </tag>
            
            <tag> 二分图 </tag>
            
            <tag> 二分图的最大匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SP300 CABLETV - Cable TV Network</title>
      <link href="/2021/11/19/SP300/"/>
      <url>/2021/11/19/SP300/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/CABLETV/">SPOJ: CABLETV - Cable TV Network</a></p><p><a href="https://www.luogu.com.cn/problem/SP300">LuoGu: SP300 CABLETV - Cable TV Network</a></p><span id="more"></span><p>求使图不连通的最少割点。图不连通只要存在两点不连通即可，枚举两点，作为源点和汇点。割点，拆点即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">6e3</span> +<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, ans, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (flow == inf)</span><br><span class="line"><span class="keyword">return</span> inf;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">if</span> (res &gt;= ans)</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ans = n;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">PII <span class="title">div</span><span class="params">(string s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">s.<span class="built_in">erase</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">s.<span class="built_in">erase</span>(s.<span class="built_in">size</span>() - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!flag)</span><br><span class="line">x = x * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">y = y * <span class="number">10</span> + s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">make_pair</span>(x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span>, i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, i &lt;&lt; <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line">a = <span class="built_in">div</span>(s).first;</span><br><span class="line">b = <span class="built_in">div</span>(s).second;</span><br><span class="line"><span class="built_in">add</span>(a &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, b &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(b &lt;&lt; <span class="number">1</span>, a &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, a &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(a &lt;&lt; <span class="number">1</span>, b &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">&#123;</span><br><span class="line">st = i &lt;&lt;<span class="number">1</span> | <span class="number">1</span>; </span><br><span class="line">ed = j &lt;&lt; <span class="number">1</span>;</span><br><span class="line">ans = <span class="built_in">min</span>(ans, <span class="built_in">dinic</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt;= idx; k += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[k] += wt[k ^ <span class="number">1</span>];</span><br><span class="line">wt[k ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2053 [SCOI2007]修车</title>
      <link href="/2021/11/19/P2053/"/>
      <url>/2021/11/19/P2053/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2053">P2053 [SCOI2007]修车</a></p><span id="more"></span><p>对于一个工人，修一个车，后面排队的人都得一起等着，将一个工人拆为 $n$ 个点，第 $k$ 个点表示使 $k$ 个人等着的，对于工人的每个点，向每个车连边，记修该车时间为 $t$ ，那么有 $k$ 个人等着的总时间为 $kt$ ，这样就转化为了一个带权匹配问题。因为为了最小代价，所以如果该工人使更少人等待的点没有被匹配到，一定不会选择使更多人等待的点，从而保证了答案符合实际情况（即不会出现一个工人使 $3$ 个人等待的点没有匹配，却匹配了使 $4$ 个人等待的点匹配了，不符合事实）。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">610</span>, M = <span class="number">8e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        incf[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = INF;</span><br><span class="line">    incf[st] = INF;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[edg[i]] = d[t] + f[i];</span><br><span class="line">                pre[edg[i]] = i;</span><br><span class="line">                incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = incf[ed];</span><br><span class="line">        res += t * d[ed];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            wt[pre[i]] -= t;</span><br><span class="line">            wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n + n * m + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">add</span>(i, n + (j - <span class="number">1</span>) * n + k, <span class="number">1</span>, k * a);</span><br><span class="line">    <span class="built_in">add</span>(n + (j - <span class="number">1</span>) * n + k, i, <span class="number">0</span>, - k * a);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">add</span>(n + (i - <span class="number">1</span>) * n + j, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">add</span>(ed, n + (i - <span class="number">1</span>) * n + j, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, (<span class="keyword">double</span>)<span class="built_in">ek</span>() / (<span class="keyword">double</span>)n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 拆点 </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3866 [TJOI2009] 战争游戏</title>
      <link href="/2021/11/19/P3866/"/>
      <url>/2021/11/19/P3866/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3866">P3866 [TJOI2009] 战争游戏</a></p><span id="more"></span><p>题意即将敌军的位置和边界的位置割开，因为割点，所以拆点即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>; i &lt;= ed &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    cur[st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>] = hd[st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed &lt;&lt; <span class="number">1</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed &lt;&lt; <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = <span class="built_in">num</span>(n, m) + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>; i &lt;= ed &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, a ? a : inf);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(h &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span> || j == <span class="number">1</span> || i == n || j == m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed &lt;&lt; <span class="number">1</span>, inf);</span><br><span class="line"><span class="built_in">add</span>(ed &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3872 [TJOI2010]电影迷</title>
      <link href="/2021/11/19/P3872/"/>
      <url>/2021/11/19/P3872/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3872">P3872 [TJOI2010]电影迷</a></p><span id="more"></span><p>最大权闭合子图。</p><p>按照套路即可。源点连正权点，负权点连汇点，流量为绝对值，答案为正权点之和减最小割。当前答案为所有正权点，对于一条边，要么放弃左部的正权点（放弃正权），要么选择右部的负权点（减去负权的绝对值），要么付出相应的代价（减去代价），这些都是减少的，所以正权点之和减去最小割即答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, -a);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2526 [SHOI2001]小狗散步</title>
      <link href="/2021/11/19/P2526/"/>
      <url>/2021/11/19/P2526/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2526">P2526 [SHOI2001]小狗散步</a></p><span id="more"></span><p>题目有一点没有说清楚：同一个景点多次访问只算一次，或者说只能一个景点访问一次。</p><blockquote><p>Pandog 每次与主人相遇之前最多只去一个景点。</p></blockquote><p>即主人的一段路程中，小狗要以两倍速从起点到达一个景点再到终点，在主人到达之前完成。所以对于每段路程，和可到达的景点匹配即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line">PII dog[N], site[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> z1, <span class="keyword">int</span> z2, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LL a = z1 - site[x].first,</span><br><span class="line">b = z2 - site[x].second,</span><br><span class="line">c = z1 - site[y].first,</span><br><span class="line">d = z2 - site[y].second;</span><br><span class="line">LL t = <span class="number">4</span> * ((a * a + b * b) * (c * c + d * d)),</span><br><span class="line">   h = <span class="number">3</span> * (a * a + b * b + c * c + d * d ) - <span class="number">8</span> * (a * c + b * d);</span><br><span class="line"><span class="keyword">return</span> t &lt;= h * h;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; site[i].first &gt;&gt; site[i].second;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; dog[i].first &gt;&gt; dog[i].second;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(j, dog[i].first, dog[i].second, j + <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(j, i + n - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n - <span class="number">1</span>, j, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n + <span class="built_in">dinic</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; site[i].first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; site[i].second &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line"><span class="keyword">if</span> (edg[j] != st &amp;&amp; !wt[j])</span><br><span class="line">cout &lt;&lt; dog[edg[j] - n + <span class="number">1</span>].first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; dog[edg[j] - n + <span class="number">1</span>].second &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; site[n].first &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; site[n].second;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 二分图的最大匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1344 [USACO4.4]追查坏牛奶Pollutant Control</title>
      <link href="/2021/11/19/P1344/"/>
      <url>/2021/11/19/P1344/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1344">P1344 [USACO4.4]追查坏牛奶Pollutant Control</a></p><span id="more"></span><p>基本上是裸的最小割，额外的问题是，最最小割的前提下，要保证割的边数最少。</p><p>奇技淫巧：设一条边的权值为 $w$ ，将其修改修改为 $w mod + 1$ ，将边权和边数压缩为一个数。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">40</span>, M = <span class="number">2e3</span> + <span class="number">10</span>, MOD = <span class="number">1e3</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line">LL wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, LL limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            LL t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, LL c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">1</span>;</span><br><span class="line">ed = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c * MOD + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">LL t = <span class="built_in">dinic</span>();</span><br><span class="line">cout &lt;&lt; t / MOD &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; t % MOD;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2598 [ZJOI2009]狼和羊的故事</title>
      <link href="/2021/11/18/P2598/"/>
      <url>/2021/11/18/P2598/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2598">P2598 [ZJOI2009]狼和羊的故事</a></p><span id="more"></span><p>做完 $CSP-S 2021 T4$ 立马回来看这个题，很相似，把狼的领地和羊的领地割开即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N], mp[<span class="number">110</span>][<span class="number">110</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; mp[i][j];</span><br><span class="line"><span class="keyword">if</span> (mp[i][j] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, x, INF);</span><br><span class="line"><span class="built_in">add</span>(x, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mp[i][j] == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(x, ed, INF);</span><br><span class="line"><span class="built_in">add</span>(ed, x, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny) || (mp[i][j] == mp[nx][ny] &amp;&amp; mp[i][j] &amp;&amp; mp[nx][ny]))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> x = <span class="built_in">num</span>(i, j),</span><br><span class="line">y = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="built_in">add</span>(x, y, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(y, x, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2936 [USACO09JAN]Total Flow S</title>
      <link href="/2021/11/18/P2936/"/>
      <url>/2021/11/18/P2936/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2936">P2936 [USACO09JAN]Total Flow S</a></p><span id="more"></span><p>板子题。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> n = <span class="number">200</span>, M = <span class="number">2e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> m, d[n], cur[n];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[n], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">cur[<span class="number">0</span>] = hd[<span class="number">0</span>];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == <span class="number">25</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">25</span>)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(<span class="number">0</span>, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a, b;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a - <span class="string">&#x27;A&#x27;</span>, b - <span class="string">&#x27;A&#x27;</span>, c);</span><br><span class="line"><span class="built_in">add</span>(b - <span class="string">&#x27;A&#x27;</span>, a - <span class="string">&#x27;A&#x27;</span>, c);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2017 [USACO09DEC]Dizzy Cows G</title>
      <link href="/2021/11/18/P2017/"/>
      <url>/2021/11/18/P2017/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2017">P2017 [USACO09DEC]Dizzy Cows G</a></p><span id="more"></span><p>首先对有向边，拓扑排序，得到一个顺序，对于无向边，将顺序调整为拓扑序由小到大即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">int</span> n, p1, p2, stmp, din[N], order[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; p1 &gt;&gt; p2;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= p1; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b);</span><br><span class="line">din[b]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n ;i++)</span><br><span class="line"><span class="keyword">if</span> (!din[i])</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">order[t] = ++ stmp;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">din[edg[i]]--;</span><br><span class="line"><span class="keyword">if</span> (~din[edg[i]])</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= p2; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (order[a] &gt; order[b])</span><br><span class="line"><span class="built_in">swap</span>(a, b);</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 拓扑排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4568 [JLOI2011]飞行路线</title>
      <link href="/2021/11/18/P4568/"/>
      <url>/2021/11/18/P4568/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4568">P4568 [JLOI2011]飞行路线</a></p><span id="more"></span><p>将一个点分为 $k + 1$ 个点，表示在该点还可以免费 $0…k$ 条边的最短路。</p><p>卡 <code>spfa</code> ，用堆优化 <code>dijkstra</code> 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>, M = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, k, st, ed, res = inf, d[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">num</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x * (k + <span class="number">1</span>) + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra_with_heap</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">num</span>(<span class="number">0</span>, <span class="number">0</span>); i &lt;= <span class="built_in">num</span>(n - <span class="number">1</span>, k); i++)</span><br><span class="line">d[i] = inf;</span><br><span class="line">d[<span class="built_in">num</span>(st, k)] = <span class="number">0</span>;</span><br><span class="line">priority_queue &lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt; &gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, <span class="built_in">num</span>(st, k)));</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line">PII t = q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (vis[t.second])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">vis[t.second] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t.second]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (t.first + wt[i] &lt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = t.first + wt[i];</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(d[edg[i]], edg[i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k &gt;&gt; st &gt;&gt; ed;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="built_in">num</span>(<span class="number">0</span>, <span class="number">0</span>); i &lt;= <span class="built_in">num</span>(n - <span class="number">1</span>, k); i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= k; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(a, j),</span><br><span class="line">h = <span class="built_in">num</span>(b, j);</span><br><span class="line"><span class="built_in">add</span>(t, h, c);</span><br><span class="line"><span class="built_in">add</span>(h, t, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(a, j),</span><br><span class="line">h = <span class="built_in">num</span>(b, j - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(t, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(b, j),</span><br><span class="line">h = <span class="built_in">num</span>(a, j - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(t, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dijkstra_with_heap</span> ();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= k; i++)</span><br><span class="line">res = <span class="built_in">min</span>(res, d[<span class="built_in">num</span>(ed, i)]);</span><br><span class="line">cout &lt;&lt; res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 分层图最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2474 [SCOI2008]天平</title>
      <link href="/2021/11/18/P2474/"/>
      <url>/2021/11/18/P2474/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2474">P2474 [SCOI2008]天平</a></p><span id="more"></span><blockquote><p>（只有结果保证惟一的选法才统计在内）</p></blockquote><p>一个棘手的问题是，我们可能不能确定两组数中每个数的大小，但是可能可以确定一组数中的和和另一组数的和的大小关系，这时考虑求两个数的差值的上下界，从而来确定答案。用 <code>floyed</code> 。</p><p>题中给定了 $A$ 和 $B$ ，现在判断 $C$ 和 $D$ 的和与 $A$ 和 $B$ 的和的大小关系。</p><p>如果 $A$ 比 $C$ （ $D$ ）大的下界大于了 $B$ 比 $D$ （ $C$ ）小的上界，那么一定有 $A + B &gt; C + D$ ；反之，则 $A + B &lt; C + D$ ；现在考虑等于的情况，$A$ 和 $B$ 是确定的，此时只有 $C$ 和 $D$ 也是确定的才可以确定，即差的上下界一定要相等。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">int</span> n, A, B, r1, r2, r3, mn[N][N], mx[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; A &gt;&gt; B;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span> (c == <span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">mn[i][j] = <span class="number">0</span>;</span><br><span class="line">mx[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">mn[i][j] = <span class="number">1</span>;</span><br><span class="line">mx[i][j] = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">mn[i][j] = <span class="number">-2</span>;</span><br><span class="line">mx[i][j] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">mn[i][j] = <span class="number">-2</span>;</span><br><span class="line">mx[i][j] = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (i != k &amp;&amp; i != j &amp;&amp; k != j)</span><br><span class="line">&#123;</span><br><span class="line">mn[i][j] = <span class="built_in">max</span>(mn[i][j], mn[i][k] + mn[k][j]);</span><br><span class="line">mx[i][j] = <span class="built_in">min</span>(mx[i][j], mx[i][k] + mx[k][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i ;j++)</span><br><span class="line"><span class="keyword">if</span> (i != A &amp;&amp; i != B &amp;&amp; j != A &amp;&amp; j != B)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (mn[A][i] &gt; mx[j][B] || mn[B][i] &gt; mx[j][A])</span><br><span class="line">r1++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (mn[i][A] &gt; mx[B][j] || mn[i][B] &gt; mx[A][j])</span><br><span class="line">r3++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ((mn[A][i] == mx[A][i] &amp;&amp; mn[j][B] == mx[j][B] &amp;&amp; mn[A][i] == mn[j][B])</span><br><span class="line">|| (mn[A][j] == mx[A][j] &amp;&amp; mn[i][B] == mx[i][B] &amp;&amp; mn[A][j] == mn[i][B]))</span><br><span class="line">r2++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; r1 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; r2 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; r3;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 差分约束 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2764 最小路径覆盖问题</title>
      <link href="/2021/11/18/P2764/"/>
      <url>/2021/11/18/P2764/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2764">P2764 最小路径覆盖问题</a></p><span id="more"></span><p>每个点只能经过一次，拆点。将路径抽象为流量，因为每个点都可以成为起点和终点，所以源点向每个点的入点连边，每个点的出点向汇点连边。</p><p>考虑输出方案，对于每一个没有访问的点，向前后寻找是否有可以构成的路径的点，依次递归输出即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">310</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, res, root, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_forward</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (x != root)</span><br><span class="line">cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (edg[i] != st &amp;&amp; !wt[i])</span><br><span class="line"><span class="built_in">print_forward</span>(edg[i] - n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_back</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x + n]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (edg[i] != ed &amp;&amp; wt[i])</span><br><span class="line"><span class="built_in">print_back</span>(edg[i]);</span><br><span class="line"><span class="keyword">if</span> (x != root)</span><br><span class="line">cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">b += n;</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">res = <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!vis[i])</span><br><span class="line">&#123;</span><br><span class="line">root = i;</span><br><span class="line"><span class="built_in">print_back</span>(i);</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="built_in">print_forward</span>(i);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n - res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2153 [SDOI2009]晨跑</title>
      <link href="/2021/11/18/P2153/"/>
      <url>/2021/11/18/P2153/</url>
      
        <content type="html"><![CDATA[<p>[P2153 [SDOI2009]晨跑]</p><span id="more"></span><p>每个点只能走一次，所以拆点。</p><blockquote><p>Elaxia 耐力不太好，他希望在一个周期内跑的路程尽量短，但是又希望训练周期包含的天数尽量长。</p></blockquote><p>考虑路程为费用，天数为流量，做费用流即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">410</span>, M = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, day, path, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        incf[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = inf;</span><br><span class="line">    incf[st] = inf;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[edg[i]] = d[t] + f[i];</span><br><span class="line">                pre[edg[i]] = i;</span><br><span class="line">                incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = incf[ed];</span><br><span class="line">        day += t;</span><br><span class="line">        path += t * d[ed];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            wt[pre[i]] -= t;</span><br><span class="line">            wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">add</span>(st, <span class="number">1</span>, inf, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a, b + n, <span class="number">1</span>, c);</span><br><span class="line">        <span class="built_in">add</span>(b + n, a, <span class="number">0</span>, -c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(i + n, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, i + n, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">add</span>(n &lt;&lt; <span class="number">1</span>, ed, inf, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">add</span>(ed, n &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">ek</span>();</span><br><span class="line">    cout &lt;&lt; day &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; path;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 拆点 </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3629 [APIO2010]巡逻</title>
      <link href="/2021/11/18/P3629/"/>
      <url>/2021/11/18/P3629/</url>
      
        <content type="html"><![CDATA[<p>[P3629 [APIO2010]巡逻]</p><span id="more"></span>]]></content>
      
      
      
        <tags>
            
            <tag> 待处理 </tag>
            
            <tag> 树的直径 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4281 [AHOI2008]紧急集合 / 聚会</title>
      <link href="/2021/11/18/P4281/"/>
      <url>/2021/11/18/P4281/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4281">P4281 [AHOI2008]紧急集合 / 聚会</a></p><span id="more"></span><p>题意，一棵树上，给定三个点，找到一个点使得三个点到该点的距离和最小，并求出该距离和。</p><p>现在假设答案为其中两个点 $x$ 和 $y$ 的 $LCA$ ，如果深度再减少，那么只有另一个点 $z$ 的距离会减少，这两个点的距离都会增大，不会再是最优解；如果向其中一个点 $x$ 再向下增加深度，那么只有 $x$ 的距离会减少，另外两个点距离都会增大——所以答案一定是三个点中两两的三个 $LCA$ 。现在有三个备选答案点，同理，越深的 $LCA$ 是越优的答案。</p><p>求 $LCA$ 有很多方法，现在习惯做树链剖分，但是当时还没学，用的是倍增。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>, M = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, q, st, d[N], lg[N], fa[N][<span class="number">21</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">d[i] = INF;</span><br><span class="line">d[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + <span class="number">1</span> &lt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">fa[edg[i]][<span class="number">0</span>] = t;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; <span class="number">1</span> &lt;&lt; k &lt;= d[edg[i]]; k++)</span><br><span class="line">fa[edg[i]][k] = fa[fa[edg[i]][k - <span class="number">1</span>]][k - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lca</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (d[x] &lt; d[y])</span><br><span class="line"><span class="built_in">swap</span>(x, y);</span><br><span class="line"><span class="keyword">while</span> (d[x] &gt; d[y])</span><br><span class="line">x = fa[x][lg[d[x] - d[y]] - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (x == y)</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = lg[d[x]]; k &gt;= <span class="number">0</span>; k--)</span><br><span class="line"><span class="keyword">if</span> (fa[x][k] != fa[y][k])</span><br><span class="line">&#123;</span><br><span class="line">x = fa[x][k];</span><br><span class="line">y = fa[y][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fa[x][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;q);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">lg[i] = lg[i - <span class="number">1</span>] + (<span class="number">1</span> &lt;&lt; lg[i - <span class="number">1</span>] == i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">add</span>(a, b);</span><br><span class="line"><span class="built_in">add</span>(b, a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c, t1, t2, t3, t; i &lt;= q; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">t1 = <span class="built_in">lca</span>(a, b);</span><br><span class="line">t2 = <span class="built_in">lca</span>(a, c);</span><br><span class="line">t3 = <span class="built_in">lca</span>(b, c);</span><br><span class="line"><span class="keyword">if</span> (t1 == t2)</span><br><span class="line">t = t3;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t1 == t3)</span><br><span class="line">t = t2;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t2 == t3)</span><br><span class="line">t = t1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, t, d[a] + d[b] + d[c] - d[t1] - d[t2] - d[t3]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 树链剖分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4662 [BalticOI 2008]黑手党</title>
      <link href="/2021/11/18/P4662/"/>
      <url>/2021/11/18/P4662/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4662">P4662 [BalticOI 2008]黑手党</a></p><span id="more"></span><p>拆点，裸的最小割，加上方案输出即可。</p><p>先做最小割，再做一次 <code>dfs</code> ，只走还有流量剩余的边，如果一条边有一个点被访问了，另一个点没有被访问，则该边被割了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">410</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line">set &lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i] &amp;&amp; !vis[edg[i]])</span><br><span class="line"><span class="built_in">dfs</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; st &gt;&gt; ed;</span><br><span class="line">ed += n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, a);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a + n, b, inf);</span><br><span class="line"><span class="built_in">add</span>(b, a + n, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b + n, a, inf);</span><br><span class="line"><span class="built_in">add</span>(a, b + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dinic</span>();</span><br><span class="line"><span class="built_in">dfs</span>(st);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> (vis[edg[i ^ <span class="number">1</span>]] &amp;&amp; !vis[edg[i]])</span><br><span class="line">ans.<span class="built_in">insert</span>(edg[i ^ <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">for</span> (set &lt;<span class="keyword">int</span>&gt; :: iterator i = ans.<span class="built_in">begin</span>(); i != ans.<span class="built_in">end</span>(); i++)</span><br><span class="line">cout &lt;&lt; *i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2169 正则表达式</title>
      <link href="/2021/11/18/P2169/"/>
      <url>/2021/11/18/P2169/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2169">P2169 正则表达式</a></p><span id="more"></span><p>缩点后最短路即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">10</span>, M = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, cnt, d[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[N];</span><br><span class="line"><span class="keyword">int</span> stmp, id[N], dfn[N], low[N], num[N];</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[edg[i]])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] == low[x])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">id[y] = cnt;</span><br><span class="line">num[cnt]++;</span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">d[i] = inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">vis[i] = <span class="literal">false</span>;</span><br><span class="line">d[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">vis[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + wt[i] &lt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + wt[i];</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i])</span><br><span class="line"><span class="built_in">tarjan</span>(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line"><span class="keyword">if</span> (id[i] == id[edg[j]])</span><br><span class="line">wt[j] = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">spfa</span>();</span><br><span class="line">cout &lt;&lt; d[n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tarjan </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2319 [HNOI2006]超级英雄</title>
      <link href="/2021/11/18/P2319/"/>
      <url>/2021/11/18/P2319/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2319">P2319 [HNOI2006]超级英雄</a></p><span id="more"></span><p>最大匹配即可，不一样的是一旦有一个不能匹配，立刻退出。匈牙利即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, sum, ans[N], match[N];</span><br><span class="line">pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; k[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dfs</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!vis[k[x].first])</span><br><span class="line">&#123;</span><br><span class="line">vis[k[x].first] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (match[k[x].first] == <span class="number">-1</span> || <span class="built_in">dfs</span>(match[k[x].first]))</span><br><span class="line">&#123;</span><br><span class="line">match[k[x].first] = x;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!vis[k[x].second])</span><br><span class="line">&#123;</span><br><span class="line">vis[k[x].second] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (match[k[x].second] == <span class="number">-1</span> || <span class="built_in">dfs</span>(match[k[x].second]))</span><br><span class="line">&#123;</span><br><span class="line">match[k[x].second] = x;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">match[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">ans[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">cin &gt;&gt; k[i].first &gt;&gt; k[i].second;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">vis[j] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">dfs</span>(i))</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (~match[i])</span><br><span class="line">ans[match[i]] = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line"><span class="keyword">if</span> (~ans[i])</span><br><span class="line">cout &lt;&lt; ans[i] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 二分图的最大匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4251 [SCOI2015]小凸玩矩阵</title>
      <link href="/2021/11/18/P4251/"/>
      <url>/2021/11/18/P4251/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4251">P4251 [SCOI2015]小凸玩矩阵</a></p><span id="more"></span><p>将其理解为匹配，即行与列的匹配，求第 $k$ 大的数的最小值，二分即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">510</span>, M = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, k, matrix_idx, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> u, v, w;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">u = a;</span><br><span class="line">v = b;</span><br><span class="line">w = c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;matrix[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= matrix_idx; i++)</span><br><span class="line"><span class="keyword">if</span> (matrix[i].w &lt;= x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(matrix[i].u, matrix[i].v, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(matrix[i].v, matrix[i].u, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">dinic</span>() &gt;= n - k + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(Edge x, Edge y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.w &lt; y.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l = inf, r = <span class="number">0</span>, mid;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">matrix[++matrix_idx].<span class="built_in">add</span>(i, j + n, a);</span><br><span class="line">l = <span class="built_in">min</span>(l, a);</span><br><span class="line">r = <span class="built_in">max</span>(r, a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(matrix + <span class="number">1</span>, matrix + matrix_idx + <span class="number">1</span>, cmp);</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>P2517 [HAOI2010]订货</title>
      <link href="/2021/11/18/P2517/"/>
      <url>/2021/11/18/P2517/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2517">P2517 [HAOI2010]订货</a></p><span id="more"></span><p>利用费用流的最大流性质，一个点到汇点的流量即需求量，从源点来的流量为购买，从上一个点来的流量为存贮。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">60</span>, M = <span class="number">310</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, S, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line">incf[st] = inf;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i] &amp;&amp; d[t] + f[i] &lt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * incf[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; S;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, ed, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (i &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + <span class="number">1</span>, S, m);</span><br><span class="line"><span class="built_in">add</span>(i + <span class="number">1</span>, i, <span class="number">0</span>, -m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(st, i, inf, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2457 [SDOI2006]仓库管理员的烦恼</title>
      <link href="/2021/11/18/P2457/"/>
      <url>/2021/11/18/P2457/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2457">P2457 [SDOI2006]仓库管理员的烦恼</a></p><span id="more"></span><p>裸的带权匹配。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">310</span>, M = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, d[N], pre[N], incf[N], kg[N][N], tot[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">incf[st] = inf;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i] &amp;&amp; d[t] + f[i] &lt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * t;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n + <span class="number">1</span>; j &lt; ed; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; kg[i][j];</span><br><span class="line">tot[i] += kg[i][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n + <span class="number">1</span>; j &lt; ed; j++)</span><br><span class="line">&#123;</span><br><span class="line">a = tot[i] - kg[i][j];</span><br><span class="line"><span class="built_in">add</span>(i, j, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3980 [NOI2008] 志愿者招募</title>
      <link href="/2021/11/17/P3980/"/>
      <url>/2021/11/17/P3980/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3980">P3980 [NOI2008] 志愿者招募</a></p><span id="more"></span><p>建图超级妙，考场一定想不出来。</p><p>现在假设有 $inf$ 的志愿者，但是有些是不工作的。对于任意一天需要 <code>x</code> 个志愿者，那么有 $inf - x$ 的志愿者是不工作的，他们到下一天并不需要代价，为了满足费用流最大流的性质（即到最后一天志愿者的数量不变，一直为 $inf$ ），那么我们一定要补足 $inf$ 的流量，这些补足的流量就是当前工作的志愿者。考虑如何维护志愿者的工作状态，在它工作的时段，计算一次代价，再工作完成后回到不工作的志愿者中。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line">incf[st] = inf;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i] &amp;&amp; d[t] + f[i] &lt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * incf[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, a; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, i + <span class="number">1</span>, inf - a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i + <span class="number">1</span>, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(n, ed, inf, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, n, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a - <span class="number">1</span>, b, inf, c);</span><br><span class="line"><span class="built_in">add</span>(b, a - <span class="number">1</span>, <span class="number">0</span>, -c);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4012 深海机器人问题</title>
      <link href="/2021/11/17/P4012/"/>
      <url>/2021/11/17/P4012/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4012">P4012 深海机器人问题</a></p><span id="more"></span><p>按照题意建图即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">260</span>, M = <span class="number">2e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">d[i] = -inf;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line">incf[st] = inf;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i] &amp;&amp; d[t] + f[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * incf[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x * (m + <span class="number">1</span>) + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ns, nt;</span><br><span class="line">cin &gt;&gt; ns &gt;&gt; nt &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="built_in">num</span>(n, m) + <span class="number">1</span>;</span><br><span class="line">ed = st + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(t, h, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, -a);</span><br><span class="line"><span class="built_in">add</span>(t, h, inf, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>, a; j &lt;= m; j++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(t, h, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, -a);</span><br><span class="line"><span class="built_in">add</span>(t, h, inf, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= ns; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(b, c);</span><br><span class="line"><span class="built_in">add</span>(st, t, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= nt; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(b, c);</span><br><span class="line"><span class="built_in">add</span>(t, ed, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2294 [HNOI2005]狡猾的商人</title>
      <link href="/2021/11/17/P2294/"/>
      <url>/2021/11/17/P2294/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2294">P2294 [HNOI2005]狡猾的商人</a></p><span id="more"></span><p>直接差分约束即可，找负环判断是否有解。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">3e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, d[N], cnt[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">vis[i] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">d[i] = -INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">cnt[i] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + wt[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + wt[i];</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[edg[i]] &gt; n + <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line">st = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a - <span class="number">1</span>, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a - <span class="number">1</span>, -c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">spfa</span>())</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;true&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;false&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 差分约束 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3275 [SCOI2011]糖果</title>
      <link href="/2021/11/17/P3275/"/>
      <url>/2021/11/17/P3275/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3275">P3275 [SCOI2011]糖果</a></p><span id="more"></span><p>正解是 <code>tarjan</code> ，这里做的是差分约束，复杂度差一些，需要玄学卡过。</p><p>正解：先做操作 $1$ 、$3$ 、$5$ ，缩点，建新图，一个强连通分量上的点值一定是一样的。再做操作 $2$ 、$4$ ，如果是自环，直接无解。再做拓扑排序，如果还有环，则无解。拓扑排序后，统计答案即可。</p><p>差分约束做法：直接做，将 <code>spfa</code> 中的 <code>queue</code> 改为 <code>stack</code> 玄学卡过。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, d[N], cnt[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">d[i] = -INF;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + wt[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + wt[i];</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[t] &gt; n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">if</span> (x == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">2</span>)</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">3</span>)</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">4</span>)</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">5</span>)</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-1&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">tot += d[i];</span><br><span class="line">cout &lt;&lt; tot;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tarjan </tag>
            
            <tag> 最短路 </tag>
            
            <tag> 拓扑排序 </tag>
            
            <tag> 差分约束 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1251 餐巾计划问题</title>
      <link href="/2021/11/17/P1251/"/>
      <url>/2021/11/17/P1251/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1251">P1251 餐巾计划问题</a></p><span id="more"></span><p>题目比较繁琐，也不好想，这里直接给出建图方法。</p><p>拆点，拆为起点和终点，起点的餐巾是旧餐巾，终点的餐巾是新餐巾。对于每一天，从源点连向其起点，流量为所需要的餐巾数，表示每天要处理的旧餐巾数；从终点连向汇点，流量为所需要的餐巾数，表示使用的新餐巾的数量（即每天，从源点获得了旧餐巾，将新餐巾带走）。从源点连向其终点，流量为 $inf$ ，代价为新买餐巾的代价。如果还有下一天，则该天的新餐巾可以转化为下一天的旧餐巾，连边；如果还有快洗完成的一天，就可以将该天的新餐巾转化为快洗完成的那一天的旧餐巾，同时有相应的代价。慢洗同理。</p><p>有一点，很多题解忽略了，就是费用流中的流量问题：如何保证最小费用是最大流？可以发现，最大流的情况即所有连向汇点的流量跑满，意义为每一天都有满足条件的新餐巾转化为旧餐巾。这一题的拆点和其他题不一样，一个点的内部是没有边的，即一天的旧餐巾是不能转化为一天的新餐巾。所以一天的新餐巾的来源：洗的和购买的，而当洗的不够时，为了保证最大流，会从源点获得洗的，从而保证了答案的正确性。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF LLONG_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e3</span> + <span class="number">10</span>, M = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, p, fastt, fastf, slowt, slowf, pre[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> r[N], d[N], incf[N], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        incf[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = INF;</span><br><span class="line">    incf[st] = INF;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[edg[i]] = d[t] + f[i];</span><br><span class="line">                pre[edg[i]] = i;</span><br><span class="line">                incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> t = incf[ed];</span><br><span class="line">        res += t * d[ed];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            wt[pre[i]] -= t;</span><br><span class="line">            wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">long</span> <span class="keyword">long</span> c, <span class="keyword">long</span> <span class="keyword">long</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cin &gt;&gt; r[i];</span><br><span class="line">    cin &gt;&gt; p &gt;&gt; fastt &gt;&gt; fastf &gt;&gt; slowt &gt;&gt; slowf;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, r[i], <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i + n, ed, r[i], <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(ed, i + n, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(st, i + n, INF, p);</span><br><span class="line">        <span class="built_in">add</span>(i + n, st, <span class="number">0</span>, -p);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, i + <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line">            <span class="built_in">add</span>(i + <span class="number">1</span>, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i + fastt &lt;= n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, i + n + fastt, INF, fastf);</span><br><span class="line">            <span class="built_in">add</span>(i + n + fastt, i, <span class="number">0</span>, -fastf);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i + slowt &lt;= n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(i, i + n + slowt, INF, slowf);</span><br><span class="line">            <span class="built_in">add</span>(i + n + slowt, i, <span class="number">0</span>, -slowf);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 拆点 </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2045 方格取数加强版</title>
      <link href="/2021/11/17/P2045/"/>
      <url>/2021/11/17/P2045/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2045">P2045 方格取数加强版</a></p><span id="more"></span><p>拆点，每个格子中流量为 $1$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e3</span> + <span class="number">10</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, k, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">d[i] = -INF;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">incf[st] = INF;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t] ; ~i; i  = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &gt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(incf[t], wt[i]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += d[ed] * t;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">1</span> || x &gt; n || y &lt; <span class="number">1</span> || y &gt; n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * n + y - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">st = n * n * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">ed = n * n * <span class="number">2</span> + <span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="built_in">add</span>(st, <span class="built_in">num</span>(<span class="number">1</span>, <span class="number">1</span>) &lt;&lt; <span class="number">1</span>, k, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(<span class="built_in">num</span>(<span class="number">1</span>, <span class="number">1</span>) &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -a);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> (~h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line"><span class="keyword">if</span> (~h)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(<span class="built_in">num</span>(n, n) &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, k, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, <span class="built_in">num</span>(n, n) &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 拆点 </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4013 数字梯形问题</title>
      <link href="/2021/11/17/P4013/"/>
      <url>/2021/11/17/P4013/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4013">P4013 数字梯形问题</a></p><span id="more"></span><p>权值在点上，所以一定要拆点的。</p><p>子任务 $1$ ：路径不相交。即每个点只能走一次，即点中的流量为 $1$ ，边上的流量无所谓，因为出发点最多只有 $1$ 流量。</p><p>子任务 $2$ ：仅在点上交。即每条边只能走一次，即点中的流量为 $inf$ ，边上的流量为 $1$ 。</p><p>子任务 $3$ ：允许相交，流量为 $inf$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">4e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">-1</span>, cost[<span class="number">40</span>][<span class="number">40</span>], id[<span class="number">40</span>][<span class="number">40</span>];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-0x3f</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line"><span class="built_in">memset</span>(incf, <span class="number">0</span>, <span class="keyword">sizeof</span> incf);</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">incf[st] = INF;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &gt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = ++tot;</span><br><span class="line">ed = ++tot;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i  = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; cost[i][j];</span><br><span class="line">id[i][j] = ++tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = id[i][j];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">1</span>, cost[i][j]);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -cost[i][j]);</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> h1 = id[i + <span class="number">1</span>][j],</span><br><span class="line">h2 = id[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h1 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h1 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h2 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h2 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = id[i][j];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, INF, cost[i][j]);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -cost[i][j]);</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> h1 = id[i + <span class="number">1</span>][j],</span><br><span class="line">h2 = id[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h1 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h1 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h2 &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h2 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m + i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = id[i][j];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, INF, cost[i][j]);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, t &lt;&lt; <span class="number">1</span>, <span class="number">0</span>, -cost[i][j]);</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t &lt;&lt; <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span>, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, ed, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> h1 = id[i + <span class="number">1</span>][j],</span><br><span class="line">h2 = id[i + <span class="number">1</span>][j + <span class="number">1</span>];</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h1 &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h1 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, h2 &lt;&lt; <span class="number">1</span>, INF, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h2 &lt;&lt; <span class="number">1</span>, t &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 拆点 </tag>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4014 分配问题</title>
      <link href="/2021/11/17/P4014/"/>
      <url>/2021/11/17/P4014/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4014">P4014 分配问题</a></p><span id="more"></span><p>裸的带权匹配，分别求最大值和最小值（最长路、最短路），为了简便，我们求最大值的时候将边权变为它的相反数，求最小值的相反数即答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        incf[i] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = INF;</span><br><span class="line">    incf[st] = INF;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[edg[i]] = d[t] + f[i];</span><br><span class="line">                pre[edg[i]] = i;</span><br><span class="line">                incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = incf[ed];</span><br><span class="line">        res += t * d[ed];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            wt[pre[i]] -= t;</span><br><span class="line">            wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = n + <span class="number">1</span>; j &lt; ed; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, j, <span class="number">1</span>, a);</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] += wt[i ^ <span class="number">1</span>];</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">f[i] = -f[i];</span><br><span class="line">f[i ^ <span class="number">1</span>] = -f[i ^ <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; -<span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4016 负载平衡问题</title>
      <link href="/2021/11/17/P4016/"/>
      <url>/2021/11/17/P4016/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4016">P4016 负载平衡问题</a></p><span id="more"></span><p>题目自带流量平衡，按题意直接建图即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">610</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, avg, s[N], d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">incf[st] = INF;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">vis[st] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; s[i];</span><br><span class="line">avg += s[i];</span><br><span class="line"><span class="built_in">add</span>(i, i &lt; n ? i + <span class="number">1</span> : <span class="number">1</span>, INF, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i &lt; n ? i + <span class="number">1</span> : <span class="number">1</span>, i, <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, i &gt; <span class="number">1</span> ? i - <span class="number">1</span> : n, INF, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i &gt; <span class="number">1</span> ? i - <span class="number">1</span> : n, i, <span class="number">0</span>, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">avg /= n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (s[i] &gt; avg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, s[i] - avg, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] &lt; avg)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, avg - s[i], <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4015 运输问题</title>
      <link href="/2021/11/17/P4015/"/>
      <url>/2021/11/17/P4015/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4015">P4015 运输问题</a></p><span id="more"></span><p>自带流量平衡，几乎是裸的费用流。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">150</span>, M = <span class="number">2e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], pre[N], incf[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M], f[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">incf[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = INF;</span><br><span class="line">incf[st] = INF;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[i] &lt; d[edg[i]] &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[i];</span><br><span class="line">pre[edg[i]] = i;</span><br><span class="line">incf[edg[i]] = <span class="built_in">min</span>(wt[i], incf[t]);</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> incf[ed] &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ek</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">spfa</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = incf[ed];</span><br><span class="line">res += t * d[ed];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = ed; i != st; i = edg[pre[i] ^ <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">wt[pre[i]] -= t;</span><br><span class="line">wt[pre[i] ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c, <span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">f[idx] = d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = m + n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i + m, ed, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i + m, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, j + m, INF, a);</span><br><span class="line"><span class="built_in">add</span>(j + m, i, <span class="number">0</span>, -a);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">ek</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] += wt[i ^ <span class="number">1</span>];</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">f[i] = -f[i];</span><br><span class="line">f[i ^ <span class="number">1</span>] = -f[i ^ <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; -<span class="built_in">ek</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 费用流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4313 文理分科</title>
      <link href="/2021/11/17/P4313/"/>
      <url>/2021/11/17/P4313/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4313">P4313 文理分科</a></p><span id="more"></span><p>经典的建图模型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e4</span> + <span class="number">10</span>, M = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, tot, sum, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">5</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">5</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line">tot = ed;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = (i, j);</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="built_in">add</span>(tot, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, tot, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (!a)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">sum += a;</span><br><span class="line"><span class="keyword">int</span> t = (i, j);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="built_in">add</span>(h, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; sum - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SP741 STEAD - Steady Cow Assignment]</title>
      <link href="/2021/11/17/SP741/"/>
      <url>/2021/11/17/SP741/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/STEAD/">SPOJ: STEAD - Steady Cow Assignment</a></p><p><a href="https://www.luogu.com.cn/problem/SP741">LuoGu: SP741 STEAD - Steady Cow Assignment</a></p><span id="more"></span><p>左转P2857</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1030</span>, M = <span class="number">46050</span>;</span><br><span class="line"><span class="keyword">int</span> n, B, st, ed, barn[N], d[N], cur[N], k[<span class="number">1010</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r = l + x - <span class="number">1</span>; r &lt;= B; l++, r++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i ^ <span class="number">1</span>] == st)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] = barn[edg[i ^ <span class="number">1</span>]];</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num = k[edg[i ^ <span class="number">1</span>]][edg[i] - n];</span><br><span class="line"><span class="keyword">if</span> (num &lt; l || num &gt; r)</span><br><span class="line">wt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">dinic</span>() == n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; B;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + B + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= B; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">k[i][a] = j;</span><br><span class="line"><span class="built_in">add</span>(i, a + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(a + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>, a; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; barn[i];</span><br><span class="line"><span class="built_in">add</span>(i, ed, barn[i]);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = B, mid;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; r;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图的最大匹配 </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SP1693 COCONUTS - Coconuts</title>
      <link href="/2021/11/17/SP1693/"/>
      <url>/2021/11/17/SP1693/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/COCONUTS/">SPOJ: COCONUTS - Coconuts</a></p><p><a href="https://www.luogu.com.cn/problem/SP1693">LuoGu: SP1693 COCONUTS - Coconuts</a></p><span id="more"></span><p>左转善意的投票/冠军调查</p>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SP4063 MPIGS - Sell Pigs</title>
      <link href="/2021/11/17/SP4063/"/>
      <url>/2021/11/17/SP4063/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/MPIGS/">SPOJ: MPIGS - Sell Pigs</a></p><p><a href="https://www.luogu.com.cn/problem/SP4063">LuoGu: SP4063 MPIGS - Sell Pigs</a></p><span id="more"></span><p>左转银行家。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">2.002e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, st, ed, k[<span class="number">1010</span>], d[N], cur[N], last[<span class="number">1010</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">cin &gt;&gt; k[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, id; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">while</span> (a--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="keyword">if</span> (!last[id])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, k[id]);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(last[id], i, INF);</span><br><span class="line"><span class="built_in">add</span>(i, last[id], <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">last[id] = i;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(i, ed, b);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4638 [SHOI2011]银行家</title>
      <link href="/2021/11/17/P4638/"/>
      <url>/2021/11/17/P4638/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4638">P4638 [SHOI2011]银行家</a></p><span id="more"></span><p>以下是当时写的题解。</p><p>题目中， 金币从保险柜里面流出， 到达每个人都手中， 求可以取出的最大值。 这不禁让我们联想到了网络最大流， 保险柜正是虚拟源点， 可以流出流量， 而金币正是流量。 这道题目特殊的一点是每一个人取出金币之后， 可以随意调整打开的保险柜的数量。 那么可能因为这次调整多出来的流量是因为两人用了同一个保险柜， 即可能存在的金币的流向如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">客户 1 打开了保险柜 1， 2</span><br><span class="line"></span><br><span class="line">保险柜 1 -&gt; 客户 1</span><br><span class="line"></span><br><span class="line">保险柜 2 -&gt; 客户 1</span><br><span class="line"></span><br><span class="line">此时， 保险柜 1 和 2 以及客户 1 之间可以随便乱搞</span><br><span class="line"></span><br><span class="line">保险柜 1 -&gt; 保险柜 2 （被 “ 你 ” 拿走）</span><br><span class="line"></span><br><span class="line">客户 2 打开了保险柜 2</span><br><span class="line"></span><br><span class="line">此时， 保险柜 2 和客户 2 之间可以随便乱搞</span><br><span class="line"></span><br><span class="line">保险柜 2 -&gt; 客户 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不难发现， 保险柜 1 和 2 与客户 1 和 2 之间金币可以按顺序随意流动， 所以上述过程可以等价于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">客户 1 打开了保险柜 1， 2</span><br><span class="line"></span><br><span class="line">客户 1 十分贪婪， 卷走所有的保险柜 1 和 2 的金币</span><br><span class="line"></span><br><span class="line">客户 2 一来， 看见自己的保险柜 2 被卷走了， 十分生气， 把客户 1 打了一顿， 拿走了他想要的金币</span><br></pre></td></tr></table></figure><p>于是我们可以这样建图：</p><ul><li>建立虚拟源点和汇点；</li></ul><ul><li><p>对于每一个人能开的保险柜， 如果它没有被打开过， 则从虚拟源点到当前的人连一条流量为保险柜金币数量的边， 表示这个人可以从这个保险柜中卷走所有的金币；</p></li><li><p>对于每一个人能开的保险柜， 如果它已经被打开过了， 则从上一次可以开这个保险柜的人到当前的人连一条流量为无限大的边， 表示当前的人可以无限从上一个人索取金币；</p></li><li><p>对于每个人， 向汇点连一条流量为其想要的金币的数量。</p></li></ul><p>可以发现， 对于一个保险柜， 所有可以打开它的人构成了一条链， 可以按顺序随意传播金币。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">610</span>, M = <span class="number">4e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, st, ed, k[<span class="number">2510</span>], d[N], cur[N], last[<span class="number">2510</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">cin &gt;&gt; k[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, id; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">while</span> (a--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="keyword">if</span> (!last[id])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, k[id]);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(last[id], i, INF);</span><br><span class="line"><span class="built_in">add</span>(i, last[id], <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">last[id] = i;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(i, ed, b);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2944 [USACO09MAR]Earthquake Damage 2 G</title>
      <link href="/2021/11/17/P2944/"/>
      <url>/2021/11/17/P2944/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2944">P2944 [USACO09MAR]Earthquake Damage 2 G</a></p><span id="more"></span><p>割点问题，拆点即可。打来电话的农场没有被摧毁，不能割；其他的可以割。所有无法到达源点的点连向汇点，不能割，直接最小割即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">6e3</span> + <span class="number">10</span>, M = <span class="number">2e5</span> +<span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> avai[N];</span><br><span class="line"><span class="keyword">int</span> n, m, k, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">st = <span class="number">1</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a + n, b, INF);</span><br><span class="line"><span class="built_in">add</span>(b, a + n, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b + n, a, INF);</span><br><span class="line"><span class="built_in">add</span>(a, b + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= k; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">avai[a] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">add</span>(a + n, ed, INF);</span><br><span class="line"><span class="built_in">add</span>(ed, a + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!avai[i] &amp;&amp; i != st)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, INF);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2763 试题库问题</title>
      <link href="/2021/11/17/P2763/"/>
      <url>/2021/11/17/P2763/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2763">P2763 试题库问题</a></p><span id="more"></span><p>按照按照题意建图即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N =<span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> k, n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; k &gt;&gt; n;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n + k + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        m += a;</span><br><span class="line">        <span class="built_in">add</span>(i + n, ed, a);</span><br><span class="line">        <span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= a; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; b;</span><br><span class="line">            <span class="built_in">add</span>(i, b + n, <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">add</span>(b + n, i, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">dinic</span>() &lt; m)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;No Solution!&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; i - n &lt;&lt; <span class="string">&quot;: &quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line">            <span class="keyword">if</span> (edg[j] != ed &amp;&amp; wt[j])</span><br><span class="line">                cout &lt;&lt; edg[j] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1646 [国家集训队]happiness]</title>
      <link href="/2021/11/17/P1646/"/>
      <url>/2021/11/17/P1646/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1646">P1646 [国家集训队]happiness</a></p><span id="more"></span><p>经典的建图模型。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span> + <span class="number">10</span>, M = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, ans, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> hd);</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line">tot = ed;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, t, INF);</span><br><span class="line"><span class="built_in">add</span>(t, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, tot, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, t, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(st, ++tot, a);</span><br><span class="line"><span class="built_in">add</span>(tot, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, t, INF);</span><br><span class="line"><span class="built_in">add</span>(t, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(tot, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, tot, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">ans += a;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j),</span><br><span class="line">h = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(++tot, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, tot, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(t, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, t, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(h, tot, INF);</span><br><span class="line"><span class="built_in">add</span>(tot, h, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P6268 [SHOI2002]舞会</title>
      <link href="/2021/11/17/P6268/"/>
      <url>/2021/11/17/P6268/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P6268">P6268 [SHOI2002]舞会</a></p><span id="more"></span><p>跳过舞的男生女生中只能选择一个，即至少割掉一个，直接最小割即可。</p><p>因为不确定男女，所以需要先染色。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e3</span> + <span class="number">10</span>, M = <span class="number">8e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, color[N], d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">color[x] = c;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!color[edg[i]])</span><br><span class="line"><span class="built_in">dfs</span>(edg[i], <span class="number">3</span> - c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a + <span class="number">1</span>, b + <span class="number">1</span>, INF);</span><br><span class="line"><span class="built_in">add</span>(b + <span class="number">1</span>, a + <span class="number">1</span>, INF);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!color[i])</span><br><span class="line"><span class="built_in">dfs</span>(i, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i++)</span><br><span class="line"><span class="keyword">if</span> (color[edg[i]] == <span class="number">1</span>)</span><br><span class="line">wt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (color[i] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; n - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P5030 长脖子鹿放置</title>
      <link href="/2021/11/17/P5030/"/>
      <url>/2021/11/17/P5030/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P5030">P5030 长脖子鹿放置</a></p><span id="more"></span><p>按照套路，先二分图染色，自己手玩，不难发现，一个格点与其所能到达的另一个格点的横（或纵）坐标的奇偶性相反，那么我们可以按行（或列）的奇偶性将这些格点分成两个集合。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span> + <span class="number">10</span>, M = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">8</span>] = &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">-3</span>, <span class="number">-3</span> &#125;,</span><br><span class="line">dy[<span class="number">8</span>] = &#123; <span class="number">3</span>, <span class="number">-3</span>, <span class="number">3</span>, <span class="number">-3</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, k, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">tot = n * m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = tot + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= k; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(a, b);</span><br><span class="line"><span class="keyword">if</span> (vis[t])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">vis[t] = <span class="literal">true</span>;</span><br><span class="line">tot--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (vis[t])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (i &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny) || vis[h])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2812 校园网络[USACO]Network of Schools加强版</title>
      <link href="/2021/11/17/P2812/"/>
      <url>/2021/11/17/P2812/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2812">P2812 校园网络[USACO]Network of Schools加强版</a></p><span id="more"></span><p>这是加强版，左转弱化版。</p>]]></content>
      
      
      
        <tags>
            
            <tag> tarjan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2746 [USACO5.3]校园网Network of Schools</title>
      <link href="/2021/11/17/P2746/"/>
      <url>/2021/11/17/P2746/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2746">P2746 [USACO5.3]校园网Network of Schools</a></p><span id="more"></span><p>字任务 $A$：显然，答案为缩点后入度为 $0$ 的点。</p><p>字任务 $B$ ：至少添加多少边，使得所有点在同一强连通分量。不难发现，所有的点在同一强连通分量时，每个点都可以被到达，也都可以到达其他点，所以入度大于 $0$ ，出度大于 $0$ ，而增加一条边，即选择两个点，其中一个增加入度，其中一个增加出度，所以添加的边数即为入度为 $0$ 的点数和出度为 $0$ 的点数的最大值。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">5e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, din[N], dout[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">int</span> cnt, timestamp, id[N], dfn[N], low[N];</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++timestamp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[edg[i]])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] == low[x])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">id[y] = cnt;</span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; a, a)</span><br><span class="line"><span class="built_in">add</span>(i, a);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i])</span><br><span class="line"><span class="built_in">tarjan</span>(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line"><span class="keyword">if</span> (id[i] != id[edg[j]])</span><br><span class="line">&#123;</span><br><span class="line">dout[id[i]]++;</span><br><span class="line">din[id[edg[j]]]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!din[i])</span><br><span class="line">x++;</span><br><span class="line"><span class="keyword">if</span> (!dout[i])</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (cnt == <span class="number">1</span>)</span><br><span class="line">cout &lt;&lt; <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="built_in">max</span>(x, y);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tarjan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SP2885 WORDRING - Word Rings</title>
      <link href="/2021/11/17/SP2885/"/>
      <url>/2021/11/17/SP2885/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.spoj.com/problems/WORDRING/">SPOJ: WORDRING - Word Rings</a></p><p><a href="https://www.luogu.com.cn/problem/SP2885">LuoGu: SP2885 WORDRING - Word Rings</a></p><span id="more"></span><p>平均值，依然考虑分数规划。设当前二分平均值为 $x$ ，环中有 $k$ 个字符串，长度为 $w _ i$ ，则 $x$ 合法的条件为：<br>$$<br>\begin{aligned}<br>&amp; \frac {\sum _ {i = 1} ^ k w _ i} k \ge x \\<br>\Longrightarrow &amp; \sum _ {i = 1} ^ k w _ i \ge x k \\<br>\Longrightarrow &amp;  \sum _ {i = 1} ^ k w _ i \ge \sum _ {i = 1} ^ k x \\<br>\Longrightarrow &amp;  \sum _ {i = 1} ^ k w _ i - x \ge 0<br>\end{aligned}<br>$$<br>找正环即可。注意到 $n$ 的范围，如果暴力两两判断建边，时空复杂度是不可接受的。一个字符串的有效信息只有前两个字符和后两个字符，将这两组两个字符作为点，一个字符即开头两点到结尾两点的边。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">677</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">bool</span> vis[N], need[N];</span><br><span class="line"><span class="keyword">double</span> d[N];</span><br><span class="line"><span class="keyword">int</span> n, cnt[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">d[i] = cnt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line"><span class="keyword">if</span> (need[i])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">vis[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> times = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + wt[i] - x &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + wt[i] - x;</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (++times &gt; <span class="number">1e4</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[edg[i]] &gt;= n * <span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">char</span> x, <span class="keyword">char</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a = x - <span class="string">&#x27;a&#x27;</span>,</span><br><span class="line">b = y - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> a * <span class="number">26</span> + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> lth;</span><br><span class="line">string str;</span><br><span class="line"><span class="keyword">double</span> l, r, mid;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; n, n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line">lth = str.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">if</span> (lth &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(str[<span class="number">0</span>], str[<span class="number">1</span>]),</span><br><span class="line">h = <span class="built_in">num</span>(str[lth - <span class="number">2</span>], str[lth - <span class="number">1</span>]);</span><br><span class="line">need[t] = need[h] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, lth);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">check</span>(<span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No solution.&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">l = <span class="number">0</span>, r = N;</span><br><span class="line"><span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">l = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 二分 </tag>
            
            <tag> 分数规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2868 [USACO07DEC]Sightseeing Cows G</title>
      <link href="/2021/11/17/P2868/"/>
      <url>/2021/11/17/P2868/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2868">P2868 [USACO07DEC]Sightseeing Cows G</a></p><span id="more"></span><p>每个边都有边权，每个点都有点权，题意即找到一个环，使得经过的点权和与边权和的比值最大，对于一个环，点数和边数一样，我们将所有的点权放在到达该点的边上，记点权为 $f _ i$ ，边权为 $w _ i$ ，经过了 $k$ 条边，则要使得 $\frac {\sum _ {i = 1} ^ k f _ i} {\sum _ {i = 1} ^ k w _ i}$  最大，考虑分数规划。</p><p>设当前二分平均值为 $x$ ，则 $x$ 合法的条件为：<br>$$<br>\begin{aligned}<br>&amp; \frac {\sum _ {i = 1} ^ k f _ i} {\sum _ {i = 1} ^ k w _ i}  \ge x\\<br>\Longrightarrow &amp; \sum _ {i = 1} ^ k f _ i \ge x \sum _ {i = 1} ^ k w _ i\\<br>\Longrightarrow &amp; \sum _ {i = 1} ^ k f _ i - x w _ i \ge 0\\<br>\end{aligned}<br>$$<br>即需要找到一个正环，所有点都可以作为起点，所以都放进队列里做 <code>spfa</code> 最长路即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">5e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">double</span> d[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, cnt[N], f[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">double</span> mid)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">d[i] = cnt[i] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">vis[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[t] + f[t]  - mid * wt[i] &gt; d[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + f[t] - mid * wt[i];</span><br><span class="line">cnt[edg[i]] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (cnt[edg[i]] &gt;= n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; f[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> l = <span class="number">0</span>, r = N, mid;</span><br><span class="line"><span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">&#123;</span><br><span class="line">mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">l = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">r = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf&quot;</span>, l);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 二分 </tag>
            
            <tag> 分数规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>丧心病狂的网络流系列</title>
      <link href="/2021/11/17/%E4%B8%A7%E5%BF%83%E7%97%85%E7%8B%82%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E7%B3%BB%E5%88%97/"/>
      <url>/2021/11/17/%E4%B8%A7%E5%BF%83%E7%97%85%E7%8B%82%E7%9A%84%E7%BD%91%E7%BB%9C%E6%B5%81%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h2 id="概论"><a href="#概论" class="headerlink" title="概论"></a>概论</h2><p>网络流是一个很强大的算法，很多决策类问题都可以转化为网络流，获得不错的效果。</p><p>本系列收录一些正解并非网络流，但完全可以用网络流做的题目。</p><p>以下代码中模板省略。</p><span id="more"></span><h2 id="T1-P2996-USACO10NOV-Visiting-Cows-G-P1352-没有上司的舞会"><a href="#T1-P2996-USACO10NOV-Visiting-Cows-G-P1352-没有上司的舞会" class="headerlink" title="T1 P2996 [USACO10NOV]Visiting Cows G / P1352 没有上司的舞会"></a>T1 <a href="https://www.luogu.com.cn/problem/P2996">P2996 [USACO10NOV]Visiting Cows G</a> / <a href="https://www.luogu.com.cn/problem/P1352">P1352 没有上司的舞会</a></h2><p>这是经典的二选一的最小割模型。由于这张图是一棵树，所以一定能被染色为一个二分图。</p><p>由于题意要我们求最大数量，没有权值，所以将左部点向源点连一条流量为 $1$ 的边，右部点向汇点连一条流量为 $1$ 的边，中间，如果两个端点间有一条边，则在网络中连一条流量为 $inf$ 的边，表示不可割，最小割的意思是最少放弃的点的数量，用总点数减去最小割即为答案。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">color</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    c[x] = k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line">        <span class="keyword">if</span> (!c[edg[i]])</span><br><span class="line">            <span class="built_in">color</span>(edg[i], <span class="number">3</span> - k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> net;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (tree::c[i] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = tree::hd[i]; ~j; j = tree::nxt[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, tree::edg[j], inf);</span><br><span class="line"><span class="built_in">add</span>(tree::edg[j], i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n - <span class="built_in">dinic</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效率不错。</p><h2 id="T2-P1650-田忌赛马"><a href="#T2-P1650-田忌赛马" class="headerlink" title="T2 P1650 田忌赛马"></a>T2 <a href="https://www.luogu.com.cn/problem/P1650">P1650 田忌赛马</a></h2><p>正解是贪心、动态规划，但由题面显然可知这可以用二分图的匹配做，匹配带权值，用费用流解决。</p><h3 id="Code-1-暴力"><a href="#Code-1-暴力" class="headerlink" title="Code#1 暴力"></a>Code#1 暴力</h3><p>直接两两连边。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">st = <span class="number">0</span>, ed = n &lt;&lt; <span class="number">2</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;A[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;B[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (A[i] != B[j])</span><br><span class="line">v = (A[i] &gt; B[j] ? <span class="number">1</span> : <span class="number">-1</span>) * <span class="number">200</span>;</span><br><span class="line"><span class="built_in">add</span>(i, j + n, <span class="number">1</span>, v);</span><br><span class="line"><span class="built_in">add</span>(j + n, i, <span class="number">0</span>, -v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">ek</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时，边数将很大（$O(n ^ 2)$），效率很慢，同时空间比较卡，只能得 <code>40</code> 分，考虑优化。</p><h3 id="Code-2-合并流量"><a href="#Code-2-合并流量" class="headerlink" title="Code#2 合并流量"></a>Code#2 合并流量</h3><p>题目有限制，每一匹马的速度只有 <code>0-100</code> ，所以考虑离散化，将效果相同的点合并。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">A[a]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">B[a]++;</span><br><span class="line">&#125;</span><br><span class="line">st = <span class="number">0</span>, ed = A.<span class="built_in">size</span>() + B.<span class="built_in">size</span>() + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; i : A)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, ++l, i.second, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(l, st, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; i : B)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(++r + A.<span class="built_in">size</span>(), ed, i.second, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, r + A.<span class="built_in">size</span>(), <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">l = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; i : A)</span><br><span class="line">&#123;</span><br><span class="line">++l;</span><br><span class="line">r = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; j : B)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> v = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (i.first != j.first)</span><br><span class="line">v = (i.first &gt; j.first ? <span class="number">1</span> : <span class="number">-1</span>) * <span class="number">200</span>;</span><br><span class="line"><span class="built_in">add</span>(l, ++r + A.<span class="built_in">size</span>(), inf, v);</span><br><span class="line"><span class="built_in">add</span>(r + A.<span class="built_in">size</span>(), l, <span class="number">0</span>, -v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">ek</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>已经完全能通过此题了，并且和正解效率差距极小。</p><p>但是这是在马的速度极其特殊的情况下做的，我们考虑如何拓展。</p><h3 id="Code-3-线段树优化"><a href="#Code-3-线段树优化" class="headerlink" title="Code #3 线段树优化"></a>Code #3 线段树优化</h3><p>将两方马排序，当一方的马确定后，另一方的马一定可分为两个区间，一个区间的马都大于该马，另一区间的马都小于该马，或者还有一个刚好等于该马。一个点向区间的点连边，考虑线段树优化，边的数量的复杂度可降为 $O(n log{n})$ 。</p><p><em>待完成</em></p><h2 id="T3-P1004-NOIP2000-提高组-方格取数"><a href="#T3-P1004-NOIP2000-提高组-方格取数" class="headerlink" title="T3 P1004 [NOIP2000 提高组] 方格取数"></a>T3 <a href="https://www.luogu.com.cn/problem/P1004">P1004 [NOIP2000 提高组] 方格取数</a></h2><p><em>待完成</em></p>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 最小割 </tag>
            
            <tag> 费用流 </tag>
            
            <tag> 待处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-S 2021</title>
      <link href="/2021/11/17/CSP-S-2021/"/>
      <url>/2021/11/17/CSP-S-2021/</url>
      
        <content type="html"><![CDATA[<h1 id="CSP-S2021爆炸记"><a href="#CSP-S2021爆炸记" class="headerlink" title="CSP-S2021爆炸记"></a>CSP-S2021爆炸记</h1><span id="more"></span><p>蒟蒻第一次参加CSP-S，不必说，自然是炸了，机房还有 $A$ 了第一二题的巨佬 @mydcwfy，便更让蒟蒻瑟瑟发抖。</p><p>此刻，夜色已深，机房里的取得好成绩的巨佬们正在玩 <a href="generals.io">generals</a>，只留下蒟蒻一个人在默默地写下这篇记录蒟蒻在 $CSP-S2021$ 赛场上自闭的游记。</p><h2 id="Day-inf"><a href="#Day-inf" class="headerlink" title="$Day -inf$"></a>$Day -inf$</h2><p>蒟蒻在弱省弱校，自然并没有很好的教育资源，教练将视频发给大家，大家便开始卷。蒟蒻自然没法赶上巨佬，在学习进度上一直落后于巨佬们。最后一周晚上停课，从星期三下午开始全天停课，连着之前国庆节 $7$ 天，一直在考试，蒟蒻一次比一次考得差，在考试的前两天，一次考试中只得了 $35$ 分，直接自闭了，但是巨佬们依然稳定在两百多分，下一届是从小学开始学的，参加提高组的初三同学都过了初赛，而蒟蒻昨年连初赛都没过，我觉得我要被单调队列了。</p><h2 id="Day-0"><a href="#Day-0" class="headerlink" title="$Day 0$"></a>$Day 0$</h2><p>上午还在考试，考到中午食堂都没饭了，便去学校对面的商场里吃烤肉自助餐，导致今天上午肚子很痛，还好考试的时候没有发作。</p><p>下午去现场试机，三道图论题，一道很多巨佬都想出来的题，蒟蒻没有想到，只打了暴力。还好试机没有成绩，不然蒟蒻又要考前自闭了。</p><p>吃完饭到九点钟，在机房里听了一场 $Beyond$ 的演唱会。</p><p>晚上和托管的同学玩大富翁，玩了两局，都是第一个破产的，心情跌落到了谷底。他们聊天聊到了两点钟，蒟蒻没有睡好。</p><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="$Day 1$"></a>$Day 1$</h2><p>早上边听歌边复习，感觉什么都没复习到，尝试把扫描线打出来，$WA$ 了，只有二十分，心想就摆烂了。</p><p>下午早早地到了考场，学校的门前放了宣传海报，所有人等着两点钟进考试，便只能看这个。机子和键盘还是蛮熟悉的，所以没有太紧张或好奇。</p><p>拿到题了之后，便开始看。虚拟机里面如所料的没有完整的 $vscode$ $c++$ 拓展，所以没法用，连基本的补全功能都没有，所以虚拟机的唯一用处便成了编译。</p><p>看到第一题，首先想到的是贪心 + 动态规划，但是想不出来怎么做，便先放一放，<code>n &lt;= 5000</code> 只有 $40$ 分，这个暴力分实在是给的太少了，磨磨蹭蹭终于横下心来放弃了想正解，就去看第二题了。</p><p>结果第二题更毒瘤，事实上，如果由符号 <code>*</code> 的题目，我们是之前练习过的，动态规划／记忆化搜索是完全线性时间可以做的，但是有了 <code>*</code> 之后，合法规则立刻变得十分复杂，最暴力的做法 $ 3 ^ n$ 的复杂度，只有 <code>15</code> 分，便再放一放，去看第三题。</p><p>第三题，感觉应该是有一些规律可以寻，因为一共只有 <code>n</code> 种数，每种数出现两次，当一个数的位置确定了，另一个一定是可以确定的，我的思路大概到此结束了，于是先把这个题放一放，去看第四题。</p><p>至此大概用了半小时。</p><p>我耐心地读完了第四题（后来才知道一些巨佬根本没有看这个题），想到的大概是类似于 <a href="https://www.luogu.com.cn/problem/P2598">P2598</a> 的模型，要计算所有黑点和白点交界的边的权值和的最小值，可以想象到，这些边一定将黑色和白色分割成若干部分，但其中一些权值是可以避免的，如果只分成为两部分，那么一些边可以节省，依然是合法的（即将一些颜色令为相同），那么我们就想到了将黑色和白色两种点切开，中间的边就是答案。便自然而然的想到了最小割（正在写的此刻完全不知道正解是什么，巨佬们不要嘲笑蒟蒻），将黑点和超级源点连边，白点和超级汇点连边，中间就是矩阵中的边，跑最小割（最大流）即可。大概在考试前几天，在完成随机绿题 $100$ 道，里面一道树形 $DP$ 的题我用了最小割，就恰巧复习道了网络流，于是我在考场两分钟就打出了正确的 $Dinic$ ，最开始用的 $vector$ 存边，因为有多组数据， $vector$ 可以方便地 $pop_back$ 但后面打网络流的时候想起了双向边编号 <code>^1</code> 的性质，<code>vector.pop_back</code> 就没法用了，所有最后的解决方案是存两张图。几个稍大的样例都可以过了，最后一个在 $Windows$ 下我自己数了要跑五六秒，心里有点悬（忘记可以开 $O2$），于是就在虚拟机又跑，想起开 $O2$ ，使用系统里的 <code>time</code> 命令，得到时间大概 <code>2.7</code> 秒左右，觉得可以接受了，就走了。</p><p>离考试开始过了一个半小时了。</p><p>回头看第三题，不想再想正解，就打了搜索。有一个优化，当一个数的位置确定了，与它相同的那个数的位置也可以确定了，如果搜索到结果不合法，直接结束，可以过“大样例”，觉得 <code>40pts</code> 可以水到。做了近一个小时。</p><p>第二题就直接放了，再看第一题，我猛然发现暴力的复杂度是 $n^3$ ，连 <code>40pts</code> 都拿不到了，枚举两种各分配多少个，枚举每个飞机，枚举所有可用的（那个东西叫什么记不到了），最后的枚举可以用堆优化，选择上个结束时间最小的，复杂度是 $n ^ 2 \log n$ 。半个小时打完就走了。</p><p>第二题太毒瘤了，即使是指数级的暴力我都不知道怎么判读一个串是否合法，就索性直接打表样例，如果不是样例输出 $3 ^ {num(?)} $ ，即随便填的方案。</p><h2 id="估分"><a href="#估分" class="headerlink" title="估分"></a>估分</h2><p>$ 20 - 40 + 0 + 20 - 40 + 80 - 100 = 120- 180$，这是在第四题是正确的情况下，虽然所有样例过了，但我依然觉得很悬。</p><p>各个网站的成绩</p><table><thead><tr><th></th><th>A</th><th>B</th><th>C</th><th>D</th><th>Total</th></tr></thead><tbody><tr><td>LuoGu</td><td>40</td><td>0</td><td>40</td><td>100</td><td>180</td></tr><tr><td>INF</td><td>50</td><td>5</td><td>52</td><td>60</td><td>167</td></tr><tr><td>Hydro</td><td>60</td><td>0</td><td>40</td><td>100</td><td>200</td></tr><tr><td>YouDao</td><td>40</td><td>0</td><td>50</td><td>75</td><td>165</td></tr><tr><td>JiSuanKe</td><td>40</td><td>5</td><td>40</td><td>100</td><td>185</td></tr><tr><td><strong>Min</strong></td><td><strong>40</strong></td><td><strong>0</strong></td><td><strong>40</strong></td><td><strong>60</strong></td><td><strong>140</strong></td></tr><tr><td><strong>Ave</strong></td><td><strong>46</strong></td><td><strong>2</strong></td><td><strong>44.4</strong></td><td><strong>87</strong></td><td><strong>179.4</strong></td></tr></tbody></table><p>实际成绩：45 + 0 + 44 + 60 = 149</p>]]></content>
      
      
      
        <tags>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2774 方格取数问题</title>
      <link href="/2021/11/17/P2774/"/>
      <url>/2021/11/17/P2774/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2774">P2774 方格取数问题</a></p><span id="more"></span><p>左转王者之剑。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">1e8</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4474 王者之剑</title>
      <link href="/2021/11/17/P4474/"/>
      <url>/2021/11/17/P4474/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4474">P4474 王者之剑</a></p><span id="more"></span><p>不难发现，如果取列一个位置的宝石，那么它周围四连通的位置的宝石都是不能取的，于是转化为最大点独立集问题。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">1e8</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span> &#125;,</span><br><span class="line">dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n * m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, a);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">4</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P7368 [USACO05NOV]Asteroids G</title>
      <link href="/2021/11/17/P7368/"/>
      <url>/2021/11/17/P7368/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P7368">P7368 [USACO05NOV]Asteroids G</a></p><span id="more"></span><p>对于一个小行星，要么在行上消除它，要么在列上消除它，即一条边上至少取一个点，即最小点覆盖集。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">6e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, k, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    st = <span class="number">0</span>;</span><br><span class="line">    ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        hd[i] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">add</span>(i + n, ed, <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">        <span class="built_in">add</span>(a, b + n, INF);</span><br><span class="line">        <span class="built_in">add</span>(b + n, a, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3410 拍照</title>
      <link href="/2021/11/17/P3410/"/>
      <url>/2021/11/17/P3410/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3410">P3410 拍照</a></p><span id="more"></span><p>最大权闭合子图。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">3e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]] &amp;&amp; wt[i])</span><br><span class="line"><span class="built_in">dfs</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">tot += a;</span><br><span class="line"><span class="keyword">while</span> (cin &gt;&gt; b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!b)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">add</span>(i, b + m, INF);</span><br><span class="line"><span class="built_in">add</span>(b + m, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m + <span class="number">1</span>, a; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4177 [CEOI2008]order</title>
      <link href="/2021/11/17/P4177/"/>
      <url>/2021/11/17/P4177/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4177">P4177 [CEOI2008]order</a></p><span id="more"></span><p>最大权闭合子图，不一样的是，原来的模型中，一个机器要么买要么不买，一个工作要么做要么不做，但是现在可以租机器做工作，实质上是花费特定的代价让一个机器只做一个工作。原来机器和工作中间只能连接 $inf$ ，因为我们只允许要么放弃工作的价值要么放弃机器的代价，不允许一个机器和一个工作间割，可以发现，此代价可以形象为租机器的代价。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2410</span>, M = <span class="number">5e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c, d; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(st, i, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">tot += a;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= b; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; c &gt;&gt; d;</span><br><span class="line"><span class="built_in">add</span>(i, c + n, d);</span><br><span class="line"><span class="built_in">add</span>(c + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>, a; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2762 太空飞行计划问题</title>
      <link href="/2021/11/17/P2762/"/>
      <url>/2021/11/17/P2762/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2762">P2762 太空飞行计划问题</a></p><span id="more"></span><p>最大权闭合子图。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">6e4</span> + <span class="number">10</span>, M = <span class="number">31e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]] &amp;&amp; wt[i])</span><br><span class="line"><span class="built_in">dfs</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string str;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">getline</span>(cin, str);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; str.<span class="built_in">size</span>(); j++)</span><br><span class="line"><span class="keyword">if</span> (str[j] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, b + m, INF);</span><br><span class="line"><span class="built_in">add</span>(b + m, i, <span class="number">0</span>);</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">b = b * <span class="number">10</span> + str[j] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="built_in">add</span>(i, b + m, INF);</span><br><span class="line"><span class="built_in">add</span>(b + m, i, <span class="number">0</span>);</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i + m, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, i + m, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="built_in">dinic</span>();</span><br><span class="line"><span class="built_in">dfs</span>(st);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">if</span> (vis[i])</span><br><span class="line">cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line"><span class="keyword">if</span> (vis[i])</span><br><span class="line">cout &lt;&lt; i - m &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout &lt;&lt; endl &lt;&lt; tot - res;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3355 骑士共存问题</title>
      <link href="/2021/11/17/P3355/"/>
      <url>/2021/11/17/P3355/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3355">P3355 骑士共存问题</a></p><span id="more"></span><p>左转攻击装置。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span> + <span class="number">10</span>, M = <span class="number">1e8</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">8</span>] = &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">-2</span> &#125;,</span><br><span class="line">dy[<span class="number">8</span>] = &#123; <span class="number">2</span>, <span class="number">-2</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * n + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">tot = n * n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = tot + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(a, b);</span><br><span class="line">vis[t] = <span class="literal">true</span>;</span><br><span class="line">tot--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line"><span class="keyword">if</span> (vis[t])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny) || vis[h])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4174 [NOI2006] 最大获利</title>
      <link href="/2021/11/16/P4174/"/>
      <url>/2021/11/16/P4174/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4174">P4174 [NOI2006] 最大获利</a></p><span id="more"></span><p>最大权闭合图。</p><p>闭合图：一个事件要发生，它需要的所有前提也都一定要发生。</p><p>最大权闭合图构图方法：</p><ol><li>增加源s汇t</li><li>源s连接原图的正权点，容量为相应点权</li><li>原图的负权点连接汇t，容量为相应点权的相反数</li><li>原图边的容量为正无限。</li><li>最大权等于正权和减去最小割</li></ol><p>理解：如果割掉用户的边，那么就舍弃掉一部分收益，可以看做损失；如果割掉中转站的边，那么就付出一定代价，可以看做损失。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">6e4</span> + <span class="number">10</span>, M = <span class="number">31e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[x];</span><br><span class="line">    hd[x] = idx;</span><br><span class="line">    edg[idx] = y;</span><br><span class="line">    wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + m + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i + m, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, i + m, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(st, i, c);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, a + m, INF);</span><br><span class="line"><span class="built_in">add</span>(a + m, i, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i, b + m, INF);</span><br><span class="line"><span class="built_in">add</span>(b + m, i, <span class="number">0</span>);</span><br><span class="line">tot += c;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4304 [TJOI2013]攻击装置</title>
      <link href="/2021/11/16/P4304/"/>
      <url>/2021/11/16/P4304/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4304">P4304 [TJOI2013]攻击装置</a></p><span id="more"></span><p>二分图最小点覆盖：对于一条边至少选择一个点。</p><p>二分图最大独立集：对于一条边只能选择一个点。</p><p>几点性质：</p><ul><li>最小点覆盖 = 最大匹配（换一种方式理解：中间连接 $inf$ 的边，对于一条边要么将左部割掉，要么将右部割掉）</li><li>最大独立集 = 总点数 - 最小点覆盖 = 总点数 - 最大匹配（换一种方式理解：中间连接 $inf$ 的边，对于一条边只能将左部割掉，或只能将右部割掉）</li><li>求方案，做完最大匹配后，从源点开始搜索，经过所有还有可以有流量的边，将访问过的点标记。对于最小点覆盖，选择左部中没有访问过的点和右部中访问过的点；对于最大独立集，选择左部中访问过的点和右部中没有访问过的点。不难发现，搜索的一定是如下进行的：从左部没有匹配的点出发，沿着非匹配边（到右部）-&gt;匹配边（到左部）-&gt;非匹配边（到右部）进行遍历，可以感性的理解一下答案。</li></ul><p>这类问题通常先做二分图的染色（保证这是一个二分图）。</p><p>常见的四连通、日字形八连通染色后都是棋盘状的。所有的点 <code>(x, y)</code> ，<code> x + y &amp; 1</code> 的属于一部，剩下的属于另一部，这样可以跳过染色步骤。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4e4</span> + <span class="number">10</span>, M = <span class="number">1e8</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">8</span>] = &#123; <span class="number">1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">-2</span> &#125;,</span><br><span class="line">dy[<span class="number">8</span>] = &#123; <span class="number">2</span>, <span class="number">-2</span>, <span class="number">2</span>, <span class="number">-2</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> n, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inside</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &gt; <span class="number">0</span> &amp;&amp; y &gt; <span class="number">0</span> &amp;&amp; x &lt;= n &amp;&amp; y &lt;= n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * n + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">tot = n * n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = tot + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">num</span>(i, j);</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (a == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">vis[t] = <span class="literal">true</span>;</span><br><span class="line">tot--;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (i + j &amp; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, t, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">8</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> nx = i + dx[k],</span><br><span class="line">ny = j + dy[k];</span><br><span class="line"><span class="keyword">int</span> h = <span class="built_in">num</span>(nx, ny);</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">inside</span>(nx, ny) || vis[h])</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(t, h, INF);</span><br><span class="line"><span class="built_in">add</span>(h, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(t, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, t, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 二分图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3931 SAC E#1 - 一道难题 Tree</title>
      <link href="/2021/11/16/P3931/"/>
      <url>/2021/11/16/P3931/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3931">P3931 SAC E#1 - 一道难题 Tree</a></p><span id="more"></span><p>要将所有叶子节点与根节点不连通，新建一个点，所有的叶子节点到该点连接一个权值为 <code>inf</code> 的边，表示不可割，再跑最小割即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>, M = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span> <span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (wt[i])</span><br><span class="line">&#123;</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">dfs</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(x, ed, INF);</span><br><span class="line"><span class="built_in">add</span>(ed, x, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; st;</span><br><span class="line">ed = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(st);</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1129 [ZJOI2007] 矩阵游戏</title>
      <link href="/2021/11/16/P1129/"/>
      <url>/2021/11/16/P1129/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1129">P1129 [ZJOI2007] 矩阵游戏</a></p><span id="more"></span><p>稍稍有点不好理解。</p><p>我们将黑色方块看作是其行与其列的匹配，此时原图中有一组匹配，当所有的行和对应的列匹配上时，答案是 <code>YES</code> ，匹配数为 <code>n</code> 。可以发现，交换行、列实际上，是在原匹配中交换匹配，那么匹配数是不会变的，那么问题就转化为原图最大匹配。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">410</span>, M = <span class="number">8e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, tot, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">bool</span> a;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, j + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(j + n, i, <span class="number">0</span>);</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">tot += flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i + n, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (tot &lt; n)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">dinic</span>() == tot)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 二分图的最大匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2055 [ZJOI2009]假期的宿舍</title>
      <link href="/2021/11/16/P2055/"/>
      <url>/2021/11/16/P2055/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2055">P2055 [ZJOI2009]假期的宿舍</a></p><span id="more"></span><p>根据题意二分图匹配建边即可，注意细节的处理。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">5.2e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">bool</span> people[N], bed[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line">idx = <span class="number">-1</span>;</span><br><span class="line">tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; bed[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; people[i];</span><br><span class="line"><span class="keyword">if</span> (!bed[i])</span><br><span class="line">people[i] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">people[i] = people[i] ^ <span class="number">1</span>;</span><br><span class="line">tot += people[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (people[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">bool</span> a;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> ((a || i == j) &amp;&amp; people[i] &amp;&amp; bed[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, j + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(j + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (bed[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i + n, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">dinic</span>() == tot)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;^_^\n&quot;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;T_T\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 二分图的最大匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4001 [ICPC-Beijing 2006]狼抓兔子</title>
      <link href="/2021/11/16/P4001/"/>
      <url>/2021/11/16/P4001/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4001">P4001 [ICPC-Beijing 2006]狼抓兔子</a></p><span id="more"></span><p>正解应该是网格图的最小割转化为对偶图的最短路，这道题弧优化的 <code>dinic</code> 可以卡过。</p><p>对偶图最短路放在 <a href="https://www.luogu.com.cn/problem/P2046">P2046 [NOI2010] 海拔</a> 里介绍。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>, M = <span class="number">12e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (x - <span class="number">1</span>) * m + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="built_in">num</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">ed = <span class="built_in">num</span>(n, m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> x = <span class="built_in">num</span>(i, j),</span><br><span class="line">y = <span class="built_in">num</span>(i, j + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(x, y, a);</span><br><span class="line"><span class="built_in">add</span>(y, x, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(y, x, a);</span><br><span class="line"><span class="built_in">add</span>(y, x, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> x = <span class="built_in">num</span>(i, j),</span><br><span class="line">y = <span class="built_in">num</span>(i + <span class="number">1</span>, j);</span><br><span class="line"><span class="built_in">add</span>(x, y, a);</span><br><span class="line"><span class="built_in">add</span>(y, x, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(y, x, a);</span><br><span class="line"><span class="built_in">add</span>(x, y, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">int</span> x = <span class="built_in">num</span>(i, j),</span><br><span class="line">y = <span class="built_in">num</span>(i + <span class="number">1</span>, j + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(x, y, a);</span><br><span class="line"><span class="built_in">add</span>(y, x, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(y, x, a);</span><br><span class="line"><span class="built_in">add</span>(x, y, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 对偶图最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2857 [USACO06FEB]Steady Cow Assignment G</title>
      <link href="/2021/11/16/P2857/"/>
      <url>/2021/11/16/P2857/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2857">P2857 [USACO06FEB]Steady Cow Assignment G</a></p><span id="more"></span><p>最大值与最小值的跨度最小，考虑二分。首先二分确定跨度，在枚举最小值，即可确定每头牛可以选用的范围。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1030</span>, M = <span class="number">46050</span>;</span><br><span class="line"><span class="keyword">int</span> n, B, st, ed, barn[N], d[N], cur[N], k[<span class="number">1010</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">1</span>, r = l + x - <span class="number">1</span>; r &lt;= B; l++, r++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">wt[i ^ <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i ^ <span class="number">1</span>] == st)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">&#123;</span><br><span class="line">wt[i] = barn[edg[i ^ <span class="number">1</span>]];</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> num = k[edg[i ^ <span class="number">1</span>]][edg[i] - n];</span><br><span class="line"><span class="keyword">if</span> (num &lt; l || num &gt; r)</span><br><span class="line">wt[i] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">wt[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">dinic</span>() == n)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; B;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + B + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= B; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">k[i][a] = j;</span><br><span class="line"><span class="built_in">add</span>(i, a + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(a + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span>, a; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; barn[i];</span><br><span class="line"><span class="built_in">add</span>(i, ed, barn[i]);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = B, mid;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(mid))</span><br><span class="line">r = mid;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; r;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图的最大匹配 </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1361 小M的作物</title>
      <link href="/2021/11/16/P1361/"/>
      <url>/2021/11/16/P1361/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1361">P1361 小M的作物</a></p><span id="more"></span><p>这类问题中，最小割的意义是最小放弃多少价值。两种物品同时选择一方则可以在原来的基础上增加利益，一般新建一个点，从该方向此点连接价值为新增价值的边，在从此点向两种物品连接 $inf$ 的边，表示不可割。那么，只有在两点同时割掉另一方时，此边才可以不被割，即不被放弃。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e3</span> + <span class="number">10</span>, M = <span class="number">3e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="keyword">sizeof</span> - <span class="number">1</span>);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="built_in">add</span>(st, i, a);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line">tot += a;</span><br><span class="line"><span class="built_in">add</span>(i, ed, a);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n + <span class="number">1</span> + <span class="number">1</span>, k, c1, c2, a; i &lt;= n + <span class="number">1</span> + m * <span class="number">2</span>; i += <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; k &gt;&gt; c1 &gt;&gt; c2;</span><br><span class="line">tot += c1 + c2;</span><br><span class="line"><span class="built_in">add</span>(st, i, c1);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(i + <span class="number">1</span>, ed, c2);</span><br><span class="line"><span class="built_in">add</span>(ed, i + <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i, a, INF);</span><br><span class="line"><span class="built_in">add</span>(a, i, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(a, i + <span class="number">1</span>, INF);</span><br><span class="line"><span class="built_in">add</span>(i + <span class="number">1</span>, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1345 [USACO5.4]奶牛的电信Telecowmunication</title>
      <link href="/2021/11/16/P1345/"/>
      <url>/2021/11/16/P1345/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1345">P1345 [USACO5.4]奶牛的电信Telecowmunication</a></p><span id="more"></span><p>割掉若干点，使两点不连通。拆点，裸的最小割。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">2.6e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; st &gt;&gt; ed;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (i == st || i == ed)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, INF);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a + n, b, INF);</span><br><span class="line"><span class="built_in">add</span>(b, a + n, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b + n, a, INF);</span><br><span class="line"><span class="built_in">add</span>(a, b + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2057 [SHOI2007]善意的投票 / [JLOI2010]冠军调查</title>
      <link href="/2021/11/16/P2057/"/>
      <url>/2021/11/16/P2057/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2057">P2057 [SHOI2007]善意的投票 / [JLOI2010]冠军调查</a></p><span id="more"></span><p>稍稍有点不好理解。</p><p>因为要将其分为两个集合，所以考虑最小割，以最小的代价将两种集合割开。现在假设已经完成了决策，正在统计答案。对答案的贡献有两种情况，一种是和自己的主见不同，一种是和自己的朋友的意见不同，考虑如何统计答案。</p><p>对于第一种贡献，将其与自己的主见的一边连边，如果被割向了另一边，则需要代价；对于第二种贡献，将其与自己的所有朋友连边，如果与朋友被割在了两边，那么需要代价。于是建图就清晰了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">310</span>, M = <span class="number">1.8e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span> (a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2472 [SCOI2007]蜥蜴</title>
      <link href="/2021/11/16/P2472/"/>
      <url>/2021/11/16/P2472/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2472">P2472 [SCOI2007]蜥蜴</a></p><span id="more"></span><p>可以理解，石柱的高度即可以经过的蜥蜴的数量的最大值，考虑拆点，将石柱拆为两点，流量为石柱的高度。所有蜥蜴的位置连接源点，流量为 $1$ 。枚举任意两个石柱，如果满足距离限制，则连流量为 $inf$ 的边。能到达边界外的石柱，向汇点连接流量为 $inf$ 的边。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">4100</span>, M = <span class="number">8e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, R, C, D, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">char</span> mp[N][N];</span><br><span class="line">pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; site[N];</span><br><span class="line">map &lt;pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, <span class="keyword">int</span>&gt; num;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span> <span class="params">(pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; x, pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> dx = x.first - y.first,</span><br><span class="line">dy = x.second - y.second;</span><br><span class="line"><span class="keyword">return</span> dx * dx + dy * dy &lt;= D * D;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line">cin &gt;&gt; R &gt;&gt; C &gt;&gt; D;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= R; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= C; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; mp[i][j];</span><br><span class="line"><span class="keyword">if</span> (mp[i][j] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">site[++n] = <span class="built_in">make_pair</span>(i, j);</span><br><span class="line">num[<span class="built_in">make_pair</span>(i, j)] = n;</span><br><span class="line">&#125;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> tx = site[i].first,</span><br><span class="line">ty = site[i].second;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, mp[tx][ty] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (tx - D &lt; <span class="number">1</span> || ty - D &lt; <span class="number">1</span> || tx + D &gt; R || ty + D &gt; C)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i + n, ed, INF);</span><br><span class="line"><span class="built_in">add</span>(ed, i + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= R; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= C; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span> (c != <span class="string">&#x27;L&#x27;</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">tot++;</span><br><span class="line"><span class="keyword">int</span> t = num[<span class="built_in">make_pair</span>(i, j)];</span><br><span class="line"><span class="built_in">add</span>(st, t, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(t, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">check</span>(site[i], site[j]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i + n, j, INF);</span><br><span class="line"><span class="built_in">add</span>(j, i + n, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">add</span>(j + n, i, INF);</span><br><span class="line"><span class="built_in">add</span>(i, j + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; tot - <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1343 地震逃生</title>
      <link href="/2021/11/16/P1343/"/>
      <url>/2021/11/16/P1343/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1343">P1343 地震逃生</a></p><span id="more"></span><p>裸的网络流，直接计算每次能运出的学生数量。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">4e3</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, tot, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">cur[edg[i]] = hd[edg[i]];</span><br><span class="line"><span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; tot;</span><br><span class="line">st = <span class="number">1</span>;</span><br><span class="line">ed = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">if</span> (!res)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Orz Ni Jinan Saint Cow!&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; tot / res + (tot % res ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2766 最长不下降子序列问题</title>
      <link href="/2021/11/16/P2766/"/>
      <url>/2021/11/16/P2766/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2766">P2766 最长不下降子序列问题</a></p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">10</span>, M = <span class="number">2.5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, st, ed, k[N], f[N], d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[ver] = hd[ver];</span><br><span class="line">d[ver] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (ver == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(ver);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(ver, <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[ver] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cin &gt;&gt; k[i];</span><br><span class="line"><span class="keyword">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">f[i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++)</span><br><span class="line"><span class="keyword">if</span> (k[j] &lt;= k[i])</span><br><span class="line">f[i] = <span class="built_in">max</span>(f[i], f[j] + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i; j++)</span><br><span class="line"><span class="keyword">if</span> (k[j] &lt;= k[i] &amp;&amp; f[j] + <span class="number">1</span> == f[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(j + n, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, j + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">s = <span class="built_in">max</span>(s, f[i]);</span><br><span class="line"><span class="keyword">if</span> (f[i] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (f[i] == s)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(n + i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, n + i, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; n &lt;&lt; endl &lt;&lt; n;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> res = <span class="built_in">dinic</span>();</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> ((edg[i ^ <span class="number">1</span>] == st &amp;&amp; edg[i] == <span class="number">1</span>)</span><br><span class="line">|| (edg[i ^ <span class="number">1</span>] == <span class="number">1</span> &amp;&amp; edg[i] == n + <span class="number">1</span>)</span><br><span class="line">|| (edg[i ^ <span class="number">1</span>] == n &amp;&amp; edg[i] == n + n)</span><br><span class="line">|| (edg[i ^ <span class="number">1</span>] == n + n &amp;&amp; edg[i] == ed))</span><br><span class="line">wt[i] = INF;</span><br><span class="line">cout &lt;&lt; res + <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 待处理 </tag>
            
            <tag> DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1402 酒店之王</title>
      <link href="/2021/11/16/P1402/"/>
      <url>/2021/11/16/P1402/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1402">P1402 酒店之王</a></p><span id="more"></span><p>依然是拆点。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">410</span>, M = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, p, q, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[ver] = hd[ver];</span><br><span class="line">d[ver] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (ver == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(ver);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(ver, <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[ver] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> like;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; p &gt;&gt; q;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = p + n + n + q + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = p + <span class="number">1</span>; i &lt;= p + n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= p; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; like;</span><br><span class="line"><span class="keyword">if</span> (like)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, j, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = p + <span class="number">1</span>; i &lt;= p + n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = p + n + <span class="number">1</span>; i &lt;= p + n + n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = p + n + n + <span class="number">1</span>; j &lt; ed; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; like;</span><br><span class="line"><span class="keyword">if</span> (like)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, j, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(j, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = p + n + n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1231 教辅的组成</title>
      <link href="/2021/11/16/P1231/"/>
      <url>/2021/11/16/P1231/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1231">P1231 教辅的组成</a></p><span id="more"></span><p>依然是拆点。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">10</span>, M = <span class="number">1.4e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n1, n2, n3, m1, m2, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[ver] = hd[ver];</span><br><span class="line">d[ver] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (ver == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(ver);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(ver, <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[ver] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; n3;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n1 + n1 + n2 + n3 + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n2; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m1;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m1; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(b, a + n2, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(a + n2, b, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n2 + <span class="number">1</span>; i &lt;= n2 + n1; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, i + n1, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n1, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m2;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b; i &lt;= m2; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a + n2 + n1, b + n2 + n1 + n1, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(b + n2 + n1 + n1, a + n2 + n1, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = n2 + n1 + n1 + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2891 [USACO07OPEN]Dining G</title>
      <link href="/2021/11/16/P2891/"/>
      <url>/2021/11/16/P2891/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2891">P2891 [USACO07OPEN]Dining G</a></p><span id="more"></span><p>不拆点是错误的做法，当一头牛同时连接一种以上食物和一种以上饮料且它们的数量相同时，这依然满足流量守恒定律。因此正确的做法是拆点，保证每头牛经过的流量为 $1$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">410</span>, M = <span class="number">4.6e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, F, D, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[ver] = hd[ver];</span><br><span class="line">d[ver] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (ver == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(ver);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">int</span> ver = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[ver] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">find</span>(ver, <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[ver] = <span class="number">-1</span>;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">res += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; F &gt;&gt; D;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + n + F + D + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= F; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = F + <span class="number">1</span>, fi, di, a; i &lt;= n + F; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; fi &gt;&gt; di;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= fi; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(a, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">add</span>(i, i + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i + n, i, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= di; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="built_in">add</span>(i + n, a + F + n + n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(a + F + n + n, i + n, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = F + n + n + <span class="number">1</span>; i &lt; ed; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 拆点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2754 [CTSC1999]家园 / 星际转移问题</title>
      <link href="/2021/11/16/P2754/"/>
      <url>/2021/11/16/P2754/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2754">P2754 [CTSC1999]家园 / 星际转移问题</a></p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2.5e4</span> + <span class="number">10</span>, M = <span class="number">8e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, k, st, ed, cur[N], d[N], p[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], edg[M], nxt[M], wt[M];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ship</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> h, r, id[<span class="number">30</span>];</span><br><span class="line">&#125;ship[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x == p[x] ? x : p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> day * (n + <span class="number">2</span>) + i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    nxt[++idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(d));</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> ver = edg[i];</span><br><span class="line">            <span class="keyword">if</span> (d[ver] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                d[ver] = d[t] + <span class="number">1</span>;</span><br><span class="line">                cur[ver] = hd[ver];</span><br><span class="line">                <span class="keyword">if</span> (ver == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(ver);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">int</span> ver = edg[i];</span><br><span class="line">        <span class="keyword">if</span> (d[ver] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">find</span>(ver, <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t) d[ver] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">find</span>(st, INF))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">    st = N - <span class="number">2</span>, ed = N - <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(hd, <span class="number">-1</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(hd));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; ++i)</span><br><span class="line">        p[i] = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; ship[i].h &gt;&gt; ship[i].r;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; ship[i].r; ++j)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; ship[i].id[j];</span><br><span class="line">            <span class="keyword">if</span> (ship[i].id[j] == <span class="number">-1</span>)</span><br><span class="line">                ship[i].id[j] = n + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (j)</span><br><span class="line">                p[<span class="built_in">find</span>(ship[i].id[j - <span class="number">1</span>])] = p[<span class="built_in">find</span>(ship[i].id[j])];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">find</span>(<span class="number">0</span>) != <span class="built_in">find</span>(n + <span class="number">1</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">add</span>(st, <span class="built_in">num</span>(<span class="number">0</span>, <span class="number">0</span>), INF);</span><br><span class="line">    <span class="built_in">add</span>(<span class="built_in">num</span>(<span class="number">0</span>, <span class="number">0</span>), st, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">add</span>(<span class="built_in">num</span>(n + <span class="number">1</span>, <span class="number">0</span>), ed, INF);</span><br><span class="line">    <span class="built_in">add</span>(ed, <span class="built_in">num</span>(n + <span class="number">1</span>, <span class="number">0</span>), <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> day = <span class="number">1</span>, res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">add</span>(<span class="built_in">num</span>(n + <span class="number">1</span>, day), ed, INF);</span><br><span class="line">        <span class="built_in">add</span>(ed, <span class="built_in">num</span>(n + <span class="number">1</span>, day), <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">add</span>(<span class="built_in">num</span>(i, day - <span class="number">1</span>), <span class="built_in">num</span>(i, day), INF);</span><br><span class="line">            <span class="built_in">add</span>(<span class="built_in">num</span>(i, day), <span class="built_in">num</span>(i, day - <span class="number">1</span>), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> r = ship[i].r,</span><br><span class="line">                a = ship[i].id[(day - <span class="number">1</span>) % r],</span><br><span class="line">                b = ship[i].id[day % r];</span><br><span class="line">            <span class="built_in">add</span>(<span class="built_in">num</span>(a, day - <span class="number">1</span>), <span class="built_in">num</span>(b, day), ship[i].h);</span><br><span class="line">            <span class="built_in">add</span>(<span class="built_in">num</span>(b, day), <span class="built_in">num</span>(a, day - <span class="number">1</span>), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res += <span class="built_in">dinic</span>();</span><br><span class="line">        <span class="keyword">if</span> (res &gt;= k)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        day++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; day;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
            <tag> 待处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P4171 [JSOI2010] 满汉全席</title>
      <link href="/2021/11/16/P4171/"/>
      <url>/2021/11/16/P4171/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P4171">P4171 [JSOI2010] 满汉全席</a></p><span id="more"></span><p>左转模板</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e6</span> + <span class="number">5</span>, M = <span class="number">2e6</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, id[N], cnt;</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">int</span> dfn[N], low[N], ts;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line">stack &lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++ts;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j = edg[i];</span><br><span class="line"><span class="keyword">if</span> (!dfn[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(j);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[j])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (low[x] == dfn[x])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">id[y] = cnt;</span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">cin &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">    vis[i] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line">    dfn[i] = low[i] = <span class="number">0</span>;</span><br><span class="line">idx = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!stk.<span class="built_in">empty</span>())</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, a, b;</span><br><span class="line"><span class="keyword">char</span> ca, cb;</span><br><span class="line">cin &gt;&gt; ca &gt;&gt; i &gt;&gt; cb &gt;&gt; j;</span><br><span class="line">a = (ca == <span class="string">&#x27;m&#x27;</span>);</span><br><span class="line">b = (cb == <span class="string">&#x27;m&#x27;</span>);</span><br><span class="line">i--, j--;</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span> | !a, j &lt;&lt; <span class="number">1</span> | b);</span><br><span class="line"><span class="built_in">add</span>(j &lt;&lt; <span class="number">1</span> | !b, i &lt;&lt; <span class="number">1</span> | a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i])</span><br><span class="line"><span class="built_in">tarjan</span>(i);</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (id[i &lt;&lt; <span class="number">1</span>] == id[i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;BAD\n&quot;</span>);</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;GOOD\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 2-SAT </tag>
            
            <tag> tarjan </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2-SAT Promlem</title>
      <link href="/2021/11/16/2-SAT-Promlem/"/>
      <url>/2021/11/16/2-SAT-Promlem/</url>
      
        <content type="html"><![CDATA[<p>用于求解逻辑判断的问题。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>, M = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> cnt, stmp, id[N], dfn[N], low[N];</span><br><span class="line">stack&lt;<span class="keyword">int</span>&gt; stk;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[edg[i]])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (low[x] == dfn[x])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">id[y] = cnt;</span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; (n &lt;&lt; <span class="number">1</span>); i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> i, a, j, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;i, &amp;a, &amp;j, &amp;b);</span><br><span class="line">i--, j--;</span><br><span class="line"><span class="built_in">add</span>(i &lt;&lt; <span class="number">1</span> | !a, j &lt;&lt; <span class="number">1</span> | b);</span><br><span class="line"><span class="built_in">add</span>(j &lt;&lt; <span class="number">1</span> | !b, i &lt;&lt; <span class="number">1</span> | a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n &lt;&lt; <span class="number">1</span>; i++)</span><br><span class="line"><span class="keyword">if</span> (!dfn[i])</span><br><span class="line"><span class="built_in">tarjan</span>(i);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">if</span> (id[i &lt;&lt; <span class="number">1</span>] == id[i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;IMPOSSIBLE\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;POSSIBLE\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, id[i &lt;&lt; <span class="number">1</span>] &gt; id[i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 2-SAT </tag>
            
            <tag> tarjan </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3620 [APIO/CTSC 2007] 数据备份</title>
      <link href="/2021/11/16/P3620/"/>
      <url>/2021/11/16/P3620/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3620">P3620 [APIO/CTSC 2007] 数据备份</a></p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX / 2</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, k, ans;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">pos</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> wt, l, r;</span><br><span class="line">&#125;p[N];</span><br><span class="line">priority_queue &lt;pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, vector&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;, greater&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; &gt; q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">p[x].l = p[p[x].l].l;</span><br><span class="line">p[x].r = p[p[x].r].r;</span><br><span class="line">p[p[x].l].r = x;</span><br><span class="line">p[p[x].r].l = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; k &gt;&gt; a;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, b; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; b;</span><br><span class="line">p[i].wt = b - a;</span><br><span class="line">a = b;</span><br><span class="line">p[i].l = i - <span class="number">1</span>;</span><br><span class="line">p[i].r = i + <span class="number">1</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(p[i].wt, i));</span><br><span class="line">&#125;</span><br><span class="line">p[<span class="number">0</span>].wt = p[n].wt = INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (vis[q.<span class="built_in">top</span>().second])</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">pair &lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; x = q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">ans += x.first;</span><br><span class="line">vis[p[x.second].l] = vis[p[x.second].r] = <span class="literal">true</span>;</span><br><span class="line">p[x.second].wt = p[p[x.second].l].wt + p[p[x.second].r].wt - p[x.second].wt;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(p[x.second].wt, x.second));</span><br><span class="line"><span class="built_in">del</span>(x.second);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 待处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3254 圆桌问题</title>
      <link href="/2021/11/16/P3254/"/>
      <url>/2021/11/16/P3254/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3254">P3254 圆桌问题</a></p><span id="more"></span><p>显然是网络流，希望从同一个单位来的代表不在同一个餐桌就餐，即一个单位的代表对于一个餐桌最多选择一个，即流量为 $1$ 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">430</span>, M = <span class="number">81850</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, st, ed, sum, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m + n + <span class="number">1</span>; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> to = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[to] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[to] = hd[to];</span><br><span class="line">d[to] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (to == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(to);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limts)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limts;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limts; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">int</span> to = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[to] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">dfs</span>(to, <span class="built_in">min</span>(limts - res, wt[i]));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[to] = <span class="number">-1</span>;</span><br><span class="line">res += t;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">dfs</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> sum == res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m + n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = m + n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, r; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; r;</span><br><span class="line">sum += r;</span><br><span class="line"><span class="built_in">add</span>(st, i, r);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, c; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(i + m, ed, c);</span><br><span class="line"><span class="built_in">add</span>(ed, i + m, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, j + m, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(j + m, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> flag = <span class="built_in">dinic</span>();</span><br><span class="line">cout &lt;&lt; flag &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (flag)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = hd[i]; ~j; j = nxt[j])</span><br><span class="line"><span class="keyword">if</span> (edg[j] &gt; m &amp;&amp; edg[j] &lt;= m + n &amp;&amp; !wt[j])</span><br><span class="line">cout &lt;&lt; edg[j] - m &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2756 飞行员配对方案问题</title>
      <link href="/2021/11/16/P2756/"/>
      <url>/2021/11/16/P2756/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2756">P2756 飞行员配对方案问题</a></p><span id="more"></span><p>直接二分图的最大匹配即可。</p><p>如何求具体方案？连接两部的边如果有流量，则为匹配。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>, M = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">d[i] = <span class="number">-1</span>;</span><br><span class="line">q.<span class="built_in">push</span>(st);</span><br><span class="line">d[st] = <span class="number">0</span>;</span><br><span class="line">cur[st] = hd[st];</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> to = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[to] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[to] = hd[to];</span><br><span class="line">d[to] = d[t] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (to == ed)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(to);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x == ed)</span><br><span class="line"><span class="keyword">return</span> limit;</span><br><span class="line"><span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line">cur[x] = i;</span><br><span class="line"><span class="keyword">int</span> to = edg[i];</span><br><span class="line"><span class="keyword">if</span> (d[to] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="built_in">dfs</span>(to, <span class="built_in">min</span>(limit - res, wt[i]));</span><br><span class="line"><span class="keyword">if</span> (!t)</span><br><span class="line">d[to] = <span class="number">-1</span>;</span><br><span class="line">res += t;</span><br><span class="line">wt[i] -= t;</span><br><span class="line">wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flow, res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line"><span class="keyword">while</span> (flow = <span class="built_in">dfs</span>(st, INF))</span><br><span class="line">res += flow;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n + <span class="number">1</span>; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line">st = <span class="number">0</span>;</span><br><span class="line">ed = n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(st, i, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(i, st, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = m + <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, ed, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(ed, i, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>; a != <span class="number">-1</span> &amp;&amp; b != <span class="number">-1</span>; )</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">add</span>(b, a, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">dinic</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= idx; i += <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> (edg[i] &gt; m &amp;&amp; edg[i] &lt;= n &amp;&amp; !wt[i])</span><br><span class="line">cout &lt;&lt; edg[i ^ <span class="number">1</span>] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; edg[i] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 二分图的最大匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2740 [USACO4.2]草地排水Drainage Ditches</title>
      <link href="/2021/11/16/P2740/"/>
      <url>/2021/11/16/P2740/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2740">P2740 [USACO4.2]草地排水Drainage Ditches</a></p><span id="more"></span><p>裸的最大流。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 最大流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1462 通往奥格瑞玛的道路</title>
      <link href="/2021/11/16/P1462/"/>
      <url>/2021/11/16/P1462/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1462">P1462 通往奥格瑞玛的道路</a></p><span id="more"></span><p>重点在理解题意。</p><blockquote><p>他想知道，在可以到达奥格瑞玛的情况下，他所经过的所有城市中最多的一次收取的费用的最小值是多少。</p></blockquote><p>最大值的最小值？他会经过很多城市，其中有不同的收费，对于每一条路径会有一个收费的最大值，所有路径中该最大值要尽可能小。</p><p>直接二分限制收费的上限即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF LLONG_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>, M = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> n, m, b, fee[N], dis[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">spfa</span> <span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> maxn)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">vis[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (fee[edg[i]] &lt;= maxn &amp;&amp; dis[t] + wt[i] &lt; dis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">dis[edg[i]] = dis[t] + wt[i];</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dis[n] &gt; b)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> l = <span class="number">0</span>, r = <span class="number">0</span>, mid;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; fee[i];</span><br><span class="line">r = <span class="built_in">max</span>(r, fee[i]);</span><br><span class="line">&#125;</span><br><span class="line">l = <span class="built_in">max</span>(fee[<span class="number">1</span>], fee[n]);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">long</span> <span class="keyword">long</span> i = <span class="number">1</span>, u, v, w; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line"><span class="keyword">if</span> (u == v)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">add</span>(u, v, w);</span><br><span class="line"><span class="built_in">add</span>(v, u, w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">spfa</span>(r))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;AFK&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (l &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line">mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">spfa</span>(mid))</span><br><span class="line">r = mid - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; l;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 二分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2371 [国家集训队]墨墨的等式</title>
      <link href="/2021/11/16/P2371/"/>
      <url>/2021/11/16/P2371/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2371">P2371 [国家集训队]墨墨的等式</a></p><span id="more"></span><p>左转到跳楼机。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF LLONG_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>, M = <span class="number">6e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, mi = INF, a[<span class="number">12</span>];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> l, r, ans, dis[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dis[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">vis[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">if</span> (dis[t] == INF)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">vis[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (dis[t] + wt[i] &lt; dis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">dis[edg[i]] = dis[t] + wt[i];</span><br><span class="line"><span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m &gt;&gt; l &gt;&gt; r &gt;&gt; n;</span><br><span class="line">l--;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, x; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line"><span class="built_in">add</span>(j, (j + x) % n, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">spfa</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (r &gt;= dis[i])</span><br><span class="line">ans += (r - dis[i]) / n + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= dis[i])</span><br><span class="line">ans -= (l - dis[i]) / n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 同余最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P3403 跳楼机</title>
      <link href="/2021/11/16/P3403/"/>
      <url>/2021/11/16/P3403/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P3403">P3403 跳楼机</a></p><span id="more"></span><p>同余最短路经典例题。</p><p>取一种移动方式为向上移动 <code>k</code> 层。不难想到，研究大于等于 <code>k</code> 的楼层没有意义，因为它们都可以从更小的楼层向上。记 <code>d[x]</code> 为通过该方式以外的能够到达的在膜 <code>k</code> 意义 <code>x</code> 的剩余系中的最低层数，那么 <code>d[x] </code> <code>d[x] + k</code> <code>d[x] + 2k</code> 均可以到达，共 <code>(h - d[x]) / k + 1</code> 种。因为按照不同的剩余系统计答案，所以不重不漏，答案即为 $\sum _ i ^ {k - 1} \left \lfloor \frac {h - d[i]} k \right \rfloor  + 1$ 。现在考虑怎么计算答案。对于每一个小于 <code>k</code> 的楼层 <code>i</code> ，对于每一种上升的方式 <code>x</code> ，<code>add(i, (i + x) % k, x)</code> ，求最短路即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF LLONG_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = N &lt;&lt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> h, x, y, z, ans, dis[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[x];</span><br><span class="line">hd[x] = idx;</span><br><span class="line">edg[idx] = y;</span><br><span class="line">wt[idx] = z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x; i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line">queue&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">0</span>);</span><br><span class="line">vis[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">dis[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> x = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">vis[x] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y = edg[i];</span><br><span class="line"><span class="keyword">if</span> (dis[y] &gt; dis[x] + wt[i])</span><br><span class="line">&#123;</span><br><span class="line">dis[y] = dis[x] + wt[i];</span><br><span class="line"><span class="keyword">if</span> (!vis[y])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(y);</span><br><span class="line">vis[y] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; h &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">add</span>(i, (i + y) % x, y);</span><br><span class="line"><span class="built_in">add</span>(i, (i + z) % x, z);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">spfa</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; x; i++)</span><br><span class="line"><span class="keyword">if</span> (dis[i] &lt;= h)</span><br><span class="line">ans += (h - dis[i]) / x + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
            <tag> 同余最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1119 灾后重建</title>
      <link href="/2021/11/16/P1119/"/>
      <url>/2021/11/16/P1119/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1119">P1119 灾后重建</a></p><span id="more"></span><p>随着时间增加，图中的边数也增加，求每个时间的最短路。考虑每增加一条边，就将其在所有道路中更新答案，所以用 <code>floyed</code> 。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">210</span>, M = <span class="number">4e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, t[N], dis[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, a, b, c;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">dis[i][j] = (i == j ? <span class="number">0</span> : INF);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">cin &gt;&gt; t[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">dis[a][b] = dis[b][a] = c;</span><br><span class="line">&#125;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">int</span> nt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">while</span> (t[nt] &lt;= c &amp;&amp; nt &lt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; n; l++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> r = <span class="number">0</span>; r &lt; n; r++)</span><br><span class="line"><span class="keyword">if</span> (dis[l][nt] != INF &amp;&amp; dis[nt][r] != INF)</span><br><span class="line">dis[l][r] = dis[r][l] = <span class="built_in">min</span>(dis[l][r], dis[l][nt] + dis[nt][r]);</span><br><span class="line">nt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t[a] &gt; c || t[b] &gt; c || (dis[a][b] == INF))</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; dis[a][b] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1131 [ZJOI2007] 时态同步</title>
      <link href="/2021/11/15/P1131/"/>
      <url>/2021/11/15/P1131/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1131">P1131 [ZJOI2007] 时态同步</a></p><span id="more"></span><p>显然这是一棵树。调整越靠根节点的树枝调整的代价越少。先找到最深的叶子节点，再从最小的子树开始，把所有子节点调整到同一深度，再调整子树上面的树枝。</p><p>记 <code>d[x]</code> 是 <code>x</code> 到叶子节点的最长距离，对于每一个 <code>x</code> 的子节点，代价为它们的距离差。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>, M = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, st;</span><br><span class="line">LL ans, d[N];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (edg[i] != fa)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">dfs</span>(edg[i], x);</span><br><span class="line">d[x] = <span class="built_in">max</span>(d[x], d[edg[i]] + wt[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (edg[i] != fa)</span><br><span class="line">ans += d[x] - (d[edg[i]] + wt[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;st);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">hd[i] = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, a, b, c; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line"><span class="built_in">add</span>(b, a, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(st, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 树形DP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P1278 单词游戏</title>
      <link href="/2021/11/15/P1278/"/>
      <url>/2021/11/15/P1278/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P1278">P1278 单词游戏</a></p><span id="more"></span><p>显然一个单词的有效信息只有开头字母、结尾字母和它的长度。考虑到 <code>n</code> 的范围很小，可以使用记忆化搜索。记 <code>f[x][vis]</code> 为当前在字母 <code>x</code> 的位置上，已经经过了 <code>vis</code> 的点的最长长度。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> map &lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; num = &#123; &#123;<span class="string">&#x27;A&#x27;</span>, <span class="number">1</span>&#125;,&#123;<span class="string">&#x27;E&#x27;</span>, <span class="number">2</span>&#125;,&#123;<span class="string">&#x27;I&#x27;</span>, <span class="number">3</span>&#125;,&#123;<span class="string">&#x27;O&#x27;</span>, <span class="number">4</span>&#125;,&#123;<span class="string">&#x27;U&#x27;</span>, <span class="number">5</span>&#125; &#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">6</span>, M = <span class="number">22</span>;</span><br><span class="line"><span class="keyword">int</span> m, n, f[N][<span class="number">1</span> &lt;&lt; M];</span><br><span class="line"><span class="keyword">int</span> idx, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> vis)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (f[x][vis])</span><br><span class="line"><span class="keyword">return</span> f[x][vis];</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!((vis &gt;&gt; i) &amp; <span class="number">1</span>))</span><br><span class="line">ans = <span class="built_in">max</span>(ans, <span class="built_in">dfs</span>(edg[i], vis | (<span class="number">1</span> &lt;&lt; i)) + wt[i]);</span><br><span class="line">f[x][vis] = ans;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string s;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line">n = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"><span class="built_in">add</span>(num.<span class="built_in">at</span>(s[<span class="number">0</span>]), num.<span class="built_in">at</span>(s[s.<span class="built_in">size</span>() - <span class="number">1</span>]), s.<span class="built_in">size</span>());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">add</span>(<span class="number">0</span>, i, <span class="number">0</span>);</span><br><span class="line">cout &lt;&lt; <span class="built_in">dfs</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 状态压缩 </tag>
            
            <tag> 记忆化搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2071 座位安排</title>
      <link href="/2021/11/15/P2071/"/>
      <url>/2021/11/15/P2071/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2071">P2071 座位安排</a></p><span id="more"></span><p>直接二分图匹配即可。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 二分图 </tag>
            
            <tag> 二分图的最大匹配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P2024 [NOI2001] 食物链</title>
      <link href="/2021/11/15/P2024/"/>
      <url>/2021/11/15/P2024/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.com.cn/problem/P2024">P2024 [NOI2001] 食物链</a></p><span id="more"></span><p>集合间的关系我们常常考虑用并查集维护，这道题不一样的地方是，还需要考虑吃与被吃的关系，我们考虑使用带边权的并查集。因为其中具有 $A$ 吃 $B$ ，$B$ 吃 $C$ ，$C$ 吃 $A$ 这样的循环关系，考虑用 $mod \quad 3 $ 来维护。对于一个动物 <code>x</code> 到根节点的距离 <code>d[x]</code> ，$ d[x] = 0 (mod \quad 3) $ 表示 <code>x</code> 与根节点是同一种动物，$d[x] = 1 (mod \quad 3)$ 表示 <code>x</code> 吃根节点，$d[x] = 2 (mod \quad 3)$ 表示 <code>x</code> 被根节点吃。</p><p>对于说法 $1$ ，如果两者已经确定了关系，即 $fa(x) = fa(y)$ ，那么判断他们到根节点的距离是否相同即可；否则，将他们合并，更新 <code>x</code> 的父节点的到 <code>y</code> 根节点的距离 <code>dis[p[x]] = (dis[y] - dis[x]) % mod 3</code> 。</p><p> 对于说法 $2$ ，如果两者已经确定了关系，即 $fa(x) = fa(y)$ ，那么判断他们到根节点的距离是否是 <code>x</code> 吃 <code>y</code> 的关系即可，即 <code>dis[x] = (dis[y] + 1) % 3</code> ；否则，更新 <code>x</code> 的父节点的到 <code>y</code> 根节点的距离 <code>dis[p[x]] = (dis[y] - dis[x] + 1) % 3</code> 。</p><p>实现时，注意减法运算后需要将其加为正数后取模，否则答案时错误的。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, k, ans, p[N], dis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fa</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x != p[x])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> px = p[x];</span><br><span class="line">p[x] = <span class="built_in">fa</span>(p[x]);</span><br><span class="line">dis[x] = (dis[x] + dis[px]) % <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">p[i] = i;</span><br><span class="line">dis[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> d, x, y; k; k--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;d, &amp;x, &amp;y);</span><br><span class="line"><span class="keyword">if</span> (x &gt; n || y &gt; n || (x == y &amp;&amp; d == <span class="number">2</span>))</span><br><span class="line">&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (d == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fa</span>(x) == <span class="built_in">fa</span>(y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (dis[x] != dis[y])</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dis[p[x]] = (dis[y] - dis[x] + <span class="number">3</span>) % <span class="number">3</span>;</span><br><span class="line">p[p[x]] = p[y];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (d == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fa</span>(x) == <span class="built_in">fa</span>(y))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (dis[x] != (dis[y] + <span class="number">1</span>) % <span class="number">3</span>)</span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">dis[p[x]] = (dis[y] - dis[x] + <span class="number">4</span>) % <span class="number">3</span>;</span><br><span class="line">p[p[x]] = p[y];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 并查集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性筛和积性函数</title>
      <link href="/2021/11/15/Linear-Sieve-and-Multiplicative-Function/"/>
      <url>/2021/11/15/Linear-Sieve-and-Multiplicative-Function/</url>
      
        <content type="html"><![CDATA[<p>用于线性预处理积性函数的值。</p><span id="more"></span><p>引入一个概念 <code>low</code> 表示一个数的最小质因子的幂。因为一个数只会被它的最小质因子筛出，所以 <code>primes[j] * i</code> 的最小质因子为 <code>primes[j]</code> ，当 <code>i % primes[j] == 0</code> 时，说明 <code>i</code> 也有因子 <code>primes[j]</code>，而 <code>i</code> 是<code>primes[j] * i</code> 的因数，所以 <code>i</code> 的最小质因子也为 <code>prmies[j]</code>，积性函数中计算 <code>f(a * b) = f(a) * f(b)</code> 的条件是 <code>a 与 b 互质</code>，所以将 <code>low[i]</code> 从 <code>a</code> 中分给 <code>b</code> ，两者积不变，保证答案一样，而 <code>a / low[i]</code> 中不含有质因子 <code>primes[j]</code> ，而 <code>b * low[i]</code> 只含有质因子 <code>primes[j]</code> ，从而保证它们互质。</p><p>未筛过的数一定没有 <code>low</code> ，从而代替 <code>vis</code> 数组。</p><p>Take phi as an example.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f[<span class="number">1</span>] = <span class="number">1</span>; <span class="comment">// define f[1]</span></span><br><span class="line">low[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!low[i])</span><br><span class="line">&#123;</span><br><span class="line">primes[++cnt] = i;</span><br><span class="line">f[i] = i - <span class="number">1</span>; <span class="comment">// define f[prime]</span></span><br><span class="line">low[i] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; i * primes[j] &lt; N; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (low[i] == i)</span><br><span class="line">f[i * primes[j]] = f[i] * primes[j]; <span class="comment">// define f[prime ^ k]</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">f[i * primes[j]] = f[i / low[i]] * f[primes[j] * low[i]];</span><br><span class="line">low[i * primes[j]] = low[i] * primes[j];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">f[i * primes[j]] = f[i] * f[primes[j]];</span><br><span class="line">low[i * primes[j]] = primes[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 线性筛 </tag>
            
            <tag> 莫反与积性函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tarjan 模板</title>
      <link href="/2021/11/15/Tarjan-Template/"/>
      <url>/2021/11/15/Tarjan-Template/</url>
      
        <content type="html"><![CDATA[<p>用于图的缩点、求割点和桥</p><span id="more"></span><h2 id="Strongly-Connected-Component"><a href="#Strongly-Connected-Component" class="headerlink" title="Strongly Connected Component"></a>Strongly Connected Component</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line">vis[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (vis[edg[i]])</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] == low[x])</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">vis[y] = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">&#125; <span class="keyword">while</span> (y != x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Double-Connected-Component"><a href="#Double-Connected-Component" class="headerlink" title="Double Connected Component"></a>Double Connected Component</h2><h3 id="Edge-Double-Connected-Component"><a href="#Edge-Double-Connected-Component" class="headerlink" title="Edge Double Connected Component"></a>Edge Double Connected Component</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] &lt; low[edg[i]])</span><br><span class="line">            &#123;</span><br><span class="line">bridge[i] = bridge[i ^ <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">int</span> y = stk.<span class="built_in">top</span>();</span><br><span class="line">                <span class="keyword">while</span> (y != x)</span><br><span class="line">                &#123;</span><br><span class="line">                <span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Vertex-Double-Connected-Component"><a href="#Vertex-Double-Connected-Component" class="headerlink" title="Vertex Double Connected Component"></a>Vertex Double Connected Component</h3><h4 id="Calculate-Bridges-amp-Product-DAG"><a href="#Calculate-Bridges-amp-Product-DAG" class="headerlink" title="Calculate Bridges &amp; Product DAG"></a>Calculate Bridges &amp; Product DAG</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line">stk.<span class="built_in">push</span>(x);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line"><span class="keyword">if</span> (!dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i]);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (dfn[x] &lt;= low[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> y;</span><br><span class="line">cnt++;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">y = stk.<span class="built_in">top</span>();</span><br><span class="line">stk.<span class="built_in">pop</span>();</span><br><span class="line">v[cnt].<span class="built_in">push_back</span>(y);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125; <span class="keyword">while</span> (y != edg[i]);</span><br><span class="line">v[cnt].<span class="built_in">push_back</span>(x);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">cut[x] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">add</span>(x, n + cnt);</span><br><span class="line"><span class="built_in">add</span>(n + cnt, x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Calculate-Cut-Point"><a href="#Calculate-Cut-Point" class="headerlink" title="Calculate Cut Point"></a>Calculate Cut Point</h4><p>Check the root point specially.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> rt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">dfn[x] = low[x] = ++stmp;</span><br><span class="line"><span class="keyword">int</span> son = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = hd[x]; ~i; i = nxt[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (dfn[edg[i]])</span><br><span class="line">&#123;</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], dfn[edg[i]]);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">son++;</span><br><span class="line"><span class="built_in">tarjan</span>(edg[i], rt);</span><br><span class="line">low[x] = <span class="built_in">min</span>(low[x], low[edg[i]]);</span><br><span class="line"><span class="keyword">if</span> (low[edg[i]] &gt;= dfn[x] &amp;&amp; x != rt)</span><br><span class="line">flag[x] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x == rt &amp;&amp; son &gt;= <span class="number">2</span>)</span><br><span class="line">flag[x] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> tarjan </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最短路模板</title>
      <link href="/2021/11/15/Shortest-Path-Template/"/>
      <url>/2021/11/15/Shortest-Path-Template/</url>
      
        <content type="html"><![CDATA[<p>用于求解图的最短路问题。</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, dis[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line">&#125;k[M];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bellman_ford</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line">dis[st] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">dis[k[j].b] = <span class="built_in">min</span>(dis[k[j].b], dis[k[j].a] + k[j].c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; st;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">cin &gt;&gt; k[i].a &gt;&gt; k[i].b &gt;&gt; k[i].c;</span><br><span class="line"><span class="built_in">bellman_ford</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, dis[N];</span><br><span class="line"><span class="keyword">int</span> wt[M], hd[M], nxt[M], edg[M], idx;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bellman_ford_with_queue</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dis[i] = INF;</span><br><span class="line">    dis[st] = <span class="number">0</span>;</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    vis[st] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        vis[t] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (dis[t] + wt[i] &lt; dis[edg[i]])</span><br><span class="line">            &#123;</span><br><span class="line">                dis[edg[i]] = dis[t] + wt[i];</span><br><span class="line">                <span class="keyword">if</span> (!vis[edg[i]])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">                    vis[edg[i]] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    wt[++idx] = c;</span><br><span class="line">    edg[idx] = b;</span><br><span class="line">    nxt[idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; st;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a, b, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">bellman_ford_with_queue</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, dis[N], path[N][N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">dis[i] = INF;</span><br><span class="line">dis[st] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (!vis[j] &amp;&amp; (dis[j] &lt; dis[t] || !t ))</span><br><span class="line">t = j;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (path[t][j] != INF &amp;&amp; dis[t] != INF)</span><br><span class="line">dis[j] = <span class="built_in">min</span>(dis[j], dis[t] + path[t][j]);</span><br><span class="line">vis[t] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; st;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">path[i][j] = INF;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">path[a][b] = <span class="built_in">min</span>(path[a][b],c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dijkstra</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> st, n, m, dis[N];</span><br><span class="line"><span class="keyword">int</span> wt[M], edg[M], hd[M], nxt[M], idx;</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dijkstra_with_heap</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dis[i] = INF;</span><br><span class="line">    dis[st] = <span class="number">0</span>;</span><br><span class="line">    priority_queue&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;, vector&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt;, greater&lt;pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; &gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(<span class="number">0</span>, st));</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; t = q.<span class="built_in">top</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span> (vis[t.second])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        vis[t.second] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t.second]; i; i = nxt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> j = edg[i];</span><br><span class="line">            <span class="keyword">if</span> (dis[j] &gt; t.first + wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dis[j] = t.first + wt[i];</span><br><span class="line">                q.<span class="built_in">push</span>(<span class="built_in">make_pair</span>(dis[j], j));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    edg[++idx] = b;</span><br><span class="line">    wt[idx] = c;</span><br><span class="line">    nxt[idx] = hd[a];</span><br><span class="line">    hd[a] = idx;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; st;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        <span class="built_in">add</span>(a, b, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dijkstra_with_heap</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; dis[i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;climits&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INF INT_MAX</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, st, ed, dis[N][N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                <span class="keyword">if</span> (dis[i][k] != INF &amp;&amp; dis[k][j] != INF)</span><br><span class="line">                    dis[i][j] = <span class="built_in">min</span>(dis[i][j], dis[i][k] + dis[k][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, c;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m &gt;&gt; st;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (i == j)</span><br><span class="line">                dis[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                dis[i][j] = INF;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">        dis[a][b] = <span class="built_in">min</span>(c, dis[a][b]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">floyd</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        cout &lt;&lt; dis[st][i] &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Which-to-choose"><a href="#Which-to-choose" class="headerlink" title="Which to choose"></a>Which to choose</h2><ul><li>Single-Source without cycle of minus length: dijkstrea_with_heap;</li><li>Single-Source with cycle of minus length: bellman_ford_with_queue;</li><li>Single-Source with cycle of minus length and limit on the number of edges: bellman_ford</li><li>Multi-source: floyd</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 最短路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最大流模板</title>
      <link href="/2021/11/15/Max-Flow-Template/"/>
      <url>/2021/11/15/Max-Flow-Template/</url>
      
        <content type="html"><![CDATA[<p>dinic</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = + <span class="number">10</span>, M = + <span class="number">10</span>, inf = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">int</span> n, st, ed, d[N], cur[N];</span><br><span class="line"><span class="keyword">int</span> idx = <span class="number">-1</span>, hd[N], nxt[M], edg[M], wt[M];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = st; i &lt;= ed; i++)</span><br><span class="line">        d[i] = <span class="number">-1</span>;</span><br><span class="line">    d[st] = <span class="number">0</span>;</span><br><span class="line">    cur[st] = hd[st];</span><br><span class="line">    queue &lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(st);</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = hd[t]; ~i; i = nxt[i])</span><br><span class="line">            <span class="keyword">if</span> (d[edg[i]] == <span class="number">-1</span> &amp;&amp; wt[i])</span><br><span class="line">            &#123;</span><br><span class="line">                cur[edg[i]] = hd[edg[i]];</span><br><span class="line">                d[edg[i]] = d[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (edg[i] == ed)</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                q.<span class="built_in">push</span>(edg[i]);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">exploit</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> limit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == ed)</span><br><span class="line">        <span class="keyword">return</span> limit;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cur[x]; ~i &amp;&amp; res &lt; limit; i = nxt[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cur[x] = i;</span><br><span class="line">        <span class="keyword">if</span> (d[edg[i]] == d[x] + <span class="number">1</span> &amp;&amp; wt[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> t = <span class="built_in">exploit</span>(edg[i], <span class="built_in">min</span>(wt[i], limit - res));</span><br><span class="line">            <span class="keyword">if</span> (!t)</span><br><span class="line">                d[edg[i]] = <span class="number">-1</span>;</span><br><span class="line">            wt[i] -= t;</span><br><span class="line">            wt[i ^ <span class="number">1</span>] += t;</span><br><span class="line">            res += t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>, flow;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">bfs</span>())</span><br><span class="line">        <span class="keyword">while</span> (flow = <span class="built_in">exploit</span>(st, inf))</span><br><span class="line">            res += flow;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nxt[++idx] = hd[a];</span><br><span class="line">hd[a] = idx;</span><br><span class="line">edg[idx] = b;</span><br><span class="line">wt[idx] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 最大流 </tag>
            
            <tag> 最小割 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主定理</title>
      <link href="/2021/11/15/Master-Theorem/"/>
      <url>/2021/11/15/Master-Theorem/</url>
      
        <content type="html"><![CDATA[<p>$$<br>If \quad T(n) = aT(\left \lceil \frac{n}{b} \right \rceil ) + O(n ^ d),<br>$$</p><p>$$<br>then:T(n) = \begin{cases}O(n ^ d) \quad if \quad d &gt; \log_{b}{a}<br> \\O(n ^ d \log n) \quad if \quad d = \log_{b}{a}<br> \\O(n ^ {\log_{b}{a}}) \quad if \quad d &lt; \log_{b}{a}<br>\end{cases}<br>$$</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求逆元的方法</title>
      <link href="/2021/11/15/Methods-to-Calculate-Inverse-Elements/"/>
      <url>/2021/11/15/Methods-to-Calculate-Inverse-Elements/</url>
      
        <content type="html"><![CDATA[<p>用于将除法运算转化为乘法运算。</p><span id="more"></span><p>All following methods are all carried out under the condition that there is an inverse element.</p><p>Problem : </p><ul><li>Calculating $a$’s inverse element (mod $b$).</li><li>Calculating $n$ inverse elements.</li></ul><p>Calculate $gcd(a, b)$ to check if there is an inverse element.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">check</span>(b % a, a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Brute-Force"><a href="#Brute-Force" class="headerlink" title="Brute Force"></a>Brute Force</h2><p>Complexity: $O(n)$ .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; ; i++)</span><br><span class="line"><span class="keyword">if</span> (i * a % b == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">&#125;     </span><br></pre></td></tr></table></figure><h2 id="Euler-Theorem"><a href="#Euler-Theorem" class="headerlink" title="Euler Theorem"></a>Euler Theorem</h2><p>Complexity: Pretreating $n$ $phi[]s$  : $O(n + \log b)$ ; Calculating one $phi$ : $O(\sqrt b + \log b)$ .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span> <span class="params">(<span class="keyword">int</span> n)</span> <span class="comment">// Pretreating n phi[]s </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!vis[i])</span><br><span class="line">&#123;</span><br><span class="line">            primes[++cnt] = i;</span><br><span class="line">            phi[i] = i - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= cnt &amp;&amp; primes[j] * i &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            vis[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[primes[j] * i] = phi[i] * primes[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">            phi[primes[j] * i] = phi[i] * (primes[j] - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Phi</span> <span class="params">(<span class="keyword">int</span> x)</span> <span class="comment">//Calculating one phi</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= x; i++)</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">            res = res / i * (i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (x % i == <span class="number">0</span>)</span><br><span class="line">                x /= i;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>)</span><br><span class="line">        res = res / x * (x - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binpow</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span> % mod, b = x % mod;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &amp; <span class="number">1</span>)</span><br><span class="line">            res = res * b % mod;</span><br><span class="line">       b = b * b % mod;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">binpow</span>(a, phi[b] - <span class="number">1</span>, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Fermat’s-Little-Theorem"><a href="#Fermat’s-Little-Theorem" class="headerlink" title="Fermat’s Little Theorem"></a>Fermat’s Little Theorem</h3><p>Used when $ b \in Primes$ .</p><p>Complexity: $O(\log b)$ .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binpow</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> k, <span class="keyword">int</span> mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">1</span> % mod, b = x % mod;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &amp; <span class="number">1</span>)</span><br><span class="line">            res = res * b % mod;</span><br><span class="line">       b = b * b % mod;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">binpow</span>(a, b - <span class="number">2</span>, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Extended-Euclidean-Algorithm"><a href="#Extended-Euclidean-Algorithm" class="headerlink" title="Extended Euclidean Algorithm"></a>Extended Euclidean Algorithm</h2><p>Complexity: $O(\log a + \log b))$ .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span>&amp; x, <span class="keyword">int</span>&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= a / b * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span> <span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y;</span><br><span class="line">    <span class="built_in">exgcd</span>(a, b, x, y);</span><br><span class="line">    <span class="keyword">return</span> (x % b + b) % b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Linear-Recurrence"><a href="#Linear-Recurrence" class="headerlink" title="Linear Recurrence"></a>Linear Recurrence</h2><p>Complexity: Pretreating $n$ $inv[]s$  : $O(n)$ ; Calculating one $inv$ : $O(\log a)$ .</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span> <span class="params">(<span class="keyword">int</span> n)</span> <span class="comment">// Pretreating n inv[]s </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">inv[i] = (b - (b / i)) * inv[b % i] % b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span> <span class="params">(<span class="keyword">int</span> a)</span> <span class="comment">//Calculating one inv</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> (b - (b / i)) * <span class="built_in">inv</span>(b % a) % b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 模板 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 拓展欧几里得定理 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
